
;; Function palavra_reservada (palavra_reservada, funcdef_no=17, decl_uid=4950, cgraph_uid=17, symbol_order=33)

palavra_reservada (char * lex)
{
  int postab;
  int D.5574;

  <bb 2> :
  postab = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = &lista_pal[postab].palavra;
  _2 = strcmp (lex, _1);
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.5574 = lista_pal[postab].token;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  postab = postab + 1;

  <bb 6> :
  _3 = &lista_pal[postab].palavra;
  _4 = strcmp ("fimtabela", _3);
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.5574 = 1;

  <bb 8> :
<L5>:
  return D.5574;

}



;; Function le_token (le_token, funcdef_no=18, decl_uid=4958, cgraph_uid=18, symbol_order=34)

le_token (char * st, char * lex)
{
  char c;
  int posl;
  int fim;
  int estado;
  int D.5594;

  <bb 2> :
  estado = 0;
  fim = 0;
  posl = 0;
  pos.0_1 = pos;
  posColuna = pos.0_1;
  goto <bb 154>; [INV]

  <bb 3> :
  pos.1_2 = pos;
  _3 = (sizetype) pos.1_2;
  _4 = st + _3;
  c = *_4;
  posl.2_5 = posl;
  posl = posl.2_5 + 1;
  _6 = (sizetype) posl.2_5;
  _7 = lex + _6;
  *_7 = c;
  switch (estado) <default: <L157> [INV], case 0: <L1> [INV], case 1: <L95> [INV], case 2: <L104> [INV], case 3: <L113> [INV], case 4: <L117> [INV], case 5: <L124> [INV], case 6: <L129> [INV], case 7: <L136> [INV], case 8: <L143> [INV], case 9: <L151> [INV]>

  <bb 4> :
<L1>:
  if (c > 96)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  if (c <= 122)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (c > 64)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  if (c <= 90)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (c == 95)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  pos.3_8 = pos;
  _9 = pos.3_8 + 1;
  pos = _9;
  estado = 1;
  estado_anterior = 0;
  goto <bb 154>; [INV]

  <bb 10> :
  if (c > 47)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  if (c <= 57)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  if (c == 48)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  pos.4_10 = pos;
  _11 = pos.4_10 + 1;
  pos = _11;
  estado = 8;
  estado_anterior = 0;
  goto <bb 154>; [INV]

  <bb 14> :
  pos.5_12 = pos;
  _13 = pos.5_12 + 1;
  pos = _13;
  estado = 2;
  estado_anterior = 0;
  goto <bb 154>; [INV]

  <bb 15> :
  if (c == 46)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  pos.6_14 = pos;
  _15 = pos.6_14 + 1;
  pos = _15;
  estado = 3;
  estado_anterior = 0;
  goto <bb 154>; [INV]

  <bb 17> :
  if (c == 61)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  pos.7_16 = pos;
  _17 = pos.7_16 + 1;
  pos = _17;
  pos.8_18 = pos;
  _19 = (sizetype) pos.8_18;
  _20 = st + _19;
  c = *_20;
  if (c == 61)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  posl.9_21 = posl;
  posl = posl.9_21 + 1;
  _22 = (sizetype) posl.9_21;
  _23 = lex + _22;
  *_23 = 61;
  _24 = (sizetype) posl;
  _25 = lex + _24;
  *_25 = 0;
  pos.10_26 = pos;
  _27 = pos.10_26 + 1;
  pos = _27;
  estado_anterior = 0;
  D.5594 = 61;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 20> :
  _28 = (sizetype) posl;
  _29 = lex + _28;
  *_29 = 0;
  D.5594 = 43;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 21> :
  if (c == 33)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  pos.11_30 = pos;
  _31 = pos.11_30 + 1;
  pos = _31;
  pos.12_32 = pos;
  _33 = (sizetype) pos.12_32;
  _34 = st + _33;
  c = *_34;
  if (c == 61)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  posl.13_35 = posl;
  posl = posl.13_35 + 1;
  _36 = (sizetype) posl.13_35;
  _37 = lex + _36;
  *_37 = 61;
  _38 = (sizetype) posl;
  _39 = lex + _38;
  *_39 = 0;
  pos.14_40 = pos;
  _41 = pos.14_40 + 1;
  pos = _41;
  estado_anterior = 0;
  D.5594 = 62;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 24> :
  _42 = (sizetype) posl;
  _43 = lex + _42;
  *_43 = 0;
  D.5594 = 63;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 25> :
  if (c == 63)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _44 = (sizetype) posl;
  _45 = lex + _44;
  *_45 = 0;
  pos.15_46 = pos;
  _47 = pos.15_46 + 1;
  pos = _47;
  estado_anterior = 0;
  D.5594 = 64;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 27> :
  if (c == 43)
    goto <bb 28>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 28> :
  pos.16_48 = pos;
  _49 = pos.16_48 + 1;
  pos = _49;
  pos.17_50 = pos;
  _51 = (sizetype) pos.17_50;
  _52 = st + _51;
  c = *_52;
  if (c == 43)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  posl.18_53 = posl;
  posl = posl.18_53 + 1;
  _54 = (sizetype) posl.18_53;
  _55 = lex + _54;
  *_55 = 43;
  _56 = (sizetype) posl;
  _57 = lex + _56;
  *_57 = 0;
  pos.19_58 = pos;
  _59 = pos.19_58 + 1;
  pos = _59;
  estado_anterior = 0;
  D.5594 = 60;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 30> :
  if (c == 61)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  posl.20_60 = posl;
  posl = posl.20_60 + 1;
  _61 = (sizetype) posl.20_60;
  _62 = lex + _61;
  *_62 = 61;
  _63 = (sizetype) posl;
  _64 = lex + _63;
  *_64 = 0;
  pos.21_65 = pos;
  _66 = pos.21_65 + 1;
  pos = _66;
  estado_anterior = 0;
  D.5594 = 53;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 32> :
  _67 = (sizetype) posl;
  _68 = lex + _67;
  *_68 = 0;
  D.5594 = 44;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 33> :
  if (c == 45)
    goto <bb 34>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 34> :
  pos.22_69 = pos;
  _70 = pos.22_69 + 1;
  pos = _70;
  pos.23_71 = pos;
  _72 = (sizetype) pos.23_71;
  _73 = st + _72;
  c = *_73;
  if (c == 45)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  posl.24_74 = posl;
  posl = posl.24_74 + 1;
  _75 = (sizetype) posl.24_74;
  _76 = lex + _75;
  *_76 = 45;
  _77 = (sizetype) posl;
  _78 = lex + _77;
  *_78 = 0;
  pos.25_79 = pos;
  _80 = pos.25_79 + 1;
  pos = _80;
  estado_anterior = 0;
  D.5594 = 59;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 36> :
  if (c == 61)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  posl.26_81 = posl;
  posl = posl.26_81 + 1;
  _82 = (sizetype) posl.26_81;
  _83 = lex + _82;
  *_83 = 61;
  _84 = (sizetype) posl;
  _85 = lex + _84;
  *_85 = 0;
  pos.27_86 = pos;
  _87 = pos.27_86 + 1;
  pos = _87;
  estado_anterior = 0;
  D.5594 = 52;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 38> :
  _88 = (sizetype) posl;
  _89 = lex + _88;
  *_89 = 0;
  D.5594 = 45;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 39> :
  if (c == 42)
    goto <bb 40>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 40> :
  pos.28_90 = pos;
  _91 = pos.28_90 + 1;
  pos = _91;
  pos.29_92 = pos;
  _93 = (sizetype) pos.29_92;
  _94 = st + _93;
  c = *_94;
  if (c == 61)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  posl.30_95 = posl;
  posl = posl.30_95 + 1;
  _96 = (sizetype) posl.30_95;
  _97 = lex + _96;
  *_97 = 61;
  _98 = (sizetype) posl;
  _99 = lex + _98;
  *_99 = 0;
  pos.31_100 = pos;
  _101 = pos.31_100 + 1;
  pos = _101;
  estado_anterior = 0;
  D.5594 = 54;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 42> :
  _102 = (sizetype) posl;
  _103 = lex + _102;
  *_103 = 0;
  D.5594 = 46;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 43> :
  if (c == 47)
    goto <bb 44>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 44> :
  pos.32_104 = pos;
  _105 = pos.32_104 + 1;
  pos = _105;
  pos.33_106 = pos;
  _107 = (sizetype) pos.33_106;
  _108 = st + _107;
  c = *_108;
  if (c == 61)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  posl.34_109 = posl;
  posl = posl.34_109 + 1;
  _110 = (sizetype) posl.34_109;
  _111 = lex + _110;
  *_111 = 61;
  _112 = (sizetype) posl;
  _113 = lex + _112;
  *_113 = 0;
  pos.35_114 = pos;
  _115 = pos.35_114 + 1;
  pos = _115;
  estado_anterior = 0;
  D.5594 = 55;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 46> :
  _116 = (sizetype) posl;
  _117 = lex + _116;
  *_117 = 0;
  D.5594 = 47;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 47> :
  if (c == 37)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  pos.36_118 = pos;
  _119 = pos.36_118 + 1;
  pos = _119;
  pos.37_120 = pos;
  _121 = (sizetype) pos.37_120;
  _122 = st + _121;
  c = *_122;
  _123 = (sizetype) posl;
  _124 = lex + _123;
  *_124 = 0;
  D.5594 = 48;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 49> :
  if (c == 124)
    goto <bb 50>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 50> :
  pos.38_125 = pos;
  _126 = pos.38_125 + 1;
  pos = _126;
  pos.39_127 = pos;
  _128 = (sizetype) pos.39_127;
  _129 = st + _128;
  c = *_129;
  if (c == 124)
    goto <bb 51>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 51> :
  posl.40_130 = posl;
  posl = posl.40_130 + 1;
  _131 = (sizetype) posl.40_130;
  _132 = lex + _131;
  *_132 = 124;
  _133 = (sizetype) posl;
  _134 = lex + _133;
  *_134 = 0;
  pos.41_135 = pos;
  _136 = pos.41_135 + 1;
  pos = _136;
  estado_anterior = 0;
  D.5594 = 67;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 52> :
  D.5594 = 102;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 53> :
  if (c == 38)
    goto <bb 54>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 54> :
  pos.42_137 = pos;
  _138 = pos.42_137 + 1;
  pos = _138;
  pos.43_139 = pos;
  _140 = (sizetype) pos.43_139;
  _141 = st + _140;
  c = *_141;
  if (c == 38)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  posl.44_142 = posl;
  posl = posl.44_142 + 1;
  _143 = (sizetype) posl.44_142;
  _144 = lex + _143;
  *_144 = 38;
  _145 = (sizetype) posl;
  _146 = lex + _145;
  *_146 = 0;
  pos.45_147 = pos;
  _148 = pos.45_147 + 1;
  pos = _148;
  estado_anterior = 0;
  D.5594 = 68;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 56> :
  D.5594 = 103;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 57> :
  if (c == 62)
    goto <bb 58>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 58> :
  pos.46_149 = pos;
  _150 = pos.46_149 + 1;
  pos = _150;
  pos.47_151 = pos;
  _152 = (sizetype) pos.47_151;
  _153 = st + _152;
  c = *_153;
  if (c == 61)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  posl.48_154 = posl;
  posl = posl.48_154 + 1;
  _155 = (sizetype) posl.48_154;
  _156 = lex + _155;
  *_156 = 61;
  _157 = (sizetype) posl;
  _158 = lex + _157;
  *_158 = 0;
  pos.49_159 = pos;
  _160 = pos.49_159 + 1;
  pos = _160;
  estado_anterior = 0;
  D.5594 = 57;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 60> :
  if (c == 62)
    goto <bb 61>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 61> :
  posl.50_161 = posl;
  posl = posl.50_161 + 1;
  _162 = (sizetype) posl.50_161;
  _163 = lex + _162;
  *_163 = 62;
  _164 = (sizetype) posl;
  _165 = lex + _164;
  *_165 = 0;
  pos.51_166 = pos;
  _167 = pos.51_166 + 1;
  pos = _167;
  estado_anterior = 0;
  D.5594 = 66;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 62> :
  _168 = (sizetype) posl;
  _169 = lex + _168;
  *_169 = 0;
  D.5594 = 49;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 63> :
  if (c == 60)
    goto <bb 64>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 64> :
  pos.52_170 = pos;
  _171 = pos.52_170 + 1;
  pos = _171;
  pos.53_172 = pos;
  _173 = (sizetype) pos.53_172;
  _174 = st + _173;
  c = *_174;
  if (c == 61)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  posl.54_175 = posl;
  posl = posl.54_175 + 1;
  _176 = (sizetype) posl.54_175;
  _177 = lex + _176;
  *_177 = 61;
  _178 = (sizetype) posl;
  _179 = lex + _178;
  *_179 = 0;
  pos.55_180 = pos;
  _181 = pos.55_180 + 1;
  pos = _181;
  estado_anterior = 0;
  D.5594 = 58;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 66> :
  if (c == 60)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  posl.56_182 = posl;
  posl = posl.56_182 + 1;
  _183 = (sizetype) posl.56_182;
  _184 = lex + _183;
  *_184 = 60;
  _185 = (sizetype) posl;
  _186 = lex + _185;
  *_186 = 0;
  pos.57_187 = pos;
  _188 = pos.57_187 + 1;
  pos = _188;
  estado_anterior = 0;
  D.5594 = 65;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 68> :
  _189 = (sizetype) posl;
  _190 = lex + _189;
  *_190 = 0;
  D.5594 = 50;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 69> :
  if (c == 40)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  _191 = (sizetype) posl;
  _192 = lex + _191;
  *_192 = 0;
  pos.58_193 = pos;
  _194 = pos.58_193 + 1;
  pos = _194;
  estado_anterior = 0;
  D.5594 = 34;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 71> :
  if (c == 41)
    goto <bb 72>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 72> :
  _195 = (sizetype) posl;
  _196 = lex + _195;
  *_196 = 0;
  pos.59_197 = pos;
  _198 = pos.59_197 + 1;
  pos = _198;
  estado_anterior = 0;
  D.5594 = 35;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 73> :
  if (c == 123)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  _199 = (sizetype) posl;
  _200 = lex + _199;
  *_200 = 0;
  pos.60_201 = pos;
  _202 = pos.60_201 + 1;
  pos = _202;
  estado_anterior = 0;
  D.5594 = 36;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 75> :
  if (c == 125)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  _203 = (sizetype) posl;
  _204 = lex + _203;
  *_204 = 0;
  pos.61_205 = pos;
  _206 = pos.61_205 + 1;
  pos = _206;
  estado_anterior = 0;
  D.5594 = 37;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 77> :
  if (c == 91)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  _207 = (sizetype) posl;
  _208 = lex + _207;
  *_208 = 0;
  pos.62_209 = pos;
  _210 = pos.62_209 + 1;
  pos = _210;
  estado_anterior = 0;
  D.5594 = 38;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 79> :
  if (c == 93)
    goto <bb 80>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 80> :
  _211 = (sizetype) posl;
  _212 = lex + _211;
  *_212 = 0;
  pos.63_213 = pos;
  _214 = pos.63_213 + 1;
  pos = _214;
  estado_anterior = 0;
  D.5594 = 39;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 81> :
  if (c == 44)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  _215 = (sizetype) posl;
  _216 = lex + _215;
  *_216 = 0;
  pos.64_217 = pos;
  _218 = pos.64_217 + 1;
  pos = _218;
  estado_anterior = 0;
  D.5594 = 42;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 83> :
  if (c == 59)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  _219 = (sizetype) posl;
  _220 = lex + _219;
  *_220 = 0;
  pos.65_221 = pos;
  _222 = pos.65_221 + 1;
  pos = _222;
  estado_anterior = 0;
  D.5594 = 40;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 85> :
  if (c == 58)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  _223 = (sizetype) posl;
  _224 = lex + _223;
  *_224 = 0;
  pos.66_225 = pos;
  _226 = pos.66_225 + 1;
  pos = _226;
  estado_anterior = 0;
  D.5594 = 41;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 87> :
  if (c == 32)
    goto <bb 89>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 88> :
  if (c == 10)
    goto <bb 89>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 89> :
  pos.67_227 = pos;
  _228 = pos.67_227 + 1;
  pos = _228;
  posl = posl + -1;
  pos.68_229 = pos;
  posColuna = pos.68_229;

  <bb 90> :
  if (c == 127)
    goto <bb 91>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 91> :
  pos.69_230 = pos;
  _231 = pos.69_230 + 1;
  pos = _231;
  posl = posl + -1;
  linha.70_232 = linha;
  _233 = linha.70_232 + 1;
  linha = _233;
  pos.71_234 = pos;
  subColuna = pos.71_234;
  pos.72_235 = pos;
  posColuna = pos.72_235;

  <bb 92> :
  if (c == 9)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  tab.73_236 = tab;
  _237 = tab.73_236 + 1;
  tab = _237;
  pos.74_238 = pos;
  _239 = pos.74_238 + 1;
  pos = _239;
  pos.75_240 = pos;
  posColuna = pos.75_240;
  posl = posl + -1;
  subColuna.76_241 = subColuna;
  _242 = subColuna.76_241 + -3;
  subColuna = _242;

  <bb 94> :
  if (c == 0)
    goto <bb 95>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 95> :
  D.5594 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 96> :
  goto <bb 154>; [INV]

  <bb 97> :
<L95>:
  if (c > 96)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  if (c <= 122)
    goto <bb 104>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 99> :
  if (c > 64)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  if (c <= 90)
    goto <bb 104>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 101> :
  if (c == 95)
    goto <bb 104>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 102> :
  if (c > 47)
    goto <bb 103>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 103> :
  if (c <= 57)
    goto <bb 104>; [INV]
  else
    goto <bb 105>; [INV]

  <bb 104> :
  pos.77_243 = pos;
  _244 = pos.77_243 + 1;
  pos = _244;
  goto <bb 154>; [INV]

  <bb 105> :
  posl = posl + -1;
  _245 = (sizetype) posl;
  _246 = lex + _245;
  *_246 = 0;
  estado_anterior = 1;
  D.5594 = palavra_reservada (lex);
  goto <bb 156>; [INV]

  <bb 106> :
<L104>:
  if (c > 47)
    goto <bb 107>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 107> :
  if (c <= 57)
    goto <bb 108>; [INV]
  else
    goto <bb 109>; [INV]

  <bb 108> :
  pos.78_247 = pos;
  _248 = pos.78_247 + 1;
  pos = _248;
  goto <bb 154>; [INV]

  <bb 109> :
  if (c == 46)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  pos.79_249 = pos;
  _250 = pos.79_249 + 1;
  pos = _250;
  estado = 3;
  estado_anterior = 2;
  goto <bb 154>; [INV]

  <bb 111> :
  if (c == 69)
    goto <bb 112>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 112> :
  pos.80_251 = pos;
  _252 = pos.80_251 + 1;
  pos = _252;
  estado = 4;
  estado_anterior = 2;
  goto <bb 154>; [INV]

  <bb 113> :
  posl = posl + -1;
  _253 = (sizetype) posl;
  _254 = lex + _253;
  *_254 = 0;
  estado_anterior = 2;
  D.5594 = 80;
  goto <bb 156>; [INV]

  <bb 114> :
<L113>:
  if (c > 47)
    goto <bb 115>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 115> :
  if (c <= 57)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  pos.81_255 = pos;
  _256 = pos.81_255 + 1;
  pos = _256;
  estado = 7;
  goto <bb 154>; [INV]

  <bb 117> :
  D.5594 = 101;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 118> :
<L117>:
  if (c > 47)
    goto <bb 119>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 119> :
  if (c <= 57)
    goto <bb 120>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 120> :
  pos.82_257 = pos;
  _258 = pos.82_257 + 1;
  pos = _258;
  estado = 6;
  goto <bb 154>; [INV]

  <bb 121> :
  if (c == 45)
    goto <bb 123>; [INV]
  else
    goto <bb 122>; [INV]

  <bb 122> :
  if (c == 43)
    goto <bb 123>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 123> :
  pos.83_259 = pos;
  _260 = pos.83_259 + 1;
  pos = _260;
  estado = 5;
  goto <bb 154>; [INV]

  <bb 124> :
  D.5594 = 100;
  goto <bb 156>; [INV]

  <bb 125> :
<L124>:
  if (c > 47)
    goto <bb 126>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 126> :
  if (c <= 57)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  pos.84_261 = pos;
  _262 = pos.84_261 + 1;
  pos = _262;
  estado = 6;
  goto <bb 154>; [INV]

  <bb 128> :
  D.5594 = 100;
  goto <bb 156>; [INV]

  <bb 129> :
<L129>:
  if (c > 47)
    goto <bb 130>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 130> :
  if (c <= 57)
    goto <bb 131>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 131> :
  pos.85_263 = pos;
  _264 = pos.85_263 + 1;
  pos = _264;
  goto <bb 154>; [INV]

  <bb 132> :
  estado_anterior.86_265 = estado_anterior;
  if (estado_anterior.86_265 == 2)
    goto <bb 133>; [INV]
  else
    goto <bb 134>; [INV]

  <bb 133> :
  posl = posl + -1;
  _266 = (sizetype) posl;
  _267 = lex + _266;
  *_267 = 0;
  estado_anterior = 6;
  D.5594 = 80;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 134> :
  posl = posl + -1;
  _268 = (sizetype) posl;
  _269 = lex + _268;
  *_269 = 0;
  estado_anterior = 6;
  D.5594 = 81;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 135> :
<L136>:
  if (c > 47)
    goto <bb 136>; [INV]
  else
    goto <bb 138>; [INV]

  <bb 136> :
  if (c <= 57)
    goto <bb 137>; [INV]
  else
    goto <bb 138>; [INV]

  <bb 137> :
  pos.87_270 = pos;
  _271 = pos.87_270 + 1;
  pos = _271;
  goto <bb 154>; [INV]

  <bb 138> :
  if (c == 69)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  pos.88_272 = pos;
  _273 = pos.88_272 + 1;
  pos = _273;
  estado = 4;
  estado_anterior = 7;
  goto <bb 154>; [INV]

  <bb 140> :
  posl = posl + -1;
  _274 = (sizetype) posl;
  _275 = lex + _274;
  *_275 = 0;
  estado_anterior = 7;
  D.5594 = 81;
  goto <bb 156>; [INV]

  <bb 141> :
<L143>:
  if (c > 47)
    goto <bb 142>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 142> :
  if (c <= 57)
    goto <bb 143>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 143> :
  pos.89_276 = pos;
  _277 = pos.89_276 + 1;
  pos = _277;
  goto <bb 154>; [INV]

  <bb 144> :
  if (c == 120)
    goto <bb 146>; [INV]
  else
    goto <bb 145>; [INV]

  <bb 145> :
  if (c == 88)
    goto <bb 146>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 146> :
  pos.90_278 = pos;
  _279 = pos.90_278 + 1;
  pos = _279;
  estado = 9;
  estado_anterior = 8;
  goto <bb 154>; [INV]

  <bb 147> :
  posl = posl + -1;
  _280 = (sizetype) posl;
  _281 = lex + _280;
  *_281 = 0;
  D.5594 = 80;
  goto <bb 156>; [INV]

  <bb 148> :
<L151>:
  if (c > 47)
    goto <bb 149>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 149> :
  if (c <= 57)
    goto <bb 150>; [INV]
  else
    goto <bb 151>; [INV]

  <bb 150> :
  pos.91_282 = pos;
  _283 = pos.91_282 + 1;
  pos = _283;
  estado_anterior = 9;
  goto <bb 154>; [INV]

  <bb 151> :
  estado_anterior.92_284 = estado_anterior;
  if (estado_anterior.92_284 == 8)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  D.5594 = 104;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 156>; [INV]

  <bb 153> :
  posl = posl + -1;
  _285 = (sizetype) posl;
  _286 = lex + _285;
  *_286 = 0;
  D.5594 = 80;
  goto <bb 156>; [INV]

  <bb 154> :
<L157>:
  if (fim == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 155> :
  return;

  <bb 156> :
<L161>:
  return D.5594;

}



;; Function leToken (leToken, funcdef_no=19, decl_uid=4978, cgraph_uid=19, symbol_order=35)

leToken ()
{
  <bb 2> :
  posParser.93_1 = posParser;
  posParser.94_2 = posParser.93_1;
  _3 = posParser.94_2 + 1;
  posParser = _3;
  _4 = TKsParser[posParser.94_2];
  token = _4;
  posParser.95_5 = posParser;
  posParser.96_6 = posParser.95_5;
  _7 = posParser.96_6 + 1;
  posParser = _7;
  _8 = TKsParser[posParser.96_6];
  linha = _8;
  posParser.97_9 = posParser;
  posParser.98_10 = posParser.97_9;
  _11 = posParser.98_10 + 1;
  posParser = _11;
  _12 = TKsParser[posParser.98_10];
  coluna = _12;
  posParserLex.99_13 = posParserLex;
  posParserLex.100_14 = posParserLex.99_13;
  _15 = posParserLex.100_14 + 1;
  posParserLex = _15;
  _16 = &TKsParserLex[posParserLex.100_14];
  strcpy (&lex, _16);
  return;

}



;; Function addTabelaSimbolos (addTabelaSimbolos, funcdef_no=20, decl_uid=4988, cgraph_uid=20, symbol_order=37)

addTabelaSimbolos (char * id, char * tipo)
{
  struct tabela * aux;

  <bb 2> :
  aux = malloc (32);
  _1 = &aux->id;
  strcpy (_1, id);
  _2 = &aux->tipo;
  strcpy (_2, tipo);
  ts.101_3 = ts;
  aux->prox = ts.101_3;
  ts = aux;
  return;

}



;; Function verificaDuplicacao (verificaDuplicacao, funcdef_no=21, decl_uid=4993, cgraph_uid=21, symbol_order=38)

verificaDuplicacao (char * lex, struct tabela * tab)
{
  int D.5727;

  <bb 2> :
  if (tab == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.5727 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _1 = &tab->id;
  _2 = strcmp (_1, lex);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  printf ("Variavel %s ja foi declarada\n", lex);
  coluna.102_3 = coluna;
  linha.103_4 = linha;
  printf ("Erro ocorreu na linha %d, coluna %d", linha.103_4, coluna.102_3);
  exit (0);

  <bb 6> :
  _5 = tab->prox;
  D.5727 = verificaDuplicacao (lex, _5);

  <bb 7> :
<L4>:
  return D.5727;

}



;; Function consultaTipo (consultaTipo, funcdef_no=22, decl_uid=4998, cgraph_uid=22, symbol_order=39)

consultaTipo (char * id, char * Tipo, struct tabela * tab)
{
  <bb 2> :
  if (tab == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _1 = &tab->id;
  _2 = strcmp (_1, id);
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = &tab->tipo;
  strcpy (Tipo, _3);

  <bb 6> :
  _4 = tab->prox;
  consultaTipo (id, Tipo, _4);

  <bb 7> :
<L4>:
  return;

}



;; Function RDV (RDV, funcdef_no=29, decl_uid=4765, cgraph_uid=29, symbol_order=46)

RDV (char * RDV_t)
{
  char DV_t[10];
  int D.5794;

  <bb 2> :
  token.124_1 = token;
  if (token.124_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&DV_t, RDV_t);
  leToken ();
  _2 = DV (&DV_t);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.5794 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 5> :
  D.5794 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  token.125_3 = token;
  if (token.125_3 == 40)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  leToken ();
  D.5794 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  coluna.126_4 = coluna;
  linha.127_5 = linha;
  printf ("Erro: esperava token \',\' ou \';\' na linha %d coluna %d\n", linha.127_5, coluna.126_4);
  D.5794 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  DV_t = {CLOBBER};

  <bb 10> :
<L7>:
  return D.5794;

}



;; Function DV (DV, funcdef_no=28, decl_uid=4763, cgraph_uid=28, symbol_order=45)

DV (char * DV_t)
{
  char RDV_t[10];
  int D.5787;

  <bb 2> :
  token.120_1 = token;
  if (token.120_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  strcpy (&RDV_t, DV_t);
  ts.121_2 = ts;
  _3 = verificaDuplicacao (&lex, ts.121_2);
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  addTabelaSimbolos (&lex, DV_t);

  <bb 5> :
  leToken ();
  _4 = RDV (&RDV_t);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.5787 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.5787 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  coluna.122_5 = coluna;
  linha.123_6 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.123_6, coluna.122_5);
  D.5787 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  RDV_t = {CLOBBER};

  <bb 10> :
<L7>:
  return D.5787;

}



;; Function TIPO (TIPO, funcdef_no=30, decl_uid=4767, cgraph_uid=30, symbol_order=47)

TIPO (char * Tipo_t)
{
  int D.5804;

  <bb 2> :
  token.128_1 = token;
  if (token.128_1 == 69)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  token.129_2 = token;
  if (token.129_2 == 4)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  token.130_3 = token;
  if (token.130_3 == 6)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  token.131_4 = token;
  switch (token.131_4) <default: <L7> [INV], case 4: <L4> [INV], case 6: <L5> [INV], case 7: <L6> [INV], case 69: <L3> [INV]>

  <bb 6> :
<L3>:
  __builtin_memcpy (Tipo_t, "char", 5);
  goto <bb 10>; [INV]

  <bb 7> :
<L4>:
  __builtin_memcpy (Tipo_t, "int", 4);
  goto <bb 10>; [INV]

  <bb 8> :
<L5>:
  __builtin_memcpy (Tipo_t, "float", 6);
  goto <bb 10>; [INV]

  <bb 9> :
<L6>:
  __builtin_memcpy (Tipo_t, "double", 7);

  <bb 10> :
<L7>:
  leToken ();
  D.5804 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 11> :
  D.5804 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 12> :
<L10>:
  return D.5804;

}



;; Function RLP (RLP, funcdef_no=33, decl_uid=4770, cgraph_uid=33, symbol_order=50)

RLP ()
{
  char TIPO_t[10];
  int D.5839;

  <bb 2> :
  token.145_1 = token;
  if (token.145_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  leToken ();
  _2 = TIPO (&TIPO_t);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  token.146_3 = token;
  if (token.146_3 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  ts.147_4 = ts;
  _5 = verificaDuplicacao (&lex, ts.147_4);
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  addTabelaSimbolos (&lex, &TIPO_t);

  <bb 7> :
  leToken ();
  _6 = RLP ();
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.5839 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  D.5839 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  coluna.148_7 = coluna;
  linha.149_8 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.149_8, coluna.148_7);
  D.5839 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  D.5839 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  D.5839 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  TIPO_t = {CLOBBER};

  <bb 14> :
<L11>:
  return D.5839;

}



;; Function LP (LP, funcdef_no=32, decl_uid=4769, cgraph_uid=32, symbol_order=49)

LP ()
{
  char TIPO_t[10];
  int D.5826;

  <bb 2> :
  _1 = TIPO (&TIPO_t);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  token.141_2 = token;
  if (token.141_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  ts.142_3 = ts;
  _4 = verificaDuplicacao (&lex, ts.142_3);
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  addTabelaSimbolos (&lex, &TIPO_t);

  <bb 6> :
  leToken ();
  _5 = RLP ();
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.5826 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.5826 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 9> :
  coluna.143_6 = coluna;
  linha.144_7 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.144_7, coluna.143_6);
  D.5826 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  D.5826 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 11> :
  TIPO_t = {CLOBBER};

  <bb 12> :
<L9>:
  return D.5826;

}



;; Function RE (RE, funcdef_no=73, decl_uid=4944, cgraph_uid=73, symbol_order=90)

RE ()
{
  int D.6353;

  <bb 2> :
  token.255_1 = token;
  if (token.255_1 == 34)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = LP ();
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  token.256_3 = token;
  if (token.256_3 == 35)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  leToken ();
  D.6353 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  coluna.257_4 = coluna;
  linha.258_5 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.258_5, coluna.257_4);
  D.6353 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.6353 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.6353 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
<L6>:
  return D.6353;

}



;; Function E14 (E14, funcdef_no=72, decl_uid=4943, cgraph_uid=72, symbol_order=89)

E14 (char * E14_tp, char * E14_p, char * E14_c)
{
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6327;

  <bb 2> :
  token.249_1 = token;
  if (token.249_1 == 80)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_memcpy (E14_tp, "int", 4);
  leToken ();
  D.6327 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 4> :
  token.250_2 = token;
  if (token.250_2 == 81)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_memcpy (E14_tp, "float", 6);
  leToken ();
  D.6327 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 6> :
  token.251_3 = token;
  if (token.251_3 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  ts.252_4 = ts;
  consultaTipo (&lex, E14_tp, ts.252_4);
  _5 = strcmp (E14_tp, "int");
  if (_5 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _6 = strcmp (E14_tp, "float");
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  printf ("Erro: Variavel %s nao foi declarada\n", &lex);
  exit (0);

  <bb 10> :
  strcpy (E14_p, &lex);
  __builtin_memcpy (E14_c, "", 1);
  leToken ();
  _7 = RE ();
  if (_7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.6327 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 12> :
  D.6327 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 13> :
  token.253_8 = token;
  if (token.253_8 == 34)
    goto <bb 14>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 14> :
  leToken ();
  _9 = E (&E_tp, &E_p, &E_c);
  if (_9 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  token.254_10 = token;
  if (token.254_10 == 35)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  leToken ();
  strcpy (E14_c, &E_c);
  strcpy (E14_p, &E_p);
  D.6327 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  D.6327 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  D.6327 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  E_p = {CLOBBER};
  E_c = {CLOBBER};
  goto <bb 21>; [INV]

  <bb 20> :
  D.6327 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 21> :
  E_tp = {CLOBBER};

  <bb 22> :
<L20>:
  return D.6327;

}



;; Function E13 (E13, funcdef_no=71, decl_uid=4939, cgraph_uid=71, symbol_order=88)

E13 (char * E13_tp, char * E13_p, char * E13_c)
{
  char E13Linha_s[10];
  char E13Linha_h[10];
  char E13Linha_tp[10];
  char E14_c[1000];
  char E14_p[10];
  char E14_tp[10];
  int D.6314;

  <bb 2> :
  _1 = E14 (&E14_tp, &E14_p, &E14_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 3> :
  token.245_2 = token;
  if (token.245_2 == 45)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  strcpy (&E13Linha_h, &E14_tp);
  leToken ();
  _3 = E13 (&E13Linha_tp, &E13Linha_h, &E13Linha_s);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E13_tp, &E13Linha_s);
  D.6314 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 6> :
  D.6314 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 7> :
  token.246_4 = token;
  if (token.246_4 == 60)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  strcpy (&E13Linha_h, &E14_tp);
  leToken ();
  strcpy (E13_tp, &E13Linha_s);
  D.6314 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 9> :
  token.247_5 = token;
  if (token.247_5 == 59)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  strcpy (&E13Linha_h, &E14_tp);
  leToken ();
  strcpy (E13_tp, &E13Linha_s);
  D.6314 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 11> :
  token.248_6 = token;
  if (token.248_6 == 63)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  strcpy (&E13Linha_h, &E14_tp);
  leToken ();
  _7 = E13 (&E13Linha_tp, &E13Linha_h, &E13Linha_s);
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  strcpy (E13_tp, &E13Linha_s);
  D.6314 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 14> :
  D.6314 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 15> :
  strcpy (E13_tp, &E14_tp);
  strcpy (E13_p, &E14_p);
  strcpy (E13_c, &E14_c);
  D.6314 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 16> :
  D.6314 = 0;

  <bb 17> :
  E14_tp = {CLOBBER};
  E14_p = {CLOBBER};
  E14_c = {CLOBBER};
  E13Linha_tp = {CLOBBER};
  E13Linha_h = {CLOBBER};
  E13Linha_s = {CLOBBER};

  <bb 18> :
<L15>:
  return D.6314;

}



;; Function E12Linha (E12Linha, funcdef_no=70, decl_uid=4935, cgraph_uid=70, symbol_order=87)

E12Linha (char * E12Linha_h, char * E12Linha_s, char * E12Linha_hp, char * E12Linha_sp, char * E12Linha_hc, char * E12Linha_sc)
{
  char E12Linha2_sc[1000];
  char E12Linha2_hc[1000];
  char E12Linha2_sp[10];
  char E12Linha2_hp[10];
  char E12Linha2_s[10];
  char E12Linha2_h[10];
  char E13_c[1000];
  char E13_p[10];
  char E13_tp[10];
  int D.6285;

  <bb 2> :
  token.242_1 = token;
  if (token.242_1 == 46)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  leToken ();
  _2 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _3 = strcmp (E12Linha_h, "int");
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = strcmp (&E13_tp, "int");
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  __builtin_memcpy (&E12Linha2_h, "int", 4);
  goto <bb 8>; [INV]

  <bb 7> :
  __builtin_memcpy (&E12Linha2_h, "float", 6);

  <bb 8> :
  _5 = E12Linha (&E12Linha2_h, &E12Linha2_s, &E12Linha2_hp, &E12Linha2_sp, &E12Linha2_hc, &E12Linha2_sc);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E12Linha_s, &E12Linha2_s);
  strcpy (E12Linha_sp, &E12Linha2_sp);
  strcpy (E12Linha_sc, &E12Linha2_sc);
  D.6285 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 10> :
  D.6285 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 11> :
  D.6285 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 12> :
  token.243_6 = token;
  if (token.243_6 == 47)
    goto <bb 13>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 13> :
  leToken ();
  _7 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_7 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 14> :
  _8 = strcmp (E12Linha_h, "int");
  if (_8 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _9 = strcmp (&E13_tp, "int");
  if (_9 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  __builtin_memcpy (&E12Linha2_h, "int", 4);
  goto <bb 18>; [INV]

  <bb 17> :
  __builtin_memcpy (&E12Linha2_h, "float", 6);

  <bb 18> :
  _10 = E12Linha (&E12Linha2_h, &E12Linha2_s, &E12Linha2_hp, &E12Linha2_sp, &E12Linha2_hc, &E12Linha2_sc);
  if (_10 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  strcpy (E12Linha_s, &E12Linha2_s);
  strcpy (E12Linha_sp, &E12Linha2_sp);
  strcpy (E12Linha_sc, &E12Linha2_sc);
  D.6285 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 20> :
  D.6285 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 21> :
  D.6285 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 22> :
  token.244_11 = token;
  if (token.244_11 == 48)
    goto <bb 23>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 23> :
  leToken ();
  _12 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_12 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 24> :
  _13 = strcmp (E12Linha_h, "int");
  if (_13 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  _14 = strcmp (&E13_tp, "int");
  if (_14 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  __builtin_memcpy (&E12Linha2_h, "int", 4);
  _15 = E12Linha (&E12Linha2_h, &E12Linha2_s, &E12Linha2_hp, &E12Linha2_sp, &E12Linha2_hc, &E12Linha2_sc);
  if (_15 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  printf ("Erro: opera\xc3\xa7\xc3\xa3o de resto inv\xc3\xa1lida");
  exit (0);

  <bb 28> :
  strcpy (E12Linha_s, &E12Linha2_s);
  strcpy (E12Linha_sp, &E12Linha2_sp);
  strcpy (E12Linha_sc, &E12Linha2_sc);
  D.6285 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 29> :
  D.6285 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 30> :
  D.6285 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 31> :
  strcpy (E12Linha_s, E12Linha_h);
  strcpy (E12Linha_sp, E12Linha_hp);
  strcpy (E12Linha_sc, E12Linha_hc);
  D.6285 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 32> :
  E13_tp = {CLOBBER};
  E13_p = {CLOBBER};
  E13_c = {CLOBBER};
  E12Linha2_h = {CLOBBER};
  E12Linha2_s = {CLOBBER};
  E12Linha2_hp = {CLOBBER};
  E12Linha2_sp = {CLOBBER};
  E12Linha2_hc = {CLOBBER};
  E12Linha2_sc = {CLOBBER};

  <bb 33> :
<L31>:
  return D.6285;

}



;; Function E12 (E12, funcdef_no=69, decl_uid=4928, cgraph_uid=69, symbol_order=86)

E12 (char * E12_tp, char * E12_p, char * E12_c)
{
  char E12Linha_sc[1000];
  char E12Linha_hc[1000];
  char E12Linha_sp[10];
  char E12Linha_hp[10];
  char E12Linha_s[10];
  char E12Linha_h[10];
  char E13_c[1000];
  char E13_p[10];
  char E13_tp[10];
  int D.6272;

  <bb 2> :
  _1 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E12Linha_h, &E13_tp);
  strcpy (&E12Linha_hp, &E13_p);
  strcpy (&E12Linha_hc, &E13_c);
  _2 = E12Linha (&E12Linha_h, &E12Linha_s, &E12Linha_hp, &E12Linha_sp, &E12Linha_hc, &E12Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E12_tp, &E12Linha_s);
  strcpy (E12_p, &E12Linha_sp);
  strcpy (E12_c, &E12Linha_sc);
  D.6272 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6272 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6272 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E13_tp = {CLOBBER};
  E13_p = {CLOBBER};
  E13_c = {CLOBBER};
  E12Linha_h = {CLOBBER};
  E12Linha_s = {CLOBBER};
  E12Linha_hp = {CLOBBER};
  E12Linha_sp = {CLOBBER};
  E12Linha_hc = {CLOBBER};
  E12Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6272;

}



;; Function E11Linha (E11Linha, funcdef_no=68, decl_uid=4924, cgraph_uid=68, symbol_order=85)

E11Linha (char * E11Linha_h, char * E11Linha_s, char * E11Linha_hp, char * E11Linha_sp, char * E11Linha_hc, char * E11Linha_sc)
{
  char E11Linha2_sc[1000];
  char E11Linha2_hc[1000];
  char E11Linha2_sp[10];
  char E11Linha2_hp[10];
  char E11Linha2_s[10];
  char E11Linha2_h[10];
  char E12_c[1000];
  char E12_p[10];
  char E12_tp[10];
  int D.6252;

  <bb 2> :
  token.240_1 = token;
  if (token.240_1 == 44)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  leToken ();
  _2 = E12 (&E12_tp, &E12_p, &E12_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 4> :
  _3 = strcmp (E11Linha_h, "int");
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = strcmp (&E12_tp, "int");
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  __builtin_memcpy (&E11Linha2_h, "int", 4);
  goto <bb 8>; [INV]

  <bb 7> :
  __builtin_memcpy (&E11Linha2_h, "float", 6);

  <bb 8> :
  _5 = E11Linha (&E11Linha2_h, &E11Linha2_s, &E11Linha2_hp, &E11Linha2_sp, &E11Linha2_hc, &E11Linha2_sc);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E11Linha_s, &E11Linha2_s);
  strcpy (E11Linha_sp, &E11Linha2_sp);
  strcpy (E11Linha_sc, &E11Linha2_sc);
  D.6252 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 10> :
  D.6252 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  token.241_6 = token;
  if (token.241_6 == 45)
    goto <bb 12>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 12> :
  leToken ();
  _7 = E12 (&E12_tp, &E12_p, &E12_c);
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 13> :
  _8 = strcmp (E11Linha_h, "int");
  if (_8 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _9 = strcmp (&E12_tp, "int");
  if (_9 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  __builtin_memcpy (&E11Linha2_h, "int", 4);
  goto <bb 17>; [INV]

  <bb 16> :
  __builtin_memcpy (&E11Linha2_h, "float", 6);

  <bb 17> :
  _10 = E11Linha (&E11Linha2_h, &E11Linha2_s, &E11Linha2_hp, &E11Linha2_sp, &E11Linha2_hc, &E11Linha2_sc);
  if (_10 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  strcpy (E11Linha_s, &E11Linha2_s);
  strcpy (E11Linha_sp, &E11Linha2_sp);
  strcpy (E11Linha_sc, &E11Linha2_sc);
  D.6252 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 19> :
  D.6252 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 20> :
  strcpy (E11Linha_s, E11Linha_h);
  strcpy (E11Linha_sp, E11Linha_hp);
  strcpy (E11Linha_sc, E11Linha_hc);
  D.6252 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 21> :
  E12_tp = {CLOBBER};
  E12_p = {CLOBBER};
  E12_c = {CLOBBER};
  E11Linha2_h = {CLOBBER};
  E11Linha2_s = {CLOBBER};
  E11Linha2_hp = {CLOBBER};
  E11Linha2_sp = {CLOBBER};
  E11Linha2_hc = {CLOBBER};
  E11Linha2_sc = {CLOBBER};
  return;

  <bb 22> :
  E12_tp = {CLOBBER};
  E12_p = {CLOBBER};
  E12_c = {CLOBBER};
  E11Linha2_h = {CLOBBER};
  E11Linha2_s = {CLOBBER};
  E11Linha2_hp = {CLOBBER};
  E11Linha2_sp = {CLOBBER};
  E11Linha2_hc = {CLOBBER};
  E11Linha2_sc = {CLOBBER};

  <bb 23> :
<L24>:
  return D.6252;

}



;; Function E11 (E11, funcdef_no=67, decl_uid=4917, cgraph_uid=67, symbol_order=84)

E11 (char * E11_tp, char * E11_p, char * E11_c)
{
  char E11Linha_sc[1000];
  char E11Linha_hc[1000];
  char E11Linha_sp[10];
  char E11Linha_hp[10];
  char E11Linha_s[10];
  char E11Linha_h[10];
  char E12_c[1000];
  char E12_p[10];
  char E12_tp[10];
  int D.6239;

  <bb 2> :
  _1 = E12 (&E12_tp, &E12_p, &E12_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E11Linha_h, &E12_tp);
  strcpy (&E11Linha_hp, &E12_p);
  strcpy (&E11Linha_hc, &E12_c);
  _2 = E11Linha (&E11Linha_h, &E11Linha_s, &E11Linha_hp, &E11Linha_sp, &E11Linha_hc, &E11Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E11_tp, &E11Linha_s);
  strcpy (E11_p, &E11Linha_sp);
  strcpy (E11_c, &E11Linha_sc);
  D.6239 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6239 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6239 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E12_tp = {CLOBBER};
  E12_p = {CLOBBER};
  E12_c = {CLOBBER};
  E11Linha_h = {CLOBBER};
  E11Linha_s = {CLOBBER};
  E11Linha_hp = {CLOBBER};
  E11Linha_sp = {CLOBBER};
  E11Linha_hc = {CLOBBER};
  E11Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6239;

}



;; Function E10Linha (E10Linha, funcdef_no=66, decl_uid=4913, cgraph_uid=66, symbol_order=83)

E10Linha (char * E10Linha_h, char * E10Linha_s, char * E10Linha_hp, char * E10Linha_sp, char * E10Linha_hc, char * E10Linha_sc)
{
  char E10Linha2_sc[1000];
  char E10Linha2_hc[1000];
  char E10Linha2_sp[10];
  char E10Linha2_hp[10];
  char E10Linha2_s[10];
  char E10Linha2_h[10];
  char E11_c[1000];
  char E11_p[10];
  char E11_tp[10];
  int D.6226;

  <bb 2> :
  token.238_1 = token;
  if (token.238_1 == 65)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E11 (&E11_tp, &E11_p, &E11_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E10Linha2_h, "int", 4);
  _3 = E10Linha (&E10Linha2_h, &E10Linha2_s, &E10Linha2_hp, &E10Linha2_sp, &E10Linha2_hc, &E10Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E10Linha_s, &E10Linha2_s);
  strcpy (E10Linha_sp, &E10Linha2_sp);
  strcpy (E10Linha_sc, &E10Linha2_sc);
  D.6226 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 6> :
  D.6226 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 7> :
  D.6226 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  token.239_4 = token;
  if (token.239_4 == 66)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  leToken ();
  _5 = E11 (&E11_tp, &E11_p, &E11_c);
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  __builtin_memcpy (&E10Linha2_h, "int", 4);
  _6 = E10Linha (&E10Linha2_h, &E10Linha2_s, &E10Linha2_hp, &E10Linha2_sp, &E10Linha2_hc, &E10Linha2_sc);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (E10Linha_s, &E10Linha2_s);
  strcpy (E10Linha_sp, &E10Linha2_sp);
  strcpy (E10Linha_sc, &E10Linha2_sc);
  D.6226 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  D.6226 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  D.6226 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  strcpy (E10Linha_s, E10Linha_h);
  strcpy (E10Linha_sp, E10Linha_hp);
  strcpy (E10Linha_sc, E10Linha_hc);
  D.6226 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 15> :
  E11_tp = {CLOBBER};
  E11_p = {CLOBBER};
  E11_c = {CLOBBER};
  E10Linha2_h = {CLOBBER};
  E10Linha2_s = {CLOBBER};
  E10Linha2_hp = {CLOBBER};
  E10Linha2_sp = {CLOBBER};
  E10Linha2_hc = {CLOBBER};
  E10Linha2_sc = {CLOBBER};

  <bb 16> :
<L13>:
  return D.6226;

}



;; Function E10 (E10, funcdef_no=65, decl_uid=4906, cgraph_uid=65, symbol_order=82)

E10 (char * E10_tp, char * E10_p, char * E10_c)
{
  char E10Linha_sc[1000];
  char E10Linha_hc[1000];
  char E10Linha_sp[10];
  char E10Linha_hp[10];
  char E10Linha_s[10];
  char E10Linha_h[10];
  char E11_c[1000];
  char E11_p[10];
  char E11_tp[10];
  int D.6217;

  <bb 2> :
  _1 = E11 (&E11_tp, &E11_p, &E11_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E10Linha_h, &E11_tp);
  strcpy (&E10Linha_hp, &E11_p);
  strcpy (&E10Linha_hc, &E11_c);
  _2 = E10Linha (&E10Linha_h, &E10Linha_s, &E10Linha_hp, &E10Linha_sp, &E10Linha_hc, &E10Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E10_tp, &E10Linha_s);
  strcpy (E10_p, &E10Linha_sp);
  strcpy (E10_c, &E10Linha_sc);
  D.6217 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6217 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6217 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E11_tp = {CLOBBER};
  E11_p = {CLOBBER};
  E11_c = {CLOBBER};
  E10Linha_h = {CLOBBER};
  E10Linha_s = {CLOBBER};
  E10Linha_hp = {CLOBBER};
  E10Linha_sp = {CLOBBER};
  E10Linha_hc = {CLOBBER};
  E10Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6217;

}



;; Function E9Linha (E9Linha, funcdef_no=64, decl_uid=4902, cgraph_uid=64, symbol_order=81)

E9Linha (char * E9Linha_h, char * E9Linha_s, char * E9Linha_hp, char * E9Linha_sp, char * E9Linha_hc, char * E9Linha_sc)
{
  char E9Linha2_sc[1000];
  char E9Linha2_hc[1000];
  char E9Linha2_sp[10];
  char E9Linha2_hp[10];
  char E9Linha2_s[10];
  char E9Linha2_h[10];
  char E10_c[1000];
  char E10_p[10];
  char E10_tp[10];
  int D.6192;

  <bb 2> :
  token.234_1 = token;
  if (token.234_1 == 50)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  _3 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E9Linha_s, &E9Linha2_s);
  strcpy (E9Linha_sp, &E9Linha2_sp);
  strcpy (E9Linha_sc, &E9Linha2_sc);
  D.6192 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 6> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 7> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 8> :
  token.235_4 = token;
  if (token.235_4 == 49)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  leToken ();
  _5 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  _6 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (E9Linha_s, &E9Linha2_s);
  strcpy (E9Linha_sp, &E9Linha2_sp);
  strcpy (E9Linha_sc, &E9Linha2_sc);
  D.6192 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 13> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 14> :
  token.236_7 = token;
  if (token.236_7 == 58)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  leToken ();
  _8 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_8 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  _9 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  strcpy (E9Linha_s, &E9Linha2_s);
  strcpy (E9Linha_sp, &E9Linha2_sp);
  strcpy (E9Linha_sc, &E9Linha2_sc);
  D.6192 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 18> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 19> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 20> :
  token.237_10 = token;
  if (token.237_10 == 57)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 21> :
  leToken ();
  _11 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_11 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  _12 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_12 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  strcpy (E9Linha_s, &E9Linha2_s);
  strcpy (E9Linha_sp, &E9Linha2_sp);
  strcpy (E9Linha_sc, &E9Linha2_sc);
  D.6192 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 25> :
  D.6192 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  strcpy (E9Linha_s, E9Linha_h);
  strcpy (E9Linha_sp, E9Linha_hp);
  strcpy (E9Linha_sc, E9Linha_hc);
  D.6192 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 27> :
  E10_tp = {CLOBBER};
  E10_p = {CLOBBER};
  E10_c = {CLOBBER};
  E9Linha2_h = {CLOBBER};
  E9Linha2_s = {CLOBBER};
  E9Linha2_hp = {CLOBBER};
  E9Linha2_sp = {CLOBBER};
  E9Linha2_hc = {CLOBBER};
  E9Linha2_sc = {CLOBBER};

  <bb 28> :
<L25>:
  return D.6192;

}



;; Function E9 (E9, funcdef_no=63, decl_uid=4895, cgraph_uid=63, symbol_order=80)

E9 (char * E9_tp, char * E9_p, char * E9_c)
{
  char E9Linha_sc[1000];
  char E9Linha_hc[1000];
  char E9Linha_sp[10];
  char E9Linha_hp[10];
  char E9Linha_s[10];
  char E9Linha_h[10];
  char E10_c[1000];
  char E10_p[10];
  char E10_tp[10];
  int D.6183;

  <bb 2> :
  _1 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E9Linha_h, &E10_tp);
  strcpy (&E9Linha_hp, &E10_p);
  strcpy (&E9Linha_hc, &E10_c);
  _2 = E9Linha (&E9Linha_h, &E9Linha_s, &E9Linha_hp, &E9Linha_sp, &E9Linha_hc, &E9Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E9_tp, &E9Linha_s);
  strcpy (E9_p, &E9Linha_sp);
  strcpy (E9_c, &E9Linha_sc);
  D.6183 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6183 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6183 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E10_tp = {CLOBBER};
  E10_p = {CLOBBER};
  E10_c = {CLOBBER};
  E9Linha_h = {CLOBBER};
  E9Linha_s = {CLOBBER};
  E9Linha_hp = {CLOBBER};
  E9Linha_sp = {CLOBBER};
  E9Linha_hc = {CLOBBER};
  E9Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6183;

}



;; Function E8Linha (E8Linha, funcdef_no=62, decl_uid=4891, cgraph_uid=62, symbol_order=79)

E8Linha (char * E8Linha_h, char * E8Linha_s, char * E8Linha_hp, char * E8Linha_sp, char * E8Linha_hc, char * E8Linha_sc)
{
  char E8Linha2_sc[1000];
  char E8Linha2_hc[1000];
  char E8Linha2_sp[10];
  char E8Linha2_hp[10];
  char E8Linha2_s[10];
  char E8Linha2_h[10];
  char E9_c[1000];
  char E9_p[10];
  char E9_tp[10];
  int D.6170;

  <bb 2> :
  token.232_1 = token;
  if (token.232_1 == 61)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E9 (&E9_tp, &E9_p, &E9_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E8Linha2_h, "int", 4);
  _3 = E8Linha (&E8Linha2_h, &E8Linha2_s, &E8Linha2_hp, &E8Linha2_sp, &E8Linha2_hc, &E8Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E8Linha_s, &E8Linha2_s);
  strcpy (E8Linha_sp, &E8Linha2_sp);
  strcpy (E8Linha_sc, &E8Linha2_sc);
  D.6170 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 6> :
  D.6170 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 7> :
  D.6170 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  token.233_4 = token;
  if (token.233_4 == 62)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  leToken ();
  _5 = E9 (&E9_tp, &E9_p, &E9_c);
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  __builtin_memcpy (&E8Linha2_h, "int", 4);
  _6 = E8Linha (&E8Linha2_h, &E8Linha2_s, &E8Linha2_hp, &E8Linha2_sp, &E8Linha2_hc, &E8Linha2_sc);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (E8Linha_s, &E8Linha2_s);
  strcpy (E8Linha_sp, &E8Linha2_sp);
  strcpy (E8Linha_sc, &E8Linha2_sc);
  D.6170 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  D.6170 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  D.6170 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  strcpy (E8Linha_s, E8Linha_h);
  strcpy (E8Linha_sp, E8Linha_hp);
  strcpy (E8Linha_sc, E8Linha_hc);
  D.6170 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 15> :
  E9_tp = {CLOBBER};
  E9_p = {CLOBBER};
  E9_c = {CLOBBER};
  E8Linha2_h = {CLOBBER};
  E8Linha2_s = {CLOBBER};
  E8Linha2_hp = {CLOBBER};
  E8Linha2_sp = {CLOBBER};
  E8Linha2_hc = {CLOBBER};
  E8Linha2_sc = {CLOBBER};

  <bb 16> :
<L13>:
  return D.6170;

}



;; Function E8 (E8, funcdef_no=61, decl_uid=4884, cgraph_uid=61, symbol_order=78)

E8 (char * E8_tp, char * E8_p, char * E8_c)
{
  char E8Linha_sc[1000];
  char E8Linha_hc[1000];
  char E8Linha_sp[10];
  char E8Linha_hp[10];
  char E8Linha_s[10];
  char E8Linha_h[10];
  char E9_c[1000];
  char E9_p[10];
  char E9_tp[10];
  int D.6161;

  <bb 2> :
  _1 = E9 (&E9_tp, &E9_p, &E9_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E8Linha_h, &E9_tp);
  strcpy (&E8Linha_hp, &E9_p);
  strcpy (&E8Linha_hc, &E9_c);
  _2 = E8Linha (&E8Linha_h, &E8Linha_s, &E8Linha_hp, &E8Linha_sp, &E8Linha_hc, &E8Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E8_tp, &E8Linha_s);
  strcpy (E8_p, &E8Linha_sp);
  strcpy (E8_c, &E8Linha_sc);
  D.6161 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6161 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6161 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E9_tp = {CLOBBER};
  E9_p = {CLOBBER};
  E9_c = {CLOBBER};
  E8Linha_h = {CLOBBER};
  E8Linha_s = {CLOBBER};
  E8Linha_hp = {CLOBBER};
  E8Linha_sp = {CLOBBER};
  E8Linha_hc = {CLOBBER};
  E8Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6161;

}



;; Function E7Linha (E7Linha, funcdef_no=60, decl_uid=4880, cgraph_uid=60, symbol_order=77)

E7Linha (char * E7Linha_h, char * E7Linha_s, char * E7Linha_hp, char * E7Linha_sp, char * E7Linha_hc, char * E7Linha_sc)
{
  char E7Linha2_sc[1000];
  char E7Linha2_hc[1000];
  char E7Linha2_sp[10];
  char E7Linha2_hp[10];
  char E7Linha2_s[10];
  char E7Linha2_h[10];
  char E8_c[1000];
  char E8_p[10];
  char E8_tp[10];
  int D.6154;

  <bb 2> :
  token.231_1 = token;
  if (token.231_1 == 70)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E8 (&E8_tp, &E8_p, &E8_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E7Linha2_h, "int", 4);
  _3 = E7Linha (&E7Linha2_h, &E7Linha2_s, &E7Linha2_hp, &E7Linha2_sp, &E7Linha2_hc, &E7Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E7Linha_s, &E7Linha2_s);
  strcpy (E7Linha_sp, &E7Linha2_sp);
  strcpy (E7Linha_sc, &E7Linha2_sc);
  D.6154 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  D.6154 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.6154 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E7Linha_s, E7Linha_h);
  strcpy (E7Linha_sp, E7Linha_hp);
  strcpy (E7Linha_sc, E7Linha_hc);
  D.6154 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  E8_tp = {CLOBBER};
  E8_p = {CLOBBER};
  E8_c = {CLOBBER};
  E7Linha2_h = {CLOBBER};
  E7Linha2_s = {CLOBBER};
  E7Linha2_hp = {CLOBBER};
  E7Linha2_sp = {CLOBBER};
  E7Linha2_hc = {CLOBBER};
  E7Linha2_sc = {CLOBBER};

  <bb 10> :
<L7>:
  return D.6154;

}



;; Function E7 (E7, funcdef_no=59, decl_uid=4873, cgraph_uid=59, symbol_order=76)

E7 (char * E7_tp, char * E7_p, char * E7_c)
{
  char E7Linha_sc[1000];
  char E7Linha_hc[1000];
  char E7Linha_sp[10];
  char E7Linha_hp[10];
  char E7Linha_s[10];
  char E7Linha_h[10];
  char E8_c[1000];
  char E8_p[10];
  char E8_tp[10];
  int D.6145;

  <bb 2> :
  _1 = E8 (&E8_tp, &E8_p, &E8_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E7Linha_h, &E8_tp);
  strcpy (&E7Linha_hp, &E8_p);
  strcpy (&E7Linha_hc, &E8_c);
  _2 = E7Linha (&E7Linha_h, &E7Linha_s, &E7Linha_hp, &E7Linha_sp, &E7Linha_hc, &E7Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E7_tp, &E7Linha_s);
  strcpy (E7_p, &E7Linha_sp);
  strcpy (E7_c, &E7Linha_sc);
  D.6145 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6145 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6145 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E8_tp = {CLOBBER};
  E8_p = {CLOBBER};
  E8_c = {CLOBBER};
  E7Linha_h = {CLOBBER};
  E7Linha_s = {CLOBBER};
  E7Linha_hp = {CLOBBER};
  E7Linha_sp = {CLOBBER};
  E7Linha_hc = {CLOBBER};
  E7Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6145;

}



;; Function E6Linha (E6Linha, funcdef_no=58, decl_uid=4869, cgraph_uid=58, symbol_order=75)

E6Linha (char * E6Linha_h, char * E6Linha_s, char * E6Linha_hp, char * E6Linha_sp, char * E6Linha_hc, char * E6Linha_sc)
{
  char E6Linha2_sc[1000];
  char E6Linha2_hc[1000];
  char E6Linha2_sp[10];
  char E6Linha2_hp[10];
  char E6Linha2_s[10];
  char E6Linha2_h[10];
  char E7_c[1000];
  char E7_p[10];
  char E7_tp[10];
  int D.6138;

  <bb 2> :
  token.230_1 = token;
  if (token.230_1 == 72)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E7 (&E7_tp, &E7_p, &E7_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E6Linha2_h, "int", 4);
  _3 = E6Linha (&E6Linha2_h, &E6Linha2_s, &E6Linha2_hp, &E6Linha2_sp, &E6Linha2_hc, &E6Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E6Linha_s, &E6Linha2_s);
  strcpy (E6Linha_sp, &E6Linha2_sp);
  strcpy (E6Linha_sc, &E6Linha2_sc);
  D.6138 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  D.6138 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.6138 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E6Linha_s, E6Linha_h);
  strcpy (E6Linha_sp, E6Linha_hp);
  strcpy (E6Linha_sc, E6Linha_hc);
  D.6138 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  E7_tp = {CLOBBER};
  E7_p = {CLOBBER};
  E7_c = {CLOBBER};
  E6Linha2_h = {CLOBBER};
  E6Linha2_s = {CLOBBER};
  E6Linha2_hp = {CLOBBER};
  E6Linha2_sp = {CLOBBER};
  E6Linha2_hc = {CLOBBER};
  E6Linha2_sc = {CLOBBER};

  <bb 10> :
<L7>:
  return D.6138;

}



;; Function E6 (E6, funcdef_no=57, decl_uid=4862, cgraph_uid=57, symbol_order=74)

E6 (char * E6_tp, char * E6_p, char * E6_c)
{
  char E6Linha_sc[1000];
  char E6Linha_hc[1000];
  char E6Linha_sp[10];
  char E6Linha_hp[10];
  char E6Linha_s[10];
  char E6Linha_h[10];
  char E7_c[1000];
  char E7_p[10];
  char E7_tp[10];
  int D.6129;

  <bb 2> :
  _1 = E7 (&E7_tp, &E7_p, &E7_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E6Linha_h, &E7_tp);
  strcpy (&E6Linha_hp, &E7_p);
  strcpy (&E6Linha_hc, &E7_c);
  _2 = E6Linha (&E6Linha_h, &E6Linha_s, &E6Linha_hp, &E6Linha_sp, &E6Linha_hc, &E6Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E6_tp, &E6Linha_s);
  strcpy (E6_p, &E6Linha_sp);
  strcpy (E6_c, &E6Linha_sc);
  D.6129 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6129 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6129 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E7_tp = {CLOBBER};
  E7_p = {CLOBBER};
  E7_c = {CLOBBER};
  E6Linha_h = {CLOBBER};
  E6Linha_s = {CLOBBER};
  E6Linha_hp = {CLOBBER};
  E6Linha_sp = {CLOBBER};
  E6Linha_hc = {CLOBBER};
  E6Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6129;

}



;; Function E5Linha (E5Linha, funcdef_no=56, decl_uid=4858, cgraph_uid=56, symbol_order=73)

E5Linha (char * E5Linha_h, char * E5Linha_s, char * E5Linha_hp, char * E5Linha_sp, char * E5Linha_hc, char * E5Linha_sc)
{
  char E5Linha2_sc[1000];
  char E5Linha2_hc[1000];
  char E5Linha2_sp[10];
  char E5Linha2_hp[10];
  char E5Linha2_s[10];
  char E5Linha2_h[10];
  char E6_c[1000];
  char E6_p[10];
  char E6_tp[10];
  int D.6122;

  <bb 2> :
  token.229_1 = token;
  if (token.229_1 == 71)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E6 (&E6_tp, &E6_p, &E6_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E5Linha2_h, "int", 4);
  _3 = E5Linha (&E5Linha2_h, &E5Linha2_s, &E5Linha2_hp, &E5Linha2_sp, &E5Linha2_hc, &E5Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E5Linha_s, &E5Linha2_s);
  strcpy (E5Linha_sp, &E5Linha2_sp);
  strcpy (E5Linha_sc, &E5Linha2_sc);
  D.6122 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  D.6122 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.6122 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E5Linha_s, E5Linha_h);
  strcpy (E5Linha_sp, E5Linha_hp);
  strcpy (E5Linha_sc, E5Linha_hc);
  D.6122 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  E6_tp = {CLOBBER};
  E6_p = {CLOBBER};
  E6_c = {CLOBBER};
  E5Linha2_h = {CLOBBER};
  E5Linha2_s = {CLOBBER};
  E5Linha2_hp = {CLOBBER};
  E5Linha2_sp = {CLOBBER};
  E5Linha2_hc = {CLOBBER};
  E5Linha2_sc = {CLOBBER};

  <bb 10> :
<L7>:
  return D.6122;

}



;; Function E5 (E5, funcdef_no=55, decl_uid=4851, cgraph_uid=55, symbol_order=72)

E5 (char * E5_tp, char * E5_p, char * E5_c)
{
  char E5Linha_sc[1000];
  char E5Linha_hc[1000];
  char E5Linha_sp[10];
  char E5Linha_hp[10];
  char E5Linha_s[10];
  char E5Linha_h[10];
  char E6_c[1000];
  char E6_p[10];
  char E6_tp[10];
  int D.6113;

  <bb 2> :
  _1 = E6 (&E6_tp, &E6_p, &E6_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E5Linha_h, &E6_tp);
  strcpy (&E5Linha_hp, &E6_p);
  strcpy (&E5Linha_hc, &E6_c);
  _2 = E5Linha (&E5Linha_h, &E5Linha_s, &E5Linha_hp, &E5Linha_sp, &E5Linha_hc, &E5Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E5_tp, &E5Linha_s);
  strcpy (E5_p, &E5Linha_sp);
  strcpy (E5_c, &E5Linha_sc);
  D.6113 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6113 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6113 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E6_tp = {CLOBBER};
  E6_p = {CLOBBER};
  E6_c = {CLOBBER};
  E5Linha_h = {CLOBBER};
  E5Linha_s = {CLOBBER};
  E5Linha_hp = {CLOBBER};
  E5Linha_sp = {CLOBBER};
  E5Linha_hc = {CLOBBER};
  E5Linha_sc = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6113;

}



;; Function E4Linha (E4Linha, funcdef_no=54, decl_uid=4847, cgraph_uid=54, symbol_order=71)

E4Linha (char * E4Linha_h, char * E4Linha_s, char * E4Linha_hp, char * E4Linha_sp, char * E4Linha_hc, char * E4Linha_sc)
{
  char E5_c[1000];
  char E5_p[10];
  char E5_tp[10];
  char E4Linha2_sc[1000];
  char E4Linha2_hc[1000];
  char E4Linha2_sp[10];
  char E4Linha2_hp[10];
  char E4Linha2_s[10];
  char E4Linha2_h[10];
  int D.6106;

  <bb 2> :
  token.228_1 = token;
  if (token.228_1 == 68)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E5 (&E5_tp, &E5_p, &E5_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E4Linha2_h, "int", 4);
  _3 = E4Linha (&E4Linha2_h, &E4Linha2_s, &E4Linha2_hp, &E4Linha2_sp, &E4Linha2_hc, &E4Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E4Linha_s, &E4Linha2_s);
  strcpy (E4Linha_sp, &E4Linha2_sp);
  strcpy (E4Linha_sc, &E4Linha2_sc);
  D.6106 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  D.6106 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.6106 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E4Linha_s, E4Linha_h);
  strcpy (E4Linha_sp, E4Linha_hp);
  strcpy (E4Linha_sc, E4Linha_hc);
  D.6106 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  E4Linha2_h = {CLOBBER};
  E4Linha2_s = {CLOBBER};
  E4Linha2_hp = {CLOBBER};
  E4Linha2_sp = {CLOBBER};
  E4Linha2_hc = {CLOBBER};
  E4Linha2_sc = {CLOBBER};
  E5_tp = {CLOBBER};
  E5_p = {CLOBBER};
  E5_c = {CLOBBER};

  <bb 10> :
<L7>:
  return D.6106;

}



;; Function E4 (E4, funcdef_no=53, decl_uid=4840, cgraph_uid=53, symbol_order=70)

E4 (char * E4_tp, char * E4_p, char * E4_c)
{
  char E5_c[1000];
  char E5_p[10];
  char E5_tp[10];
  char E4Linha_sc[1000];
  char E4Linha_hc[1000];
  char E4Linha_sp[10];
  char E4Linha_hp[10];
  char E4Linha_s[10];
  char E4Linha_h[10];
  int D.6097;

  <bb 2> :
  _1 = E5 (&E5_tp, &E5_p, &E5_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E4Linha_h, &E5_tp);
  strcpy (&E4Linha_hp, &E5_p);
  strcpy (&E4Linha_hc, &E5_c);
  _2 = E4Linha (&E4Linha_h, &E4Linha_s, &E4Linha_hp, &E4Linha_sp, &E4Linha_hc, &E4Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E4_tp, &E4Linha_s);
  strcpy (E4_p, &E4Linha_sp);
  strcpy (E4_c, &E4Linha_sc);
  D.6097 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6097 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6097 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E4Linha_h = {CLOBBER};
  E4Linha_s = {CLOBBER};
  E4Linha_hp = {CLOBBER};
  E4Linha_sp = {CLOBBER};
  E4Linha_hc = {CLOBBER};
  E4Linha_sc = {CLOBBER};
  E5_tp = {CLOBBER};
  E5_p = {CLOBBER};
  E5_c = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6097;

}



;; Function E3Linha (E3Linha, funcdef_no=52, decl_uid=4836, cgraph_uid=52, symbol_order=69)

E3Linha (char * E3Linha_h, char * E3Linha_s, char * E3Linha_hp, char * E3Linha_sp, char * E3Linha_hc, char * E3Linha_sc)
{
  char E4_c[1000];
  char E4_p[10];
  char E4_tp[10];
  char E3Linha2_sc[1000];
  char E3Linha2_hc[1000];
  char E3Linha2_sp[10];
  char E3Linha2_hp[10];
  char E3Linha2_s[10];
  char E3Linha2_h[10];
  int D.6087;

  <bb 2> :
  token.227_1 = token;
  if (token.227_1 == 67)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  leToken ();
  _2 = E4 (&E4_tp, &E4_p, &E4_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  __builtin_memcpy (&E3Linha2_h, "int", 4);
  _3 = E3Linha (&E3Linha2_h, &E3Linha2_s, &E3Linha2_hp, &E3Linha2_sp, &E3Linha2_hc, &E3Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  strcpy (E3Linha_s, &E3Linha2_s);
  strcpy (E3Linha_sp, &E3Linha2_sp);
  strcpy (E3Linha_sc, &E3Linha2_sc);
  D.6087 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  D.6087 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  strcpy (E3Linha_s, E3Linha_h);
  strcpy (E3Linha_sp, E3Linha_hp);
  strcpy (E3Linha_sc, E3Linha_hc);
  D.6087 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  E3Linha2_h = {CLOBBER};
  E3Linha2_s = {CLOBBER};
  E3Linha2_hp = {CLOBBER};
  E3Linha2_sp = {CLOBBER};
  E3Linha2_hc = {CLOBBER};
  E3Linha2_sc = {CLOBBER};
  E4_tp = {CLOBBER};
  E4_p = {CLOBBER};
  E4_c = {CLOBBER};
  return;

  <bb 9> :
  E3Linha2_h = {CLOBBER};
  E3Linha2_s = {CLOBBER};
  E3Linha2_hp = {CLOBBER};
  E3Linha2_sp = {CLOBBER};
  E3Linha2_hc = {CLOBBER};
  E3Linha2_sc = {CLOBBER};
  E4_tp = {CLOBBER};
  E4_p = {CLOBBER};
  E4_c = {CLOBBER};

  <bb 10> :
<L10>:
  return D.6087;

}



;; Function E3 (E3, funcdef_no=51, decl_uid=4829, cgraph_uid=51, symbol_order=68)

E3 (char * E3_tp, char * E3_p, char * E3_c)
{
  char E4_c[1000];
  char E4_p[10];
  char E4_tp[10];
  char E3Linha_sc[1000];
  char E3Linha_hc[1000];
  char E3Linha_sp[10];
  char E3Linha_hp[10];
  char E3Linha_s[10];
  char E3Linha_h[10];
  int D.6078;

  <bb 2> :
  _1 = E4 (&E4_tp, &E4_p, &E4_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E3Linha_h, &E4_tp);
  strcpy (&E3Linha_hp, &E4_p);
  strcpy (&E3Linha_hc, &E4_c);
  _2 = E3Linha (&E3Linha_h, &E3Linha_s, &E3Linha_hp, &E3Linha_sp, &E3Linha_hc, &E3Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E3_tp, &E3Linha_s);
  strcpy (E3_p, &E3Linha_sp);
  strcpy (E3_c, &E3Linha_sc);
  D.6078 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6078 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6078 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E3Linha_h = {CLOBBER};
  E3Linha_s = {CLOBBER};
  E3Linha_hp = {CLOBBER};
  E3Linha_sp = {CLOBBER};
  E3Linha_hc = {CLOBBER};
  E3Linha_sc = {CLOBBER};
  E4_tp = {CLOBBER};
  E4_p = {CLOBBER};
  E4_c = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6078;

}



;; Function E2 (E2, funcdef_no=49, decl_uid=4818, cgraph_uid=49, symbol_order=66)

E2 (char * E2_tp, char * E2_h, char * E2_s, char * E2_p, char * E2_c)
{
  char E3_c[1000];
  char E3_p[10];
  char E3_tp[10];
  char E2Linha_sc[1000];
  char E2Linha_hc[1000];
  char E2Linha_sp[10];
  char E2Linha_hp[10];
  char E2Linha_s[10];
  char E2Linha_h[10];
  int D.6058;

  <bb 2> :
  _1 = E3 (&E3_tp, &E3_p, &E3_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E2Linha_h, &E3_tp);
  strcpy (&E2Linha_hp, &E3_p);
  strcpy (&E2Linha_hc, &E3_c);
  _2 = E2Linha (&E2Linha_h, &E2Linha_s, &E2Linha_hp, &E2Linha_sp, &E2Linha_hc, &E2Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E2_tp, &E2Linha_s);
  strcpy (E2_p, &E2Linha_sp);
  strcpy (E2_c, &E2Linha_sc);
  D.6058 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6058 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6058 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  E2Linha_h = {CLOBBER};
  E2Linha_s = {CLOBBER};
  E2Linha_hp = {CLOBBER};
  E2Linha_sp = {CLOBBER};
  E2Linha_hc = {CLOBBER};
  E2Linha_sc = {CLOBBER};
  E3_tp = {CLOBBER};
  E3_p = {CLOBBER};
  E3_c = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6058;

}



;; Function E1 (E1, funcdef_no=48, decl_uid=4812, cgraph_uid=48, symbol_order=65)

E1 (char * E1_tp, char * E1_h, char * E1_s, char * E1_p, char * E1_c)
{
  char E2_c[1000];
  char E2_p[10];
  char E2_s[10];
  char E2_h[10];
  char E2_tp[10];
  char E1Linha_c[1000];
  char E1Linha_p[10];
  char E1Linha_tp[10];
  char E1Linha_s[10];
  char E1Linha_h[10];
  int D.6034;

  <bb 2> :
  _1 = E2 (&E2_tp, &E2_h, &E2_s, &E2_p, &E2_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 3> :
  token.218_2 = token;
  if (token.218_2 == 43)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  strcpy (&E1Linha_h, &E2_tp);
  leToken ();
  _3 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E1_tp, &E1Linha_s);
  strcpy (E1_p, &E2_p);
  sprintf (E1_c, "%s\t%s = %s\n", &E1Linha_c, &E2_p, &E1Linha_p);
  D.6034 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 6> :
  D.6034 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 7> :
  token.219_4 = token;
  if (token.219_4 == 54)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  strcpy (&E1Linha_h, &E2_tp);
  leToken ();
  _5 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E1_tp, &E1Linha_s);
  strcpy (E1_p, &E2_p);
  sprintf (E1_c, "%s\t%s = %s * %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  D.6034 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 10> :
  D.6034 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 11> :
  token.220_6 = token;
  if (token.220_6 == 55)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  strcpy (&E1Linha_h, &E2_tp);
  leToken ();
  _7 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  strcpy (E1_tp, &E1Linha_s);
  strcpy (E1_p, &E2_p);
  sprintf (E1_c, "%s\t%s = %s / %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  D.6034 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 14> :
  D.6034 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 15> :
  token.221_8 = token;
  if (token.221_8 == 53)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  strcpy (&E1Linha_h, &E2_tp);
  leToken ();
  _9 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  strcpy (E1_tp, &E1Linha_s);
  strcpy (E1_p, &E2_p);
  sprintf (E1_c, "%s\t%s = %s + %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  D.6034 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 18> :
  D.6034 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 19> :
  token.222_10 = token;
  if (token.222_10 == 52)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  strcpy (&E1Linha_h, &E2_tp);
  leToken ();
  _11 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_11 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  strcpy (E1_tp, &E1Linha_s);
  strcpy (E1_p, &E2_p);
  sprintf (E1_c, "%s\t%s = %s - %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  D.6034 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 22> :
  D.6034 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 23> :
  strcpy (E1_tp, &E2_tp);
  strcpy (E1_p, &E2_p);
  strcpy (E1_c, &E2_c);
  D.6034 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 24> :
  E1Linha_h = {CLOBBER};
  E1Linha_s = {CLOBBER};
  E1Linha_tp = {CLOBBER};
  E1Linha_p = {CLOBBER};
  E1Linha_c = {CLOBBER};
  E2_tp = {CLOBBER};
  E2_h = {CLOBBER};
  E2_s = {CLOBBER};
  E2_p = {CLOBBER};
  E2_c = {CLOBBER};
  return;

  <bb 25> :
  E1Linha_h = {CLOBBER};
  E1Linha_s = {CLOBBER};
  E1Linha_tp = {CLOBBER};
  E1Linha_p = {CLOBBER};
  E1Linha_c = {CLOBBER};
  E2_tp = {CLOBBER};
  E2_h = {CLOBBER};
  E2_s = {CLOBBER};
  E2_p = {CLOBBER};
  E2_c = {CLOBBER};

  <bb 26> :
<L24>:
  return D.6034;

}



;; Function ELinha (ELinha, funcdef_no=47, decl_uid=4806, cgraph_uid=47, symbol_order=64)

ELinha (char * ELinha_h, char * ELinha_s, char * ELinha_p, char * ELinha_hp, char * ELinha_sp, char * ELinha_c, char * ELinha_hc, char * ELinha_sc)
{
  char E1_c[1000];
  char E1_p[10];
  char E1_s[10];
  char E1_h[10];
  char E1_tp[10];
  char ELinha2_c[1000];
  char ELinha2_p[10];
  char ELinha2_s[10];
  char ELinha2_h[10];
  char ELinha2_hc[1000];
  char ELinha2_hp[10];
  char ELinha2_sc[1000];
  char ELinha2_sp[10];
  int D.6025;

  <bb 2> :
  token.217_1 = token;
  if (token.217_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  leToken ();
  _2 = E1 (&E1_tp, &E1_h, &E1_s, &E1_p, &E1_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  strcpy (&ELinha2_h, &E1_tp);
  _3 = ELinha (&ELinha2_h, &ELinha2_s, &ELinha2_p, &ELinha2_hp, &ELinha2_sp, &ELinha2_c, &ELinha2_hc, &ELinha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (ELinha_s, &ELinha2_s);
  strcpy (ELinha_p, &ELinha2_p);
  sprintf (ELinha_c, "%s %s", &E1_c, &ELinha2_c);
  D.6025 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  D.6025 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  D.6025 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (ELinha_s, ELinha_h);
  strcpy (ELinha_sp, ELinha_hp);
  strcpy (ELinha_sc, ELinha_hc);
  D.6025 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  ELinha2_sp = {CLOBBER};
  ELinha2_sc = {CLOBBER};
  ELinha2_hp = {CLOBBER};
  ELinha2_hc = {CLOBBER};
  ELinha2_h = {CLOBBER};
  ELinha2_s = {CLOBBER};
  ELinha2_p = {CLOBBER};
  ELinha2_c = {CLOBBER};
  E1_tp = {CLOBBER};
  E1_h = {CLOBBER};
  E1_s = {CLOBBER};
  E1_p = {CLOBBER};
  E1_c = {CLOBBER};

  <bb 10> :
<L7>:
  return D.6025;

}



;; Function E (E, funcdef_no=46, decl_uid=4797, cgraph_uid=46, symbol_order=63)

E (char * E_tp, char * E_p, char * E_c)
{
  char E1_c[1000];
  char E1_p[10];
  char E1_s[10];
  char E1_h[10];
  char E1_tp[10];
  char ELinha_sc[1000];
  char ELinha_sp[10];
  char ELinha_hc[1000];
  char ELinha_hp[10];
  char ELinha_p[10];
  char ELinha_c[1000];
  char ELinha_s[10];
  char ELinha_h[10];
  int D.6016;

  <bb 2> :
  _1 = E1 (&E1_tp, &E1_h, &E1_s, &E1_p, &E1_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&ELinha_h, &E1_tp);
  strcpy (&ELinha_hp, &E1_p);
  strcpy (&ELinha_hc, &E1_c);
  _2 = ELinha (&ELinha_h, &ELinha_s, &ELinha_p, &ELinha_hp, &ELinha_sp, &ELinha_c, &ELinha_hc, &ELinha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E_tp, &ELinha_s);
  strcpy (E_p, &ELinha_sp);
  strcpy (E_c, &ELinha_sc);
  D.6016 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.6016 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.6016 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  ELinha_h = {CLOBBER};
  ELinha_s = {CLOBBER};
  ELinha_c = {CLOBBER};
  ELinha_p = {CLOBBER};
  ELinha_hp = {CLOBBER};
  ELinha_hc = {CLOBBER};
  ELinha_sp = {CLOBBER};
  ELinha_sc = {CLOBBER};
  E1_tp = {CLOBBER};
  E1_h = {CLOBBER};
  E1_s = {CLOBBER};
  E1_p = {CLOBBER};
  E1_c = {CLOBBER};

  <bb 8> :
<L5>:
  return D.6016;

}



;; Function EIF (EIF, funcdef_no=41, decl_uid=4785, cgraph_uid=41, symbol_order=58)

EIF (char * EIF_c, char * EIF_p)
{
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.5956;

  <bb 2> :
  _1 = E (&E_tp, &E_p, &E_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (EIF_c, &E_c);
  strcpy (EIF_p, &E_p);
  D.5956 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5956 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  E_tp = {CLOBBER};
  E_p = {CLOBBER};
  E_c = {CLOBBER};

  <bb 6> :
<L3>:
  return D.5956;

}



;; Function COMDOWHILE (COMDOWHILE, funcdef_no=44, decl_uid=4791, cgraph_uid=44, symbol_order=61)

COMDOWHILE (char * COMDOWHILE_c)
{
  char RDOWHILE_c[1000];
  char COM_c[1000];
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.5996;

  <bb 2> :
  token.204_1 = token;
  if (token.204_1 == 14)
    goto <bb 3>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 3> :
  laco = 1;
  doWhile = 1;
  leToken ();
  _2 = COM (&COM_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 4> :
  _3 = RDOWHILE (&RDOWHILE_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 5> :
  token.205_4 = token;
  if (token.205_4 == 13)
    goto <bb 6>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 6> :
  leToken ();
  token.206_5 = token;
  if (token.206_5 == 34)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 7> :
  leToken ();
  _6 = E (&E_tp, &E_p, &E_c);
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  token.207_7 = token;
  if (token.207_7 == 35)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  leToken ();
  token.208_8 = token;
  if (token.208_8 == 40)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  leToken ();
  doWhile = 0;
  laco = 0;
  D.5996 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 11> :
  coluna.209_9 = coluna;
  linha.210_10 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.210_10, coluna.209_9);
  E_tp = {CLOBBER};
  E_p = {CLOBBER};
  E_c = {CLOBBER};
  COM_c = {CLOBBER};
  RDOWHILE_c = {CLOBBER};
  return;

  <bb 12> :
  coluna.211_11 = coluna;
  linha.212_12 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.212_12, coluna.211_11);
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 13> :
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 14> :
  coluna.213_13 = coluna;
  linha.214_14 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.214_14, coluna.213_13);
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 15> :
  coluna.215_15 = coluna;
  linha.216_16 = linha;
  printf ("Erro: esperava token \'while\' na linha %d coluna %d\n", linha.216_16, coluna.215_15);
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  D.5996 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  E_tp = {CLOBBER};
  E_p = {CLOBBER};
  E_c = {CLOBBER};
  COM_c = {CLOBBER};
  RDOWHILE_c = {CLOBBER};

  <bb 20> :
<L25>:
  return D.5996;

}



;; Function COM (COM, funcdef_no=36, decl_uid=4774, cgraph_uid=36, symbol_order=53)

COM (char * COM_c)
{
  char COMIF_c[1000];
  char COMDOWHILE_c[1000];
  char COMFOR_c[1000];
  char COMWHILE_c[1000];
  char RDEC_c[1000];
  char LCD_c[1000];
  char E_c[1000];
  char E_p[10];
  char E_tp[10];
  char TIPO_t[10];
  int D.5863;

  <bb 2> :
  _1 = E (&E_tp, &E_p, &E_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  token.150_2 = token;
  if (token.150_2 == 40)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (COM_c, &E_c);
  leToken ();
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 5> :
  coluna.151_3 = coluna;
  linha.152_4 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.152_4, coluna.151_3);
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 6> :
  _5 = COMWHILE (&COMWHILE_c);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  strcpy (COM_c, &COMWHILE_c);
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 8> :
  _6 = COMDOWHILE (&COMDOWHILE_c);
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (COM_c, &COMDOWHILE_c);
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 10> :
  _7 = COMIF (&COMIF_c);
  if (_7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (COM_c, &COMIF_c);
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 12> :
  _8 = COMFOR (&COMFOR_c);
  if (_8 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  strcpy (COM_c, &COMFOR_c);
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 14> :
  token.153_9 = token;
  if (token.153_9 == 25)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  leToken ();
  token.154_10 = token;
  if (token.154_10 == 40)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  leToken ();
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 17> :
  coluna.155_11 = coluna;
  linha.156_12 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.156_12, coluna.155_11);
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 18> :
  token.157_13 = token;
  if (token.157_13 == 10)
    goto <bb 19>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 19> :
  laco.158_14 = laco;
  if (laco.158_14 == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  printf ("Erro: comando break fora de laco de repeticao");
  exit (0);

  <bb 21> :
  leToken ();
  token.159_15 = token;
  if (token.159_15 == 40)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  leToken ();
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 23> :
  coluna.160_16 = coluna;
  linha.161_17 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.161_17, coluna.160_16);
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 24> :
  token.162_18 = token;
  if (token.162_18 == 18)
    goto <bb 25>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 25> :
  laco.163_19 = laco;
  if (laco.163_19 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  printf ("Erro: comando continue fora de laco de repeticao");
  exit (0);

  <bb 27> :
  leToken ();
  token.164_20 = token;
  if (token.164_20 == 40)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  leToken ();
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 29> :
  coluna.165_21 = coluna;
  linha.166_22 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.166_22, coluna.165_21);
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 30> :
  token.167_23 = token;
  if (token.167_23 == 36)
    goto <bb 31>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 31> :
  leToken ();
  _24 = LCD (&LCD_c);
  if (_24 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 32> :
  token.168_25 = token;
  if (token.168_25 == 37)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  strcpy (COM_c, &LCD_c);
  leToken ();
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 34> :
  coluna.169_26 = coluna;
  linha.170_27 = linha;
  printf ("Erro: esperava token \'}\' na linha %d coluna %d\n", linha.170_27, coluna.169_26);
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 35> :
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 36> :
  _28 = TIPO (&TIPO_t);
  if (_28 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 37> :
  token.171_29 = token;
  if (token.171_29 == 1)
    goto <bb 38>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 38> :
  ts.172_30 = ts;
  _31 = verificaDuplicacao (&lex, ts.172_30);
  if (_31 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  addTabelaSimbolos (&lex, &TIPO_t);

  <bb 40> :
  leToken ();
  _32 = RDEC ();
  if (_32 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  strcpy (COM_c, &RDEC_c);
  D.5863 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 42> :
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 43> :
  coluna.173_33 = coluna;
  linha.174_34 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.174_34, coluna.173_33);
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 45>; [INV]

  <bb 44> :
  D.5863 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 45> :
  TIPO_t = {CLOBBER};
  E_tp = {CLOBBER};
  E_p = {CLOBBER};
  E_c = {CLOBBER};
  LCD_c = {CLOBBER};
  RDEC_c = {CLOBBER};
  COMWHILE_c = {CLOBBER};
  COMFOR_c = {CLOBBER};
  COMDOWHILE_c = {CLOBBER};
  COMIF_c = {CLOBBER};

  <bb 46> :
<L43>:
  return D.5863;

}



;; Function LCD (LCD, funcdef_no=35, decl_uid=4772, cgraph_uid=35, symbol_order=52)

LCD ()
{
  char COM_c[1000];
  char TIPO_t[10];
  char DV_t[10];
  int D.5850;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = LCD ();
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.5850 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 5> :
  D.5850 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 6> :
  _3 = TIPO (&TIPO_t);
  if (_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  strcpy (&DV_t, &TIPO_t);
  _4 = DV (&DV_t);
  if (_4 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _5 = LCD ();
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.5850 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  D.5850 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  D.5850 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  D.5850 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  DV_t = {CLOBBER};
  TIPO_t = {CLOBBER};
  COM_c = {CLOBBER};

  <bb 14> :
<L11>:
  return D.5850;

}



;; Function CORPO (CORPO, funcdef_no=34, decl_uid=4771, cgraph_uid=34, symbol_order=51)

CORPO ()
{
  int D.5844;

  <bb 2> :
  _1 = LCD ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.5844 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5844 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.5844;

}



;; Function DF (DF, funcdef_no=31, decl_uid=4768, cgraph_uid=31, symbol_order=48)

DF ()
{
  int D.5816;

  <bb 2> :
  _1 = LP ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  token.132_2 = token;
  if (token.132_2 == 35)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  leToken ();
  token.133_3 = token;
  if (token.133_3 == 36)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  leToken ();
  _4 = CORPO ();
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  token.134_5 = token;
  if (token.134_5 == 37)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  leToken ();
  D.5816 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  coluna.135_6 = coluna;
  linha.136_7 = linha;
  printf ("Erro: esperava token \'}\' na linha %d coluna %d\n", linha.136_7, coluna.135_6);
  D.5816 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  D.5816 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  coluna.137_8 = coluna;
  linha.138_9 = linha;
  printf ("Erro: esperava token \'{\' na linha %d coluna %d\n", linha.138_9, coluna.137_8);
  D.5816 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  coluna.139_10 = coluna;
  linha.140_11 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.140_11, coluna.139_10);
  D.5816 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  D.5816 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
<L10>:
  return D.5816;

}



;; Function RDEC (RDEC, funcdef_no=27, decl_uid=4761, cgraph_uid=27, symbol_order=44)

RDEC ()
{
  char DV_t[10];
  char DF_c[1000];
  int D.5766;

  <bb 2> :
  token.108_1 = token;
  if (token.108_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  leToken ();
  _2 = DV (&DV_t);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.5766 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 5> :
  D.5766 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 6> :
  token.109_3 = token;
  if (token.109_3 == 34)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  leToken ();
  _4 = DF (&DF_c);
  if (_4 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.5766 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 9> :
  D.5766 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 10> :
  token.110_5 = token;
  if (token.110_5 == 40)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  leToken ();
  D.5766 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 12> :
  token.111_6 = token;
  if (token.111_6 == 43)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  leToken ();
  token.112_7 = token;
  if (token.112_7 == 80)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  leToken ();
  token.113_8 = token;
  if (token.113_8 == 40)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  leToken ();
  D.5766 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  coluna.114_9 = coluna;
  linha.115_10 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.115_10, coluna.114_9);
  D.5766 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  coluna.116_11 = coluna;
  linha.117_12 = linha;
  printf ("Erro: esperava token contante inteira na linha %d coluna %d\n", linha.117_12, coluna.116_11);
  D.5766 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  coluna.118_13 = coluna;
  linha.119_14 = linha;
  printf ("Erro: esperava token \';\', \')\' ou \',\' na linha %d coluna %d\n", linha.119_14, coluna.118_13);
  D.5766 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  DF_c = {CLOBBER};
  DV_t = {CLOBBER};

  <bb 20> :
<L17>:
  return D.5766;

}



;; Function DEC (DEC, funcdef_no=26, decl_uid=4760, cgraph_uid=26, symbol_order=43)

DEC ()
{
  char Tipo_t[10];
  char RDEC_t[10];
  int D.5759;

  <bb 2> :
  _1 = TIPO (&Tipo_t);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  strcpy (&RDEC_t, &Tipo_t);
  token.104_2 = token;
  if (token.104_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  ts.105_3 = ts;
  _4 = verificaDuplicacao (&lex, ts.105_3);
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  addTabelaSimbolos (&lex, &Tipo_t);

  <bb 6> :
  leToken ();
  _5 = RDEC (&RDEC_t);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.5759 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  D.5759 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 9> :
  coluna.106_6 = coluna;
  linha.107_7 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.107_7, coluna.106_6);
  D.5759 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  D.5759 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 11> :
  RDEC_t = {CLOBBER};
  Tipo_t = {CLOBBER};

  <bb 12> :
<L9>:
  return D.5759;

}



;; Function LD (LD, funcdef_no=24, decl_uid=4758, cgraph_uid=24, symbol_order=41)

LD ()
{
  int D.5744;

  <bb 2> :
  _1 = DEC ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = RLD ();
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.5744 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.5744 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.5744 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
<L4>:
  return D.5744;

}



;; Function PROGC (PROGC, funcdef_no=23, decl_uid=4757, cgraph_uid=23, symbol_order=40)

PROGC ()
{
  int D.5738;

  <bb 2> :
  _1 = LD ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.5738 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5738 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.5738;

}



;; Function RLD (RLD, funcdef_no=25, decl_uid=4759, cgraph_uid=25, symbol_order=42)

RLD (char * RLD_c)
{
  char LD_c[1000];
  int D.5748;

  <bb 2> :
  _1 = LD (&LD_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RLD_c, &LD_c);
  D.5748 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5748 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  LD_c = {CLOBBER};

  <bb 6> :
<L3>:
  return D.5748;

}



;; Function RIF (RIF, funcdef_no=38, decl_uid=4778, cgraph_uid=38, symbol_order=55)

RIF (char * RIF_c)
{
  char COM_c[1000];
  int D.5923;

  <bb 2> :
  token.182_1 = token;
  if (token.182_1 == 12)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  leToken ();
  _2 = COM (&COM_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (RIF_c, &COM_c);
  D.5923 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  D.5923 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.5923 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  COM_c = {CLOBBER};

  <bb 8> :
<L5>:
  return D.5923;

}



;; Function COMIF (COMIF, funcdef_no=37, decl_uid=4776, cgraph_uid=37, symbol_order=54)

COMIF (char * COMIF_c)
{
  char RIF_c[1000];
  char COM_c[1000];
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.5916;

  <bb 2> :
  MEM[(char * {ref-all})&RIF_c] = 0;
  token.175_1 = token;
  if (token.175_1 == 11)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 3> :
  leToken ();
  token.176_2 = token;
  if (token.176_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  leToken ();
  _3 = E (&E_tp, &E_p, &E_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  token.177_4 = token;
  if (token.177_4 == 35)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  leToken ();
  _5 = COM (&COM_c);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  _6 = RIF (&RIF_c);
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.5916 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 9> :
  D.5916 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 10> :
  D.5916 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 11> :
  coluna.178_7 = coluna;
  linha.179_8 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.179_8, coluna.178_7);
  D.5916 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  D.5916 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  coluna.180_9 = coluna;
  linha.181_10 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.181_10, coluna.180_9);
  D.5916 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  D.5916 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 15> :
  E_tp = {CLOBBER};
  E_p = {CLOBBER};
  E_c = {CLOBBER};
  COM_c = {CLOBBER};
  RIF_c = {CLOBBER};

  <bb 16> :
<L13>:
  return D.5916;

}



;; Function RFOR (RFOR, funcdef_no=40, decl_uid=4782, cgraph_uid=40, symbol_order=57)

RFOR (char * RFOR_c)
{
  char COM_c[1000];
  int D.5951;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RFOR_c, &COM_c);
  D.5951 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5951 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  COM_c = {CLOBBER};

  <bb 6> :
<L3>:
  return D.5951;

}



;; Function COMFOR (COMFOR, funcdef_no=39, decl_uid=4780, cgraph_uid=39, symbol_order=56)

COMFOR (char * COMFOR_c)
{
  char EIF3_p[1000];
  char EIF2_p[1000];
  char EIF1_p[1000];
  char EIF3_c[1000];
  char EIF2_c[1000];
  char EIF1_c[1000];
  char RFOR_c[1000];
  char COM_c[1000];
  int D.5946;

  <bb 2> :
  token.183_1 = token;
  if (token.183_1 == 15)
    goto <bb 3>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 3> :
  laco = 1;
  leToken ();
  token.184_2 = token;
  if (token.184_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 4> :
  leToken ();
  _3 = EIF (&EIF1_c, &EIF1_p);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 5> :
  token.185_4 = token;
  if (token.185_4 == 40)
    goto <bb 6>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 6> :
  leToken ();
  _5 = EIF (&EIF2_c, &EIF2_p);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 7> :
  token.186_6 = token;
  if (token.186_6 == 40)
    goto <bb 8>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  leToken ();
  _7 = EIF (&EIF3_c, &EIF3_p);
  if (_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  token.187_8 = token;
  if (token.187_8 == 35)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 10> :
  leToken ();
  _9 = COM (&COM_c);
  if (_9 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  laco = 0;
  _10 = RFOR (&RFOR_c);
  if (_10 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.5946 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 13> :
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 14> :
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 15> :
  coluna.188_11 = coluna;
  linha.189_12 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.189_12, coluna.188_11);
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 16> :
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 17> :
  coluna.190_13 = coluna;
  linha.191_14 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.191_14, coluna.190_13);
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 18> :
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 19> :
  coluna.192_15 = coluna;
  linha.193_16 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.193_16, coluna.192_15);
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 20> :
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 21> :
  coluna.194_17 = coluna;
  linha.195_18 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.195_18, coluna.194_17);
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 22> :
  D.5946 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 23> :
  COM_c = {CLOBBER};
  RFOR_c = {CLOBBER};
  EIF1_c = {CLOBBER};
  EIF2_c = {CLOBBER};
  EIF3_c = {CLOBBER};
  EIF1_p = {CLOBBER};
  EIF2_p = {CLOBBER};
  EIF3_p = {CLOBBER};

  <bb 24> :
<L21>:
  return D.5946;

}



;; Function RWHILE (RWHILE, funcdef_no=43, decl_uid=4789, cgraph_uid=43, symbol_order=60)

RWHILE (char * RWHILE_c)
{
  char COM_c[1000];
  int D.5977;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RWHILE_c, &COM_c);
  D.5977 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5977 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  COM_c = {CLOBBER};

  <bb 6> :
<L3>:
  return D.5977;

}



;; Function COMWHILE (COMWHILE, funcdef_no=42, decl_uid=4787, cgraph_uid=42, symbol_order=59)

COMWHILE (char * COMWHILE_c)
{
  char RWHILE_c[1000];
  char COM_c[1000];
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.5972;

  <bb 2> :
  token.196_1 = token;
  if (token.196_1 == 13)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 3> :
  doWhile.197_2 = doWhile;
  if (doWhile.197_2 != 1)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  laco = 1;
  leToken ();
  token.198_3 = token;
  if (token.198_3 == 34)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  leToken ();
  _4 = E (&E_tp, &E_p, &E_c);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 6> :
  token.199_5 = token;
  if (token.199_5 == 35)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  leToken ();
  _6 = COM (&COM_c);
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _7 = RWHILE (&RWHILE_c);
  if (_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  laco = 0;
  D.5972 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 10> :
  D.5972 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 11> :
  D.5972 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 12> :
  coluna.200_8 = coluna;
  linha.201_9 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.201_9, coluna.200_8);
  D.5972 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 13> :
  D.5972 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 14> :
  coluna.202_10 = coluna;
  linha.203_11 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.203_11, coluna.202_10);
  D.5972 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 15> :
  D.5972 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 16> :
  E_tp = {CLOBBER};
  E_p = {CLOBBER};
  E_c = {CLOBBER};
  COM_c = {CLOBBER};
  RWHILE_c = {CLOBBER};

  <bb 17> :
<L14>:
  return D.5972;

}



;; Function RDOWHILE (RDOWHILE, funcdef_no=45, decl_uid=4793, cgraph_uid=45, symbol_order=62)

RDOWHILE (char * RDOWHILE_c)
{
  char COM_c[1000];
  int D.6009;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RDOWHILE_c, &COM_c);
  D.6009 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.6009 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  COM_c = {CLOBBER};

  <bb 6> :
<L3>:
  return D.6009;

}



;; Function E2Linha (E2Linha, funcdef_no=50, decl_uid=4825, cgraph_uid=50, symbol_order=67)

E2Linha (char * E2Linha_h, char * E2Linha_s, char * E2Linha_hp, char * E2Linha_sp, char * E2Linha_hc, char * E2Linha_sc)
{
  char E2Linha2_sc[1000];
  char E2Linha2_hc[1000];
  char E2Linha2_sp[10];
  char E2Linha2_hp[10];
  char E2Linha2_s[10];
  char E2Linha2_h[10];
  char E2_c[1000];
  char E2_p[10];
  char E2_s[10];
  char E2_h[10];
  char E2_tp[10];
  int D.6071;

  <bb 2> :
  token.223_1 = token;
  if (token.223_1 == 64)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  leToken ();
  _2 = E2 (&E2_tp, &E2_h, &E2_s, &E2_p, &E2_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  token.224_3 = token;
  if (token.224_3 == 41)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  leToken ();
  _4 = E2 (&E2_tp, &E2_h, &E2_s, &E2_p, &E2_c);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _5 = E2Linha (&E2Linha2_h, &E2Linha2_s, &E2Linha2_hp, &E2Linha2_sp, &E2Linha2_hc, &E2Linha2_sc);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.6071 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  D.6071 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  D.6071 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  coluna.225_6 = coluna;
  linha.226_7 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.226_7, coluna.225_6);
  D.6071 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  D.6071 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  strcpy (E2Linha_s, E2Linha_h);
  strcpy (E2Linha_sp, E2Linha_hp);
  strcpy (E2Linha_sc, E2Linha_hc);
  D.6071 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  E2_tp = {CLOBBER};
  E2_h = {CLOBBER};
  E2_s = {CLOBBER};
  E2_p = {CLOBBER};
  E2_c = {CLOBBER};
  E2Linha2_h = {CLOBBER};
  E2Linha2_s = {CLOBBER};
  E2Linha2_hp = {CLOBBER};
  E2Linha2_sp = {CLOBBER};
  E2Linha2_hc = {CLOBBER};
  E2Linha2_sc = {CLOBBER};

  <bb 14> :
<L11>:
  return D.6071;

}



;; Function main (main, funcdef_no=74, decl_uid=5542, cgraph_uid=74, symbol_order=91)

main ()
{
  int i;
  int escolha;
  char arquivo[20];
  char caracter;
  char lex[20];
  char conteudo[20000];
  struct FILE * codigoFonte;
  int D.6377;

  <bb 2> :
  _1 = __acrt_iob_func (1);
  setbuf (_1, 0B);
  ts = 0B;
  escolha = 0;
  i = 0;
  __builtin_puts (&"-----------------------"[0]);
  __builtin_puts (&"-- Analise semantica --"[0]);
  __builtin_puts (&"-----------------------"[0]);

  <bb 3> :
  __builtin_puts (&"1 - ErroContinue"[0]);
  __builtin_puts (&"2 - ErroBreak"[0]);
  __builtin_puts (&"3 - ErroIncompTipo"[0]);
  __builtin_puts (&"4 - ErroVarDupli"[0]);
  __builtin_puts (&"5 - ErroVarNaoDeclarada"[0]);
  __builtin_puts (&"6 - TesteErro"[0]);
  __builtin_puts (&"7 - TesteOK"[0]);
  __builtin_puts (&"-----------------------"[0]);
  scanf ("%d", &escolha);
  _2 = __acrt_iob_func (0);
  fflush (_2);
  escolha.259_3 = escolha;
  if (escolha.259_3 < 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  escolha.260_4 = escolha;
  if (escolha.260_4 > 7)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_puts (&"Opcao incorreta, tente novamente ! "[0]);
  system ("pause");

  <bb 6> :
  escolha.261_5 = escolha;
  switch (escolha.261_5) <default: <L12> [INV], case 1: <L5> [INV], case 2: <L6> [INV], case 3: <L7> [INV], case 4: <L8> [INV], case 5: <L9> [INV], case 6: <L10> [INV], case 7: <L11> [INV]>

  <bb 7> :
<L5>:
  __builtin_memcpy (&arquivo, "erroContinue.txt", 17);
  escolha = 0;
  goto <bb 14>; [INV]

  <bb 8> :
<L6>:
  __builtin_memcpy (&arquivo, "erroBreak.txt", 14);
  escolha = 0;
  goto <bb 14>; [INV]

  <bb 9> :
<L7>:
  __builtin_memcpy (&arquivo, "erroIncompTipo.txt", 19);
  escolha = 0;
  goto <bb 14>; [INV]

  <bb 10> :
<L8>:
  __builtin_memcpy (&arquivo, "erroVarDupli.txt", 17);
  escolha = 0;
  goto <bb 14>; [INV]

  <bb 11> :
<L9>:
  __builtin_memcpy (&arquivo, "erroVarNaoDeclarada.txt", 24);
  escolha = 0;
  goto <bb 14>; [INV]

  <bb 12> :
<L10>:
  __builtin_memcpy (&arquivo, "testeErro.txt", 14);
  escolha = 0;
  goto <bb 14>; [INV]

  <bb 13> :
<L11>:
  __builtin_memcpy (&arquivo, "testeOk.txt", 12);
  escolha = 0;

  <bb 14> :
<L12>:
  escolha.262_6 = escolha;
  if (escolha.262_6 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  escolha.263_7 = escolha;
  if (escolha.263_7 > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  escolha.264_8 = escolha;
  if (escolha.264_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  __builtin_puts (&"-- R E S U L T A D O --"[0]);
  codigoFonte = fopen (&arquivo, "r");
  if (codigoFonte == 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  __builtin_puts (&"Arquivo n\xc3\xa3o pode ser aberto"[0]);
  exit (1);

  <bb 19> :
  _9 = fgetc (codigoFonte);
  caracter = (char) _9;
  _10 = feof (codigoFonte);
  if (_10 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  goto <bb 30>; [INV]

  <bb 21> :
  if (caracter != 9)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  if (caracter != 10)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 23> :
  if (caracter != 13)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  i.265_11 = i;
  i = i.265_11 + 1;
  conteudo[i.265_11] = caracter;
  goto <bb 29>; [INV]

  <bb 25> :
  if (caracter == 10)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  i.266_12 = i;
  i = i.266_12 + 1;
  conteudo[i.266_12] = 127;
  goto <bb 29>; [INV]

  <bb 27> :
  if (caracter == 9)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  i.267_13 = i;
  i = i.267_13 + 1;
  conteudo[i.267_13] = 9;

  <bb 29> :
  goto <bb 19>; [INV]

  <bb 30> :
  conteudo[i] = 0;
  i = 0;
  goto <bb 32>; [INV]

  <bb 31> :
  TKsParser[i] = -1;
  i = i + 1;

  <bb 32> :
  if (i <= 999)
    goto <bb 31>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  goto <bb 35>; [INV]

  <bb 34> :
  posColuna.268_14 = posColuna;
  subColuna.269_15 = subColuna;
  _16 = posColuna.268_14 - subColuna.269_15;
  coluna = _16;
  posParser.270_17 = posParser;
  posParser.271_18 = posParser.270_17;
  _19 = posParser.271_18 + 1;
  posParser = _19;
  token.272_20 = token;
  TKsParser[posParser.271_18] = token.272_20;
  posParser.273_21 = posParser;
  posParser.274_22 = posParser.273_21;
  _23 = posParser.274_22 + 1;
  posParser = _23;
  linha.275_24 = linha;
  TKsParser[posParser.274_22] = linha.275_24;
  posParser.276_25 = posParser;
  posParser.277_26 = posParser.276_25;
  _27 = posParser.277_26 + 1;
  posParser = _27;
  coluna.278_28 = coluna;
  TKsParser[posParser.277_26] = coluna.278_28;
  posParserLex.279_29 = posParserLex;
  posParserLex.280_30 = posParserLex.279_29;
  _31 = posParserLex.280_30 + 1;
  posParserLex = _31;
  _32 = &TKsParserLex[posParserLex.280_30];
  strcpy (_32, &lex);

  <bb 35> :
  _33 = le_token (&conteudo, &lex);
  token = _33;
  token.281_34 = token;
  if (token.281_34 != -1)
    goto <bb 34>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  fclose (codigoFonte);
  posParser = 0;
  posParserLex = 0;
  leToken ();
  _35 = PROGC ();
  if (_35 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  __builtin_puts (&"Reconhecimento semantico concluido"[0]);
  __builtin_puts (&"-----------------------"[0]);
  getchar ();
  goto <bb 39>; [INV]

  <bb 38> :
  __builtin_puts (&"Reconhecimento semantico com Falhas"[0]);
  __builtin_puts (&"-----------------------"[0]);
  getchar ();

  <bb 39> :
  D.6377 = 0;
  conteudo = {CLOBBER};
  lex = {CLOBBER};
  arquivo = {CLOBBER};
  escolha = {CLOBBER};

  <bb 40> :
<L43>:
  return D.6377;

}




;; Function snprintf (snprintf, funcdef_no=6, decl_uid=3004, cgraph_uid=6, symbol_order=6)

Released 0 names, 0.00%, removed 0 holes
__attribute__((unused))
snprintf (char * restrict __stream, size_t __n, const char * restrict __format)
{
  char * __local_argv;
  int __retval;
  int D.6611;
  char * __local_argv.353_1;
  int _10;

  <bb 2> :
  __builtin_va_start (&__local_argv, 0);
  __local_argv.353_1 = __local_argv;
  __retval_8 = __ms_vsnprintf (__stream_4(D), __n_5(D), __format_6(D), __local_argv.353_1);
  __builtin_va_end (&__local_argv);
  _10 = __retval_8;
  __local_argv ={v} {CLOBBER};

  <bb 3> :
<L1>:
  return _10;

}



;; Function palavra_reservada (palavra_reservada, funcdef_no=17, decl_uid=4970, cgraph_uid=17, symbol_order=33)

Released 0 names, 0.00%, removed 0 holes
palavra_reservada (char * lex)
{
  int postab;
  int D.5646;
  char[20] * _1;
  int _2;
  char[20] * _3;
  int _4;
  int _6;
  int _10;
  int _12;

  <bb 2> :
  postab_7 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = &lista_pal[postab_5].palavra;
  _2 = strcmp (lex_9(D), _1);
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _10 = lista_pal[postab_5].tk;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  postab_11 = postab_5 + 1;

  <bb 6> :
  # postab_5 = PHI <postab_7(2), postab_11(5)>
  _3 = &lista_pal[postab_5].palavra;
  _4 = strcmp ("fimtabela", _3);
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _12 = 1;

  <bb 8> :
  # _6 = PHI <_10(4), _12(7)>
<L5>:
  return _6;

}



;; Function le_token (le_token, funcdef_no=18, decl_uid=4978, cgraph_uid=18, symbol_order=34)

Released 0 names, 0.00%, removed 0 holes
le_token (char * st, char * lex)
{
  char c;
  int posl;
  int fim;
  int estado;
  int D.5666;
  int pos.0_1;
  int pos.1_2;
  sizetype _3;
  char * _4;
  int posl.2_5;
  sizetype _6;
  char * _7;
  int pos.3_8;
  int _9;
  int pos.4_10;
  int _11;
  int pos.5_12;
  int _13;
  int pos.6_14;
  int _15;
  int pos.7_16;
  int _17;
  int pos.8_18;
  sizetype _19;
  char * _20;
  int posl.9_21;
  sizetype _22;
  char * _23;
  sizetype _24;
  char * _25;
  int pos.10_26;
  int _27;
  sizetype _28;
  char * _29;
  int pos.11_30;
  int _31;
  int pos.12_32;
  sizetype _33;
  char * _34;
  int posl.13_35;
  sizetype _36;
  char * _37;
  sizetype _38;
  char * _39;
  int pos.14_40;
  int _41;
  sizetype _42;
  char * _43;
  sizetype _44;
  char * _45;
  int pos.15_46;
  int _47;
  int pos.16_48;
  int _49;
  int pos.17_50;
  sizetype _51;
  char * _52;
  int posl.18_53;
  sizetype _54;
  char * _55;
  sizetype _56;
  char * _57;
  int pos.19_58;
  int _59;
  int posl.20_60;
  sizetype _61;
  char * _62;
  sizetype _63;
  char * _64;
  int pos.21_65;
  int _66;
  sizetype _67;
  char * _68;
  int pos.22_69;
  int _70;
  int pos.23_71;
  sizetype _72;
  char * _73;
  int posl.24_74;
  sizetype _75;
  char * _76;
  sizetype _77;
  char * _78;
  int pos.25_79;
  int _80;
  int posl.26_81;
  sizetype _82;
  char * _83;
  sizetype _84;
  char * _85;
  int pos.27_86;
  int _87;
  sizetype _88;
  char * _89;
  int pos.28_90;
  int _91;
  int pos.29_92;
  sizetype _93;
  char * _94;
  int posl.30_95;
  sizetype _96;
  char * _97;
  sizetype _98;
  char * _99;
  int pos.31_100;
  int _101;
  sizetype _102;
  char * _103;
  int pos.32_104;
  int _105;
  int pos.33_106;
  sizetype _107;
  char * _108;
  int posl.34_109;
  sizetype _110;
  char * _111;
  sizetype _112;
  char * _113;
  int pos.35_114;
  int _115;
  sizetype _116;
  char * _117;
  int pos.36_118;
  int _119;
  int pos.37_120;
  sizetype _121;
  char * _122;
  int posl.38_123;
  sizetype _124;
  char * _125;
  sizetype _126;
  char * _127;
  int pos.39_128;
  int _129;
  sizetype _130;
  char * _131;
  int pos.40_132;
  int _133;
  int pos.41_134;
  sizetype _135;
  char * _136;
  int posl.42_137;
  sizetype _138;
  char * _139;
  sizetype _140;
  char * _141;
  int pos.43_142;
  int _143;
  int pos.44_144;
  int _145;
  int pos.45_146;
  sizetype _147;
  char * _148;
  int posl.46_149;
  sizetype _150;
  char * _151;
  sizetype _152;
  char * _153;
  int pos.47_154;
  int _155;
  int pos.48_156;
  int _157;
  int pos.49_158;
  sizetype _159;
  char * _160;
  int posl.50_161;
  sizetype _162;
  char * _163;
  sizetype _164;
  char * _165;
  int pos.51_166;
  int _167;
  int posl.52_168;
  sizetype _169;
  char * _170;
  sizetype _171;
  char * _172;
  int pos.53_173;
  int _174;
  sizetype _175;
  char * _176;
  int pos.54_177;
  int _178;
  int pos.55_179;
  sizetype _180;
  char * _181;
  int posl.56_182;
  sizetype _183;
  char * _184;
  sizetype _185;
  char * _186;
  int pos.57_187;
  int _188;
  int posl.58_189;
  sizetype _190;
  char * _191;
  sizetype _192;
  char * _193;
  int pos.59_194;
  int _195;
  sizetype _196;
  char * _197;
  sizetype _198;
  char * _199;
  int pos.60_200;
  int _201;
  sizetype _202;
  char * _203;
  int pos.61_204;
  int _205;
  sizetype _206;
  char * _207;
  int pos.62_208;
  int _209;
  sizetype _210;
  char * _211;
  int pos.63_212;
  int _213;
  sizetype _214;
  char * _215;
  int pos.64_216;
  int _217;
  sizetype _218;
  char * _219;
  int pos.65_220;
  int _221;
  sizetype _222;
  char * _223;
  int pos.66_224;
  int _225;
  sizetype _226;
  char * _227;
  int pos.67_228;
  int _229;
  sizetype _230;
  char * _231;
  int pos.68_232;
  int _233;
  int pos.69_234;
  int _235;
  int pos.70_236;
  int pos.71_237;
  int _238;
  int linha.72_239;
  int _240;
  int pos.73_241;
  int pos.74_242;
  int tab.75_243;
  int _244;
  int pos.76_245;
  int _246;
  int pos.77_247;
  int subColuna.78_248;
  int _249;
  int pos.79_250;
  int _251;
  sizetype _252;
  char * _253;
  int pos.80_254;
  int _255;
  int pos.81_256;
  int _257;
  int pos.82_258;
  int _259;
  sizetype _260;
  char * _261;
  int pos.83_262;
  int _263;
  int pos.84_264;
  int _265;
  int pos.85_266;
  int _267;
  int pos.86_268;
  int _269;
  int pos.87_270;
  int _271;
  int estado_anterior.88_272;
  sizetype _273;
  char * _274;
  sizetype _275;
  char * _276;
  int pos.89_277;
  int _278;
  int pos.90_279;
  int _280;
  sizetype _281;
  char * _282;
  int pos.91_283;
  int _284;
  int pos.92_285;
  int _286;
  sizetype _287;
  char * _288;
  int pos.93_289;
  int _290;
  int estado_anterior.94_291;
  sizetype _292;
  char * _293;
  int _299;
  int _331;
  int _333;
  int _341;
  int _343;
  int _347;
  int _355;
  int _361;
  int _363;
  int _371;
  int _377;
  int _379;
  int _387;
  int _389;
  int _397;
  int _399;
  int _407;
  int _409;
  int _417;
  int _418;
  int _426;
  int _427;
  int _435;
  int _441;
  int _443;
  int _451;
  int _457;
  int _459;
  int _463;
  int _467;
  int _471;
  int _475;
  int _479;
  int _483;
  int _487;
  int _491;
  int _495;
  int _509;
  int _517;
  int _529;
  int _532;
  int _535;
  int _540;
  int _545;
  int _549;
  int _557;
  int _561;
  int _567;
  int _570;
  int _571;

  <bb 2> :
  estado_305 = 0;
  fim_306 = 0;
  posl_307 = 0;
  pos.0_1 = pos;
  posColuna = pos.0_1;
  goto <bb 156>; [INV]

  <bb 3> :
  pos.1_2 = pos;
  _3 = (sizetype) pos.1_2;
  _4 = st_310(D) + _3;
  c_311 = *_4;
  posl.2_5 = posl_298;
  posl_312 = posl.2_5 + 1;
  _6 = (sizetype) posl.2_5;
  _7 = lex_313(D) + _6;
  *_7 = c_311;
  switch (estado_294) <default: <L159> [INV], case 0: <L1> [INV], case 1: <L97> [INV], case 2: <L106> [INV], case 3: <L115> [INV], case 4: <L119> [INV], case 5: <L126> [INV], case 6: <L131> [INV], case 7: <L138> [INV], case 8: <L145> [INV], case 9: <L153> [INV]>

  <bb 4> :
<L1>:
  if (c_311 > 96)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  if (c_311 <= 122)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (c_311 > 64)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  if (c_311 <= 90)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (c_311 == 95)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  pos.3_8 = pos;
  _9 = pos.3_8 + 1;
  pos = _9;
  estado_511 = 1;
  estado_anterior = 0;
  goto <bb 156>; [INV]

  <bb 10> :
  if (c_311 > 47)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  if (c_311 <= 57)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  if (c_311 == 48)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  pos.4_10 = pos;
  _11 = pos.4_10 + 1;
  pos = _11;
  estado_316 = 8;
  estado_anterior = 0;
  goto <bb 156>; [INV]

  <bb 14> :
  pos.5_12 = pos;
  _13 = pos.5_12 + 1;
  pos = _13;
  estado_319 = 2;
  estado_anterior = 0;
  goto <bb 156>; [INV]

  <bb 15> :
  if (c_311 == 46)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  pos.6_14 = pos;
  _15 = pos.6_14 + 1;
  pos = _15;
  estado_322 = 3;
  estado_anterior = 0;
  goto <bb 156>; [INV]

  <bb 17> :
  if (c_311 == 61)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  pos.7_16 = pos;
  _17 = pos.7_16 + 1;
  pos = _17;
  pos.8_18 = pos;
  _19 = (sizetype) pos.8_18;
  _20 = st_310(D) + _19;
  c_325 = *_20;
  if (c_325 == 61)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  posl.9_21 = posl_312;
  posl_326 = posl.9_21 + 1;
  _22 = (sizetype) posl.9_21;
  _23 = lex_313(D) + _22;
  *_23 = 61;
  _24 = (sizetype) posl_326;
  _25 = lex_313(D) + _24;
  *_25 = 0;
  pos.10_26 = pos;
  _27 = pos.10_26 + 1;
  pos = _27;
  estado_anterior = 0;
  _331 = 61;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 20> :
  _28 = (sizetype) posl_312;
  _29 = lex_313(D) + _28;
  *_29 = 0;
  _333 = 43;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 21> :
  if (c_311 == 33)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  pos.11_30 = pos;
  _31 = pos.11_30 + 1;
  pos = _31;
  pos.12_32 = pos;
  _33 = (sizetype) pos.12_32;
  _34 = st_310(D) + _33;
  c_335 = *_34;
  if (c_335 == 61)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  posl.13_35 = posl_312;
  posl_336 = posl.13_35 + 1;
  _36 = (sizetype) posl.13_35;
  _37 = lex_313(D) + _36;
  *_37 = 61;
  _38 = (sizetype) posl_336;
  _39 = lex_313(D) + _38;
  *_39 = 0;
  pos.14_40 = pos;
  _41 = pos.14_40 + 1;
  pos = _41;
  estado_anterior = 0;
  _341 = 62;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 24> :
  _42 = (sizetype) posl_312;
  _43 = lex_313(D) + _42;
  *_43 = 0;
  _343 = 63;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 25> :
  if (c_311 == 63)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _44 = (sizetype) posl_312;
  _45 = lex_313(D) + _44;
  *_45 = 0;
  pos.15_46 = pos;
  _47 = pos.15_46 + 1;
  pos = _47;
  estado_anterior = 0;
  _347 = 64;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 27> :
  if (c_311 == 43)
    goto <bb 28>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 28> :
  pos.16_48 = pos;
  _49 = pos.16_48 + 1;
  pos = _49;
  pos.17_50 = pos;
  _51 = (sizetype) pos.17_50;
  _52 = st_310(D) + _51;
  c_349 = *_52;
  if (c_349 == 43)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  posl.18_53 = posl_312;
  posl_350 = posl.18_53 + 1;
  _54 = (sizetype) posl.18_53;
  _55 = lex_313(D) + _54;
  *_55 = 43;
  _56 = (sizetype) posl_350;
  _57 = lex_313(D) + _56;
  *_57 = 0;
  pos.19_58 = pos;
  _59 = pos.19_58 + 1;
  pos = _59;
  estado_anterior = 0;
  _355 = 60;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 30> :
  if (c_349 == 61)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  posl.20_60 = posl_312;
  posl_356 = posl.20_60 + 1;
  _61 = (sizetype) posl.20_60;
  _62 = lex_313(D) + _61;
  *_62 = 61;
  _63 = (sizetype) posl_356;
  _64 = lex_313(D) + _63;
  *_64 = 0;
  pos.21_65 = pos;
  _66 = pos.21_65 + 1;
  pos = _66;
  estado_anterior = 0;
  _361 = 53;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 32> :
  _67 = (sizetype) posl_312;
  _68 = lex_313(D) + _67;
  *_68 = 0;
  _363 = 44;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 33> :
  if (c_311 == 45)
    goto <bb 34>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 34> :
  pos.22_69 = pos;
  _70 = pos.22_69 + 1;
  pos = _70;
  pos.23_71 = pos;
  _72 = (sizetype) pos.23_71;
  _73 = st_310(D) + _72;
  c_365 = *_73;
  if (c_365 == 45)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  posl.24_74 = posl_312;
  posl_366 = posl.24_74 + 1;
  _75 = (sizetype) posl.24_74;
  _76 = lex_313(D) + _75;
  *_76 = 45;
  _77 = (sizetype) posl_366;
  _78 = lex_313(D) + _77;
  *_78 = 0;
  pos.25_79 = pos;
  _80 = pos.25_79 + 1;
  pos = _80;
  estado_anterior = 0;
  _371 = 59;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 36> :
  if (c_365 == 61)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  posl.26_81 = posl_312;
  posl_372 = posl.26_81 + 1;
  _82 = (sizetype) posl.26_81;
  _83 = lex_313(D) + _82;
  *_83 = 61;
  _84 = (sizetype) posl_372;
  _85 = lex_313(D) + _84;
  *_85 = 0;
  pos.27_86 = pos;
  _87 = pos.27_86 + 1;
  pos = _87;
  estado_anterior = 0;
  _377 = 52;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 38> :
  _88 = (sizetype) posl_312;
  _89 = lex_313(D) + _88;
  *_89 = 0;
  _379 = 45;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 39> :
  if (c_311 == 42)
    goto <bb 40>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 40> :
  pos.28_90 = pos;
  _91 = pos.28_90 + 1;
  pos = _91;
  pos.29_92 = pos;
  _93 = (sizetype) pos.29_92;
  _94 = st_310(D) + _93;
  c_381 = *_94;
  if (c_381 == 61)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  posl.30_95 = posl_312;
  posl_382 = posl.30_95 + 1;
  _96 = (sizetype) posl.30_95;
  _97 = lex_313(D) + _96;
  *_97 = 61;
  _98 = (sizetype) posl_382;
  _99 = lex_313(D) + _98;
  *_99 = 0;
  pos.31_100 = pos;
  _101 = pos.31_100 + 1;
  pos = _101;
  estado_anterior = 0;
  _387 = 54;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 42> :
  _102 = (sizetype) posl_312;
  _103 = lex_313(D) + _102;
  *_103 = 0;
  _389 = 46;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 43> :
  if (c_311 == 47)
    goto <bb 44>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 44> :
  pos.32_104 = pos;
  _105 = pos.32_104 + 1;
  pos = _105;
  pos.33_106 = pos;
  _107 = (sizetype) pos.33_106;
  _108 = st_310(D) + _107;
  c_391 = *_108;
  if (c_391 == 61)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  posl.34_109 = posl_312;
  posl_392 = posl.34_109 + 1;
  _110 = (sizetype) posl.34_109;
  _111 = lex_313(D) + _110;
  *_111 = 61;
  _112 = (sizetype) posl_392;
  _113 = lex_313(D) + _112;
  *_113 = 0;
  pos.35_114 = pos;
  _115 = pos.35_114 + 1;
  pos = _115;
  estado_anterior = 0;
  _397 = 55;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 46> :
  _116 = (sizetype) posl_312;
  _117 = lex_313(D) + _116;
  *_117 = 0;
  _399 = 47;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 47> :
  if (c_311 == 37)
    goto <bb 48>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 48> :
  pos.36_118 = pos;
  _119 = pos.36_118 + 1;
  pos = _119;
  pos.37_120 = pos;
  _121 = (sizetype) pos.37_120;
  _122 = st_310(D) + _121;
  c_401 = *_122;
  if (c_401 == 61)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  posl.38_123 = posl_312;
  posl_402 = posl.38_123 + 1;
  _124 = (sizetype) posl.38_123;
  _125 = lex_313(D) + _124;
  *_125 = 61;
  _126 = (sizetype) posl_402;
  _127 = lex_313(D) + _126;
  *_127 = 0;
  pos.39_128 = pos;
  _129 = pos.39_128 + 1;
  pos = _129;
  estado_anterior = 0;
  _407 = 56;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 50> :
  _130 = (sizetype) posl_312;
  _131 = lex_313(D) + _130;
  *_131 = 0;
  _409 = 48;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 51> :
  if (c_311 == 124)
    goto <bb 52>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 52> :
  pos.40_132 = pos;
  _133 = pos.40_132 + 1;
  pos = _133;
  pos.41_134 = pos;
  _135 = (sizetype) pos.41_134;
  _136 = st_310(D) + _135;
  c_411 = *_136;
  if (c_411 == 124)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  posl.42_137 = posl_312;
  posl_412 = posl.42_137 + 1;
  _138 = (sizetype) posl.42_137;
  _139 = lex_313(D) + _138;
  *_139 = 124;
  _140 = (sizetype) posl_412;
  _141 = lex_313(D) + _140;
  *_141 = 0;
  pos.43_142 = pos;
  _143 = pos.43_142 + 1;
  pos = _143;
  estado_anterior = 0;
  _417 = 67;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 54> :
  _418 = 102;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 55> :
  if (c_311 == 38)
    goto <bb 56>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 56> :
  pos.44_144 = pos;
  _145 = pos.44_144 + 1;
  pos = _145;
  pos.45_146 = pos;
  _147 = (sizetype) pos.45_146;
  _148 = st_310(D) + _147;
  c_420 = *_148;
  if (c_420 == 38)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  posl.46_149 = posl_312;
  posl_421 = posl.46_149 + 1;
  _150 = (sizetype) posl.46_149;
  _151 = lex_313(D) + _150;
  *_151 = 38;
  _152 = (sizetype) posl_421;
  _153 = lex_313(D) + _152;
  *_153 = 0;
  pos.47_154 = pos;
  _155 = pos.47_154 + 1;
  pos = _155;
  estado_anterior = 0;
  _426 = 68;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 58> :
  _427 = 103;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 59> :
  if (c_311 == 62)
    goto <bb 60>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 60> :
  pos.48_156 = pos;
  _157 = pos.48_156 + 1;
  pos = _157;
  pos.49_158 = pos;
  _159 = (sizetype) pos.49_158;
  _160 = st_310(D) + _159;
  c_429 = *_160;
  if (c_429 == 61)
    goto <bb 61>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 61> :
  posl.50_161 = posl_312;
  posl_430 = posl.50_161 + 1;
  _162 = (sizetype) posl.50_161;
  _163 = lex_313(D) + _162;
  *_163 = 61;
  _164 = (sizetype) posl_430;
  _165 = lex_313(D) + _164;
  *_165 = 0;
  pos.51_166 = pos;
  _167 = pos.51_166 + 1;
  pos = _167;
  estado_anterior = 0;
  _435 = 57;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 62> :
  if (c_429 == 62)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  posl.52_168 = posl_312;
  posl_436 = posl.52_168 + 1;
  _169 = (sizetype) posl.52_168;
  _170 = lex_313(D) + _169;
  *_170 = 62;
  _171 = (sizetype) posl_436;
  _172 = lex_313(D) + _171;
  *_172 = 0;
  pos.53_173 = pos;
  _174 = pos.53_173 + 1;
  pos = _174;
  estado_anterior = 0;
  _441 = 66;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 64> :
  _175 = (sizetype) posl_312;
  _176 = lex_313(D) + _175;
  *_176 = 0;
  _443 = 49;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 65> :
  if (c_311 == 60)
    goto <bb 66>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 66> :
  pos.54_177 = pos;
  _178 = pos.54_177 + 1;
  pos = _178;
  pos.55_179 = pos;
  _180 = (sizetype) pos.55_179;
  _181 = st_310(D) + _180;
  c_445 = *_181;
  if (c_445 == 61)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  posl.56_182 = posl_312;
  posl_446 = posl.56_182 + 1;
  _183 = (sizetype) posl.56_182;
  _184 = lex_313(D) + _183;
  *_184 = 61;
  _185 = (sizetype) posl_446;
  _186 = lex_313(D) + _185;
  *_186 = 0;
  pos.57_187 = pos;
  _188 = pos.57_187 + 1;
  pos = _188;
  estado_anterior = 0;
  _451 = 58;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 68> :
  if (c_445 == 60)
    goto <bb 69>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 69> :
  posl.58_189 = posl_312;
  posl_452 = posl.58_189 + 1;
  _190 = (sizetype) posl.58_189;
  _191 = lex_313(D) + _190;
  *_191 = 60;
  _192 = (sizetype) posl_452;
  _193 = lex_313(D) + _192;
  *_193 = 0;
  pos.59_194 = pos;
  _195 = pos.59_194 + 1;
  pos = _195;
  estado_anterior = 0;
  _457 = 65;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 70> :
  _196 = (sizetype) posl_312;
  _197 = lex_313(D) + _196;
  *_197 = 0;
  _459 = 50;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 71> :
  if (c_311 == 40)
    goto <bb 72>; [INV]
  else
    goto <bb 73>; [INV]

  <bb 72> :
  _198 = (sizetype) posl_312;
  _199 = lex_313(D) + _198;
  *_199 = 0;
  pos.60_200 = pos;
  _201 = pos.60_200 + 1;
  pos = _201;
  estado_anterior = 0;
  _463 = 34;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 73> :
  if (c_311 == 41)
    goto <bb 74>; [INV]
  else
    goto <bb 75>; [INV]

  <bb 74> :
  _202 = (sizetype) posl_312;
  _203 = lex_313(D) + _202;
  *_203 = 0;
  pos.61_204 = pos;
  _205 = pos.61_204 + 1;
  pos = _205;
  estado_anterior = 0;
  _467 = 35;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 75> :
  if (c_311 == 123)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  _206 = (sizetype) posl_312;
  _207 = lex_313(D) + _206;
  *_207 = 0;
  pos.62_208 = pos;
  _209 = pos.62_208 + 1;
  pos = _209;
  estado_anterior = 0;
  _471 = 36;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 77> :
  if (c_311 == 125)
    goto <bb 78>; [INV]
  else
    goto <bb 79>; [INV]

  <bb 78> :
  _210 = (sizetype) posl_312;
  _211 = lex_313(D) + _210;
  *_211 = 0;
  pos.63_212 = pos;
  _213 = pos.63_212 + 1;
  pos = _213;
  estado_anterior = 0;
  _475 = 37;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 79> :
  if (c_311 == 91)
    goto <bb 80>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 80> :
  _214 = (sizetype) posl_312;
  _215 = lex_313(D) + _214;
  *_215 = 0;
  pos.64_216 = pos;
  _217 = pos.64_216 + 1;
  pos = _217;
  estado_anterior = 0;
  _479 = 38;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 81> :
  if (c_311 == 93)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  _218 = (sizetype) posl_312;
  _219 = lex_313(D) + _218;
  *_219 = 0;
  pos.65_220 = pos;
  _221 = pos.65_220 + 1;
  pos = _221;
  estado_anterior = 0;
  _483 = 39;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 83> :
  if (c_311 == 44)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  _222 = (sizetype) posl_312;
  _223 = lex_313(D) + _222;
  *_223 = 0;
  pos.66_224 = pos;
  _225 = pos.66_224 + 1;
  pos = _225;
  estado_anterior = 0;
  _487 = 42;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 85> :
  if (c_311 == 59)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  _226 = (sizetype) posl_312;
  _227 = lex_313(D) + _226;
  *_227 = 0;
  pos.67_228 = pos;
  _229 = pos.67_228 + 1;
  pos = _229;
  estado_anterior = 0;
  _491 = 40;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 87> :
  if (c_311 == 58)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  _230 = (sizetype) posl_312;
  _231 = lex_313(D) + _230;
  *_231 = 0;
  pos.68_232 = pos;
  _233 = pos.68_232 + 1;
  pos = _233;
  estado_anterior = 0;
  _495 = 41;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 89> :
  if (c_311 == 32)
    goto <bb 91>; [INV]
  else
    goto <bb 90>; [INV]

  <bb 90> :
  if (c_311 == 10)
    goto <bb 91>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 91> :
  pos.69_234 = pos;
  _235 = pos.69_234 + 1;
  pos = _235;
  posl_497 = posl_312 + -1;
  pos.70_236 = pos;
  posColuna = pos.70_236;

  <bb 92> :
  # posl_295 = PHI <posl_312(90), posl_497(91)>
  if (c_311 == 127)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  pos.71_237 = pos;
  _238 = pos.71_237 + 1;
  pos = _238;
  posl_500 = posl_295 + -1;
  linha.72_239 = linha;
  _240 = linha.72_239 + 1;
  linha = _240;
  pos.73_241 = pos;
  subColuna = pos.73_241;
  pos.74_242 = pos;
  posColuna = pos.74_242;

  <bb 94> :
  # posl_296 = PHI <posl_295(92), posl_500(93)>
  if (c_311 == 9)
    goto <bb 95>; [INV]
  else
    goto <bb 96>; [INV]

  <bb 95> :
  tab.75_243 = tab;
  _244 = tab.75_243 + 1;
  tab = _244;
  pos.76_245 = pos;
  _246 = pos.76_245 + 1;
  pos = _246;
  pos.77_247 = pos;
  posColuna = pos.77_247;
  posl_507 = posl_296 + -1;
  subColuna.78_248 = subColuna;
  _249 = subColuna.78_248 + -3;
  subColuna = _249;

  <bb 96> :
  # posl_297 = PHI <posl_296(94), posl_507(95)>
  if (c_311 == 0)
    goto <bb 97>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 97> :
  _509 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 98> :
  goto <bb 156>; [INV]

  <bb 99> :
<L97>:
  if (c_311 > 96)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  if (c_311 <= 122)
    goto <bb 106>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 101> :
  if (c_311 > 64)
    goto <bb 102>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 102> :
  if (c_311 <= 90)
    goto <bb 106>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 103> :
  if (c_311 == 95)
    goto <bb 106>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 104> :
  if (c_311 > 47)
    goto <bb 105>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 105> :
  if (c_311 <= 57)
    goto <bb 106>; [INV]
  else
    goto <bb 107>; [INV]

  <bb 106> :
  pos.79_250 = pos;
  _251 = pos.79_250 + 1;
  pos = _251;
  goto <bb 156>; [INV]

  <bb 107> :
  posl_513 = posl_312 + -1;
  _252 = (sizetype) posl_513;
  _253 = lex_313(D) + _252;
  *_253 = 0;
  estado_anterior = 1;
  _517 = palavra_reservada (lex_313(D));
  goto <bb 158>; [INV]

  <bb 108> :
<L106>:
  if (c_311 > 47)
    goto <bb 109>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 109> :
  if (c_311 <= 57)
    goto <bb 110>; [INV]
  else
    goto <bb 111>; [INV]

  <bb 110> :
  pos.80_254 = pos;
  _255 = pos.80_254 + 1;
  pos = _255;
  goto <bb 156>; [INV]

  <bb 111> :
  if (c_311 == 46)
    goto <bb 112>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 112> :
  pos.81_256 = pos;
  _257 = pos.81_256 + 1;
  pos = _257;
  estado_521 = 3;
  estado_anterior = 2;
  goto <bb 156>; [INV]

  <bb 113> :
  if (c_311 == 69)
    goto <bb 114>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 114> :
  pos.82_258 = pos;
  _259 = pos.82_258 + 1;
  pos = _259;
  estado_524 = 4;
  estado_anterior = 2;
  goto <bb 156>; [INV]

  <bb 115> :
  posl_526 = posl_312 + -1;
  _260 = (sizetype) posl_526;
  _261 = lex_313(D) + _260;
  *_261 = 0;
  estado_anterior = 2;
  _529 = 80;
  goto <bb 158>; [INV]

  <bb 116> :
<L115>:
  if (c_311 > 47)
    goto <bb 117>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 117> :
  if (c_311 <= 57)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  pos.83_262 = pos;
  _263 = pos.83_262 + 1;
  pos = _263;
  estado_531 = 7;
  goto <bb 156>; [INV]

  <bb 119> :
  _532 = 101;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 120> :
<L119>:
  if (c_311 > 47)
    goto <bb 121>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 121> :
  if (c_311 <= 57)
    goto <bb 122>; [INV]
  else
    goto <bb 123>; [INV]

  <bb 122> :
  pos.84_264 = pos;
  _265 = pos.84_264 + 1;
  pos = _265;
  estado_534 = 6;
  goto <bb 156>; [INV]

  <bb 123> :
  if (c_311 == 45)
    goto <bb 125>; [INV]
  else
    goto <bb 124>; [INV]

  <bb 124> :
  if (c_311 == 43)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  pos.85_266 = pos;
  _267 = pos.85_266 + 1;
  pos = _267;
  estado_537 = 5;
  goto <bb 156>; [INV]

  <bb 126> :
  _535 = 100;
  goto <bb 158>; [INV]

  <bb 127> :
<L126>:
  if (c_311 > 47)
    goto <bb 128>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 128> :
  if (c_311 <= 57)
    goto <bb 129>; [INV]
  else
    goto <bb 130>; [INV]

  <bb 129> :
  pos.86_268 = pos;
  _269 = pos.86_268 + 1;
  pos = _269;
  estado_539 = 6;
  goto <bb 156>; [INV]

  <bb 130> :
  _540 = 100;
  goto <bb 158>; [INV]

  <bb 131> :
<L131>:
  if (c_311 > 47)
    goto <bb 132>; [INV]
  else
    goto <bb 134>; [INV]

  <bb 132> :
  if (c_311 <= 57)
    goto <bb 133>; [INV]
  else
    goto <bb 134>; [INV]

  <bb 133> :
  pos.87_270 = pos;
  _271 = pos.87_270 + 1;
  pos = _271;
  goto <bb 156>; [INV]

  <bb 134> :
  estado_anterior.88_272 = estado_anterior;
  if (estado_anterior.88_272 == 2)
    goto <bb 135>; [INV]
  else
    goto <bb 136>; [INV]

  <bb 135> :
  posl_542 = posl_312 + -1;
  _273 = (sizetype) posl_542;
  _274 = lex_313(D) + _273;
  *_274 = 0;
  estado_anterior = 6;
  _545 = 80;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 136> :
  posl_546 = posl_312 + -1;
  _275 = (sizetype) posl_546;
  _276 = lex_313(D) + _275;
  *_276 = 0;
  estado_anterior = 6;
  _549 = 81;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 137> :
<L138>:
  if (c_311 > 47)
    goto <bb 138>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 138> :
  if (c_311 <= 57)
    goto <bb 139>; [INV]
  else
    goto <bb 140>; [INV]

  <bb 139> :
  pos.89_277 = pos;
  _278 = pos.89_277 + 1;
  pos = _278;
  goto <bb 156>; [INV]

  <bb 140> :
  if (c_311 == 69)
    goto <bb 141>; [INV]
  else
    goto <bb 142>; [INV]

  <bb 141> :
  pos.90_279 = pos;
  _280 = pos.90_279 + 1;
  pos = _280;
  estado_552 = 4;
  estado_anterior = 7;
  goto <bb 156>; [INV]

  <bb 142> :
  posl_554 = posl_312 + -1;
  _281 = (sizetype) posl_554;
  _282 = lex_313(D) + _281;
  *_282 = 0;
  estado_anterior = 7;
  _557 = 81;
  goto <bb 158>; [INV]

  <bb 143> :
<L145>:
  if (c_311 > 47)
    goto <bb 144>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 144> :
  if (c_311 <= 57)
    goto <bb 145>; [INV]
  else
    goto <bb 146>; [INV]

  <bb 145> :
  pos.91_283 = pos;
  _284 = pos.91_283 + 1;
  pos = _284;
  goto <bb 156>; [INV]

  <bb 146> :
  if (c_311 == 120)
    goto <bb 148>; [INV]
  else
    goto <bb 147>; [INV]

  <bb 147> :
  if (c_311 == 88)
    goto <bb 148>; [INV]
  else
    goto <bb 149>; [INV]

  <bb 148> :
  pos.92_285 = pos;
  _286 = pos.92_285 + 1;
  pos = _286;
  estado_563 = 9;
  estado_anterior = 8;
  goto <bb 156>; [INV]

  <bb 149> :
  posl_559 = posl_312 + -1;
  _287 = (sizetype) posl_559;
  _288 = lex_313(D) + _287;
  *_288 = 0;
  _561 = 80;
  goto <bb 158>; [INV]

  <bb 150> :
<L153>:
  if (c_311 > 47)
    goto <bb 151>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 151> :
  if (c_311 <= 57)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  pos.93_289 = pos;
  _290 = pos.93_289 + 1;
  pos = _290;
  estado_anterior = 9;
  goto <bb 156>; [INV]

  <bb 153> :
  estado_anterior.94_291 = estado_anterior;
  if (estado_anterior.94_291 == 8)
    goto <bb 154>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 154> :
  _567 = 104;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 158>; [INV]

  <bb 155> :
  posl_568 = posl_312 + -1;
  _292 = (sizetype) posl_568;
  _293 = lex_313(D) + _292;
  *_293 = 0;
  _570 = 80;
  goto <bb 158>; [INV]

  <bb 156> :
  # estado_294 = PHI <estado_305(2), estado_294(3), estado_511(9), estado_316(13), estado_319(14), estado_322(16), estado_294(98), estado_294(106), estado_294(110), estado_521(112), estado_524(114), estado_531(118), estado_534(122), estado_537(125), estado_539(129), estado_294(133), estado_294(139), estado_552(141), estado_294(145), estado_563(148), estado_294(152)>
  # posl_298 = PHI <posl_307(2), posl_312(3), posl_312(9), posl_312(13), posl_312(14), posl_312(16), posl_297(98), posl_312(106), posl_312(110), posl_312(112), posl_312(114), posl_312(118), posl_312(122), posl_312(125), posl_312(129), posl_312(133), posl_312(139), posl_312(141), posl_312(145), posl_312(148), posl_312(152)>
<L159>:
  if (fim_306 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 157>; [INV]

  <bb 157> :
  _571 = -1;

  <bb 158> :
  # _299 = PHI <_331(19), _333(20), _341(23), _343(24), _347(26), _355(29), _361(31), _363(32), _371(35), _377(37), _379(38), _387(41), _389(42), _397(45), _399(46), _407(49), _409(50), _417(53), _418(54), _426(57), _427(58), _435(61), _441(63), _443(64), _451(67), _457(69), _459(70), _463(72), _467(74), _471(76), _475(78), _479(80), _483(82), _487(84), _491(86), _495(88), _509(97), _517(107), _529(115), _532(119), _535(126), _540(130), _545(135), _549(136), _557(142), _561(149), _567(154), _570(155), _571(157)>
<L163>:
  return _299;

}



;; Function getToken (getToken, funcdef_no=19, decl_uid=4998, cgraph_uid=19, symbol_order=35)

Released 0 names, 0.00%, removed 0 holes
getToken ()
{
  int posParser.95_1;
  int posParser.96_2;
  int _3;
  int _4;
  int posParser.97_5;
  int posParser.98_6;
  int _7;
  int _8;
  int posParser.99_9;
  int posParser.100_10;
  int _11;
  int _12;
  int posParserLex.101_13;
  int posParserLex.102_14;
  int _15;
  char[20] * _16;

  <bb 2> :
  posParser.95_1 = posParser;
  posParser.96_2 = posParser.95_1;
  _3 = posParser.96_2 + 1;
  posParser = _3;
  _4 = tksParser[posParser.96_2];
  tk = _4;
  posParser.97_5 = posParser;
  posParser.98_6 = posParser.97_5;
  _7 = posParser.98_6 + 1;
  posParser = _7;
  _8 = tksParser[posParser.98_6];
  linha = _8;
  posParser.99_9 = posParser;
  posParser.100_10 = posParser.99_9;
  _11 = posParser.100_10 + 1;
  posParser = _11;
  _12 = tksParser[posParser.100_10];
  coluna = _12;
  posParserLex.101_13 = posParserLex;
  posParserLex.102_14 = posParserLex.101_13;
  _15 = posParserLex.102_14 + 1;
  posParserLex = _15;
  _16 = &tksParserLex[posParserLex.102_14];
  strcpy (&lex, _16);
  return;

}



;; Function addTabelaSimbolos (addTabelaSimbolos, funcdef_no=20, decl_uid=5008, cgraph_uid=20, symbol_order=37)

Released 0 names, 0.00%, removed 0 holes
addTabelaSimbolos (char * id, char * tipo)
{
  struct tabela * aux;
  char[10] * _1;
  char[10] * _2;
  struct tabela * ts.103_3;

  <bb 2> :
  aux_6 = malloc (32);
  _1 = &aux_6->id;
  strcpy (_1, id_7(D));
  _2 = &aux_6->tipo;
  strcpy (_2, tipo_9(D));
  ts.103_3 = ts;
  aux_6->prox = ts.103_3;
  ts = aux_6;
  return;

}



;; Function verificaDuplicacao (verificaDuplicacao, funcdef_no=21, decl_uid=5013, cgraph_uid=21, symbol_order=38)

Released 0 names, 0.00%, removed 0 holes
verificaDuplicacao (char * lex, struct tabela * tab)
{
  int D.5801;
  char[10] * _1;
  int _2;
  int coluna.104_3;
  int linha.105_4;
  struct TS * _5;
  int _6;
  int _9;
  int _16;

  <bb 2> :
  if (tab_8(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _9 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _1 = &tab_8(D)->id;
  _2 = strcmp (_1, lex_11(D));
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  printf ("Variavel %s ja foi declarada\n", lex_11(D));
  coluna.104_3 = coluna;
  linha.105_4 = linha;
  printf ("Erro ocorreu na linha %d, coluna %d", linha.105_4, coluna.104_3);
  exit (0);

  <bb 6> :
  _5 = tab_8(D)->prox;
  _16 = verificaDuplicacao (lex_11(D), _5);

  <bb 7> :
  # _6 = PHI <_9(3), _16(6)>
<L4>:
  return _6;

}



;; Function consultaTipo (consultaTipo, funcdef_no=22, decl_uid=5018, cgraph_uid=22, symbol_order=39)

Released 0 names, 0.00%, removed 0 holes
consultaTipo (char * id, char * Tipo, struct tabela * tab)
{
  char[10] * _1;
  int _2;
  char[10] * _3;
  struct TS * _4;

  <bb 2> :
  if (tab_7(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _1 = &tab_7(D)->id;
  _2 = strcmp (_1, id_9(D));
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = &tab_7(D)->tipo;
  strcpy (Tipo_10(D), _3);

  <bb 6> :
  _4 = tab_7(D)->prox;
  consultaTipo (id_9(D), Tipo_10(D), _4);

  <bb 7> :
<L4>:
  return;

}



;; Function geralabel (geralabel, funcdef_no=23, decl_uid=5021, cgraph_uid=23, symbol_order=40)

Released 0 names, 0.00%, removed 0 holes
geralabel (char * label)
{
  static int numlabel = 0;
  int numlabel.106_1;
  int numlabel.107_2;
  int _3;

  <bb 2> :
  numlabel.106_1 = numlabel;
  numlabel.107_2 = numlabel.106_1;
  _3 = numlabel.107_2 + 1;
  numlabel = _3;
  sprintf (label_6(D), "LB%03d", numlabel.107_2);
  return;

}



;; Function geratemp (geratemp, funcdef_no=24, decl_uid=5025, cgraph_uid=24, symbol_order=41)

Released 0 names, 0.00%, removed 0 holes
geratemp (char * temp)
{
  static int numtemp = 0;
  int numtemp.108_1;
  int numtemp.109_2;
  int _3;

  <bb 2> :
  numtemp.108_1 = numtemp;
  numtemp.109_2 = numtemp.108_1;
  _3 = numtemp.109_2 + 1;
  numtemp = _3;
  sprintf (temp_6(D), "T%03d", numtemp.109_2);
  return;

}



;; Function RDV (RDV, funcdef_no=31, decl_uid=4765, cgraph_uid=31, symbol_order=48)

Released 0 names, 0.00%, removed 0 holes
RDV (char * RDV_t)
{
  char DV_t[10];
  int D.5868;
  int tk.130_1;
  int _2;
  int tk.131_3;
  int coluna.132_4;
  int linha.133_5;
  int _6;
  int _13;
  int _14;
  int _16;
  int _18;

  <bb 2> :
  tk.130_1 = tk;
  if (tk.130_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&DV_t, RDV_t_9(D));
  getToken ();
  _2 = DV (&DV_t);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _13 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 5> :
  _14 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  tk.131_3 = tk;
  if (tk.131_3 == 40)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  getToken ();
  _16 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  coluna.132_4 = coluna;
  linha.133_5 = linha;
  printf ("Erro: esperava token \',\' ou \';\' na linha %d coluna %d\n", linha.133_5, coluna.132_4);
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _6 = PHI <_13(4), _14(5), _16(7), _18(8)>
  DV_t ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _6;

}



;; Function DV (DV, funcdef_no=30, decl_uid=4763, cgraph_uid=30, symbol_order=47)

Released 0 names, 0.00%, removed 0 holes
DV (char * DV_t)
{
  char RDV_t[10];
  int D.5861;
  int tk.126_1;
  struct tabela * ts.127_2;
  int _3;
  int _4;
  int coluna.128_5;
  int linha.129_6;
  int _7;
  int _17;
  int _18;
  int _20;

  <bb 2> :
  tk.126_1 = tk;
  if (tk.126_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  strcpy (&RDV_t, DV_t_11(D));
  ts.127_2 = ts;
  _3 = verificaDuplicacao (&lex, ts.127_2);
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  addTabelaSimbolos (&lex, DV_t_11(D));

  <bb 5> :
  getToken ();
  _4 = RDV (&RDV_t);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  coluna.128_5 = coluna;
  linha.129_6 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.129_6, coluna.128_5);
  _20 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _7 = PHI <_17(6), _18(7), _20(8)>
  RDV_t ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _7;

}



;; Function RTIPOSINAL2 (RTIPOSINAL2, funcdef_no=34, decl_uid=4773, cgraph_uid=34, symbol_order=51)

Released 0 names, 0.00%, removed 0 holes
RTIPOSINAL2 (char * RTIPOSINAL2_s, char * RTIPOSINAL2_t)
{
  int D.5929;
  long long unsigned int D.5927;
  char * D.5928;
  int tk.152_1;
  int coluna.153_2;
  int linha.154_3;
  int _4;
  long long unsigned int _8;
  char * _9;
  int _14;
  int _16;

  <bb 2> :
  tk.152_1 = tk;
  if (tk.152_1 == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = __builtin_strlen (RTIPOSINAL2_s_7(D));
  _9 = RTIPOSINAL2_s_7(D) + _8;
  __builtin_memcpy (_9, " int", 5);
  strcpy (RTIPOSINAL2_t_11(D), RTIPOSINAL2_s_7(D));
  getToken ();
  _14 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  coluna.153_2 = coluna;
  linha.154_3 = linha;
  printf ("Erro: esperava token \'int\' na linha %d coluna %d\n", linha.154_3, coluna.153_2);
  _16 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _4 = PHI <_14(3), _16(4)>
<L2>:
  return _4;

}



;; Function RTIPOSINAL (RTIPOSINAL, funcdef_no=33, decl_uid=4770, cgraph_uid=33, symbol_order=50)

Released 0 names, 0.00%, removed 0 holes
RTIPOSINAL (char * RTIPOSINAL_s, char * RTIPOSINAL_t)
{
  char RTIPOSINAL2_t[10];
  char RTIPOSINAL2_s[10];
  long long unsigned int D.5919;
  long long unsigned int D.5914;
  int D.5908;
  long long unsigned int D.5906;
  long long unsigned int D.5901;
  char * D.5920;
  char * D.5915;
  char * D.5907;
  char * D.5902;
  int tk.144_1;
  int tk.145_2;
  int tk.146_3;
  int tk.147_4;
  int tk.148_5;
  int tk.149_6;
  int tk.150_7;
  int tk.151_8;
  int _9;
  int _10;
  int _15;
  long long unsigned int _17;
  char * _18;
  long long unsigned int _21;
  char * _22;
  int _29;
  int _30;
  long long unsigned int _31;
  char * _32;
  long long unsigned int _35;
  char * _36;
  int _40;

  <bb 2> :
  tk.144_1 = tk;
  if (tk.144_1 == 69)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  tk.145_2 = tk;
  if (tk.145_2 == 4)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  tk.146_3 = tk;
  if (tk.146_3 == 69)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _31 = __builtin_strlen (RTIPOSINAL_s_16(D));
  _32 = RTIPOSINAL_s_16(D) + _31;
  __builtin_memcpy (_32, " char", 6);
  strcpy (RTIPOSINAL_t_27(D), RTIPOSINAL_s_16(D));
  goto <bb 8>; [INV]

  <bb 6> :
  tk.147_4 = tk;
  if (tk.147_4 == 4)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _35 = __builtin_strlen (RTIPOSINAL_s_16(D));
  _36 = RTIPOSINAL_s_16(D) + _35;
  __builtin_memcpy (_36, " int", 5);
  strcpy (RTIPOSINAL_t_27(D), RTIPOSINAL_s_16(D));

  <bb 8> :
  getToken ();
  _40 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 9> :
  tk.148_5 = tk;
  if (tk.148_5 == 3)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  tk.149_6 = tk;
  if (tk.149_6 == 5)
    goto <bb 11>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 11> :
  tk.150_7 = tk;
  if (tk.150_7 == 3)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _17 = __builtin_strlen (RTIPOSINAL_s_16(D));
  _18 = RTIPOSINAL_s_16(D) + _17;
  __builtin_memcpy (_18, " short", 7);
  strcpy (&RTIPOSINAL2_s, RTIPOSINAL_s_16(D));
  goto <bb 15>; [INV]

  <bb 13> :
  tk.151_8 = tk;
  if (tk.151_8 == 5)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _21 = __builtin_strlen (RTIPOSINAL_s_16(D));
  _22 = RTIPOSINAL_s_16(D) + _21;
  __builtin_memcpy (_22, " long", 6);
  strcpy (&RTIPOSINAL2_s, RTIPOSINAL_s_16(D));

  <bb 15> :
  getToken ();
  _9 = RTIPOSINAL2 (&RTIPOSINAL2_s, &RTIPOSINAL2_t);
  if (_9 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  strcpy (RTIPOSINAL_t_27(D), &RTIPOSINAL2_t);
  _29 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  _30 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  _15 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  # _10 = PHI <_40(8), _29(16), _30(17), _15(18)>
  RTIPOSINAL2_s ={v} {CLOBBER};
  RTIPOSINAL2_t ={v} {CLOBBER};

  <bb 20> :
<L19>:
  return _10;

}



;; Function RTIPOSHORT (RTIPOSHORT, funcdef_no=35, decl_uid=4776, cgraph_uid=35, symbol_order=52)

Released 0 names, 0.00%, removed 0 holes
RTIPOSHORT (char * RTIPOSHORT_s, char * RTIPOSHORT_t)
{
  int D.5935;
  long long unsigned int D.5933;
  char * D.5934;
  int tk.155_1;
  int _2;
  long long unsigned int _6;
  char * _7;
  int _12;
  int _13;

  <bb 2> :
  tk.155_1 = tk;
  if (tk.155_1 == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = __builtin_strlen (RTIPOSHORT_s_5(D));
  _7 = RTIPOSHORT_s_5(D) + _6;
  __builtin_memcpy (_7, " int", 5);
  strcpy (RTIPOSHORT_t_9(D), RTIPOSHORT_s_5(D));
  getToken ();
  _12 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _13 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_12(3), _13(4)>
<L2>:
  return _2;

}



;; Function RTIPOLONG2 (RTIPOLONG2, funcdef_no=37, decl_uid=4782, cgraph_uid=37, symbol_order=54)

Released 0 names, 0.00%, removed 0 holes
RTIPOLONG2 (char * RTIPOLONG2_s, char * RTIPOLONG2_t)
{
  int D.5962;
  long long unsigned int D.5960;
  char * D.5961;
  int tk.161_1;
  int _2;
  long long unsigned int _6;
  char * _7;
  int _12;
  int _13;

  <bb 2> :
  tk.161_1 = tk;
  if (tk.161_1 == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = __builtin_strlen (RTIPOLONG2_s_5(D));
  _7 = RTIPOLONG2_s_5(D) + _6;
  __builtin_memcpy (_7, " int", 5);
  strcpy (RTIPOLONG2_t_9(D), RTIPOLONG2_s_5(D));
  getToken ();
  _12 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _13 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_12(3), _13(4)>
<L2>:
  return _2;

}



;; Function RTIPOLONG (RTIPOLONG, funcdef_no=36, decl_uid=4779, cgraph_uid=36, symbol_order=53)

Released 0 names, 0.00%, removed 0 holes
RTIPOLONG (char * RTIPOLONG_s, char * RTIPOLONG_t)
{
  char RTIPOLONG2_s[10];
  char RTIPOLONG2_t[10];
  long long unsigned int D.5952;
  int D.5949;
  long long unsigned int D.5947;
  long long unsigned int D.5942;
  char * D.5953;
  char * D.5948;
  char * D.5943;
  int tk.156_1;
  int tk.157_2;
  int tk.158_3;
  int tk.159_4;
  int tk.160_5;
  int _6;
  int _7;
  long long unsigned int _12;
  char * _13;
  int _20;
  int _21;
  int _22;
  long long unsigned int _23;
  char * _24;
  long long unsigned int _27;
  char * _28;
  int _32;

  <bb 2> :
  tk.156_1 = tk;
  if (tk.156_1 == 4)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  tk.157_2 = tk;
  if (tk.157_2 == 7)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  tk.158_3 = tk;
  if (tk.158_3 == 4)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _23 = __builtin_strlen (RTIPOLONG_s_11(D));
  _24 = RTIPOLONG_s_11(D) + _23;
  __builtin_memcpy (_24, " int", 5);
  strcpy (RTIPOLONG_t_18(D), RTIPOLONG_s_11(D));
  goto <bb 8>; [INV]

  <bb 6> :
  tk.159_4 = tk;
  if (tk.159_4 == 7)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _27 = __builtin_strlen (RTIPOLONG_s_11(D));
  _28 = RTIPOLONG_s_11(D) + _27;
  __builtin_memcpy (_28, " char", 6);
  strcpy (RTIPOLONG_t_18(D), RTIPOLONG_s_11(D));

  <bb 8> :
  getToken ();
  _32 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 9> :
  tk.160_5 = tk;
  if (tk.160_5 == 5)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  _12 = __builtin_strlen (RTIPOLONG_s_11(D));
  _13 = RTIPOLONG_s_11(D) + _12;
  __builtin_memcpy (_13, " double", 8);
  strcpy (&RTIPOLONG2_s, RTIPOLONG_s_11(D));
  getToken ();
  _6 = RTIPOLONG2 (&RTIPOLONG2_s, &RTIPOLONG2_t);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (RTIPOLONG_t_18(D), &RTIPOLONG2_t);
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 12> :
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  _22 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 14> :
  # _7 = PHI <_32(8), _20(11), _21(12), _22(13)>
  RTIPOLONG2_t ={v} {CLOBBER};
  RTIPOLONG2_s ={v} {CLOBBER};

  <bb 15> :
<L13>:
  return _7;

}



;; Function TIPO (TIPO, funcdef_no=32, decl_uid=4767, cgraph_uid=32, symbol_order=49)

Released 0 names, 0.00%, removed 0 holes
TIPO (char * Tipo_t)
{
  char RTIPOLONG_t[10];
  char RTIPOSHORT_t[10];
  char RTIPOSINAL_t[10];
  char RTIPOLONG_s[10];
  char RTIPOSHORT_s[10];
  char RTIPOSINAL_s[10];
  int D.5879;
  int tk.134_1;
  int tk.135_2;
  int tk.136_3;
  int tk.137_4;
  int tk.138_5;
  int tk.139_6;
  int tk.140_7;
  int tk.141_8;
  int _9;
  int tk.142_10;
  int _11;
  int tk.143_12;
  int _13;
  int _14;
  int _24;
  int _25;
  int _30;
  int _31;
  int _32;
  int _40;
  int _41;
  int _47;

  <bb 2> :
  tk.134_1 = tk;
  if (tk.134_1 == 69)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  tk.135_2 = tk;
  if (tk.135_2 == 4)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  tk.136_3 = tk;
  if (tk.136_3 == 6)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  tk.137_4 = tk;
  if (tk.137_4 == 7)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  tk.138_5 = tk;
  switch (tk.138_5) <default: <L8> [INV], case 4: <L5> [INV], case 6: <L6> [INV], case 7: <L7> [INV], case 69: <L4> [INV]>

  <bb 7> :
<L4>:
  __builtin_memcpy (Tipo_t_22(D), "char", 5);
  goto <bb 11>; [INV]

  <bb 8> :
<L5>:
  __builtin_memcpy (Tipo_t_22(D), "int", 4);
  goto <bb 11>; [INV]

  <bb 9> :
<L6>:
  __builtin_memcpy (Tipo_t_22(D), "float", 6);
  goto <bb 11>; [INV]

  <bb 10> :
<L7>:
  __builtin_memcpy (Tipo_t_22(D), "double", 7);

  <bb 11> :
<L8>:
  getToken ();
  _47 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 12> :
  tk.139_6 = tk;
  if (tk.139_6 == 26)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  tk.140_7 = tk;
  if (tk.140_7 == 27)
    goto <bb 14>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 14> :
  tk.141_8 = tk;
  switch (tk.141_8) <default: <L15> [INV], case 26: <L13> [INV], case 27: <L14> [INV]>

  <bb 15> :
<L13>:
  __builtin_memcpy (&RTIPOSINAL_s, "signed", 7);
  strcpy (&RTIPOSINAL_t, Tipo_t_22(D));
  goto <bb 17>; [INV]

  <bb 16> :
<L14>:
  __builtin_memcpy (&RTIPOSINAL_s, "unsigned", 9);
  strcpy (&RTIPOSINAL_t, Tipo_t_22(D));

  <bb 17> :
<L15>:
  getToken ();
  _9 = RTIPOSINAL (&RTIPOSINAL_s, &RTIPOSINAL_t);
  if (_9 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  strcpy (Tipo_t_22(D), &RTIPOSINAL_t);
  _40 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 19> :
  _41 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 20> :
  tk.142_10 = tk;
  if (tk.142_10 == 3)
    goto <bb 21>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 21> :
  __builtin_memcpy (&RTIPOSHORT_s, "short", 6);
  getToken ();
  _11 = RTIPOSHORT (&RTIPOSHORT_s, &RTIPOSHORT_t);
  if (_11 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  strcpy (Tipo_t_22(D), &RTIPOSHORT_t);
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 23> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 24> :
  tk.143_12 = tk;
  if (tk.143_12 == 5)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  __builtin_memcpy (&RTIPOLONG_s, "long", 5);
  getToken ();
  _13 = RTIPOLONG (&RTIPOLONG_s, &RTIPOLONG_t);
  if (_13 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  strcpy (Tipo_t_22(D), &RTIPOLONG_t);
  _30 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 27> :
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 28> :
  _32 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 29> :
  # _14 = PHI <_47(11), _40(18), _41(19), _24(22), _25(23), _30(26), _31(27), _32(28)>
  RTIPOSINAL_s ={v} {CLOBBER};
  RTIPOSHORT_s ={v} {CLOBBER};
  RTIPOLONG_s ={v} {CLOBBER};
  RTIPOSINAL_t ={v} {CLOBBER};
  RTIPOSHORT_t ={v} {CLOBBER};
  RTIPOLONG_t ={v} {CLOBBER};

  <bb 30> :
<L29>:
  return _14;

}



;; Function RLP (RLP, funcdef_no=40, decl_uid=4785, cgraph_uid=40, symbol_order=57)

Released 0 names, 0.00%, removed 0 holes
RLP ()
{
  char TIPO_t[10];
  int D.5998;
  int tk.175_1;
  int _2;
  int tk.176_3;
  struct tabela * ts.177_4;
  int _5;
  int _6;
  int coluna.178_7;
  int linha.179_8;
  int _9;
  int _19;
  int _20;
  int _22;
  int _23;
  int _24;

  <bb 2> :
  tk.175_1 = tk;
  if (tk.175_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  getToken ();
  _2 = TIPO (&TIPO_t);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  tk.176_3 = tk;
  if (tk.176_3 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  ts.177_4 = ts;
  _5 = verificaDuplicacao (&lex, ts.177_4);
  if (_5 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  addTabelaSimbolos (&lex, &TIPO_t);

  <bb 7> :
  getToken ();
  _6 = RLP ();
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _19 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  _20 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  coluna.178_7 = coluna;
  linha.179_8 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.179_8, coluna.178_7);
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  # _9 = PHI <_19(8), _20(9), _22(10), _23(11), _24(12)>
  TIPO_t ={v} {CLOBBER};

  <bb 14> :
<L11>:
  return _9;

}



;; Function LP (LP, funcdef_no=39, decl_uid=4784, cgraph_uid=39, symbol_order=56)

Released 0 names, 0.00%, removed 0 holes
LP ()
{
  char TIPO_t[10];
  int D.5985;
  int _1;
  int tk.171_2;
  struct tabela * ts.172_3;
  int _4;
  int _5;
  int coluna.173_6;
  int linha.174_7;
  int _8;
  int _17;
  int _18;
  int _20;
  int _21;

  <bb 2> :
  _1 = TIPO (&TIPO_t);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  tk.171_2 = tk;
  if (tk.171_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  ts.172_3 = ts;
  _4 = verificaDuplicacao (&lex, ts.172_3);
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  addTabelaSimbolos (&lex, &TIPO_t);

  <bb 6> :
  getToken ();
  _5 = RLP ();
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 9> :
  coluna.173_6 = coluna;
  linha.174_7 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.174_7, coluna.173_6);
  _20 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 11> :
  # _8 = PHI <_17(7), _18(8), _20(9), _21(10)>
  TIPO_t ={v} {CLOBBER};

  <bb 12> :
<L9>:
  return _8;

}



;; Function RE (RE, funcdef_no=83, decl_uid=4964, cgraph_uid=83, symbol_order=100)

Released 0 names, 0.00%, removed 0 holes
RE ()
{
  int D.6589;
  int tk.330_1;
  int _2;
  int tk.331_3;
  int coluna.332_4;
  int linha.333_5;
  int _6;
  int _12;
  int _14;
  int _15;
  int _16;

  <bb 2> :
  tk.330_1 = tk;
  if (tk.330_1 == 34)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = LP ();
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  tk.331_3 = tk;
  if (tk.331_3 == 35)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  getToken ();
  _12 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  coluna.332_4 = coluna;
  linha.333_5 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.333_5, coluna.332_4);
  _14 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _15 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _16 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _6 = PHI <_12(5), _14(6), _15(7), _16(8)>
<L6>:
  return _6;

}



;; Function E14 (E14, funcdef_no=82, decl_uid=4963, cgraph_uid=82, symbol_order=99)

Released 0 names, 0.00%, removed 0 holes
E14 (char * E14_tp, char * E14_p, char * E14_c)
{
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6563;
  int tk.324_1;
  int tk.325_2;
  int tk.326_3;
  struct tabela * ts.327_4;
  int _5;
  int _6;
  int _7;
  int tk.328_8;
  int _9;
  int tk.329_10;
  int _11;
  int _12;
  int _23;
  int _28;
  int _36;
  int _37;
  int _43;
  int _44;
  int _45;
  int _48;

  <bb 2> :
  tk.324_1 = tk;
  if (tk.324_1 == 80)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_memcpy (E14_tp_16(D), "int", 4);
  geratemp (E14_p_18(D));
  sprintf (E14_c_20(D), "\t%s = %s\n", E14_p_18(D), &lex);
  getToken ();
  _23 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 4> :
  tk.325_2 = tk;
  if (tk.325_2 == 81)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_memcpy (E14_tp_16(D), "float", 6);
  geratemp (E14_p_18(D));
  sprintf (E14_c_20(D), "\t%s = %s\n", E14_p_18(D), &lex);
  getToken ();
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 6> :
  tk.326_3 = tk;
  if (tk.326_3 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  ts.327_4 = ts;
  consultaTipo (&lex, E14_tp_16(D), ts.327_4);
  _5 = strcmp (E14_tp_16(D), "int");
  if (_5 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _6 = strcmp (E14_tp_16(D), "float");
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  printf ("Variavel %s nao foi declarada\n", &lex);
  exit (0);

  <bb 10> :
  strcpy (E14_p_18(D), &lex);
  __builtin_memcpy (E14_c_20(D), "", 1);
  getToken ();
  _7 = RE ();
  if (_7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _36 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 12> :
  _37 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 13> :
  tk.328_8 = tk;
  if (tk.328_8 == 34)
    goto <bb 14>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 14> :
  getToken ();
  _9 = E (&E_tp, &E_p, &E_c);
  if (_9 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  tk.329_10 = tk;
  if (tk.329_10 == 35)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  getToken ();
  strcpy (E14_c_20(D), &E_c);
  strcpy (E14_p_18(D), &E_p);
  _43 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  _44 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  # _11 = PHI <_43(16), _44(17), _45(18)>
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};
  goto <bb 21>; [INV]

  <bb 20> :
  _48 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 21> :
  # _12 = PHI <_23(3), _28(5), _36(11), _37(12), _11(19), _48(20)>
  E_tp ={v} {CLOBBER};

  <bb 22> :
<L20>:
  return _12;

}



;; Function E13 (E13, funcdef_no=81, decl_uid=4959, cgraph_uid=81, symbol_order=98)

Released 0 names, 0.00%, removed 0 holes
E13 (char * E13_tp, char * E13_p, char * E13_c)
{
  char E13Linha_s[10];
  char E13Linha_h[10];
  char E13Linha_tp[10];
  char E14_c[1000];
  char E14_p[10];
  char E14_tp[10];
  int D.6546;
  int _1;
  int tk.320_2;
  int _3;
  int tk.321_4;
  int _5;
  int tk.322_6;
  int _7;
  int tk.323_8;
  int _9;
  int _10;
  int _19;
  int _20;
  int _25;
  int _26;
  int _31;
  int _32;
  int _37;
  int _38;
  int _44;
  int _45;

  <bb 2> :
  _1 = E14 (&E14_tp, &E14_p, &E14_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 3> :
  tk.320_2 = tk;
  if (tk.320_2 == 45)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  strcpy (&E13Linha_h, &E14_tp);
  getToken ();
  _3 = E13 (&E13Linha_tp, &E13Linha_h, &E13Linha_s);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E13_tp_17(D), &E13Linha_s);
  _19 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 6> :
  _20 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 7> :
  tk.321_4 = tk;
  if (tk.321_4 == 60)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  strcpy (&E13Linha_h, &E14_tp);
  getToken ();
  _5 = E13 (&E13Linha_tp, &E13Linha_h, &E13Linha_s);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E13_tp_17(D), &E13Linha_s);
  _25 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  _26 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 11> :
  tk.322_6 = tk;
  if (tk.322_6 == 59)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  strcpy (&E13Linha_h, &E14_tp);
  getToken ();
  _7 = E13 (&E13Linha_tp, &E13Linha_h, &E13Linha_s);
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  strcpy (E13_tp_17(D), &E13Linha_s);
  _31 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 14> :
  _32 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 15> :
  tk.323_8 = tk;
  if (tk.323_8 == 63)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  strcpy (&E13Linha_h, &E14_tp);
  getToken ();
  _9 = E13 (&E13Linha_tp, &E13Linha_h, &E13Linha_s);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  strcpy (E13_tp_17(D), &E13Linha_s);
  _37 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  _38 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 19> :
  strcpy (E13_tp_17(D), &E14_tp);
  strcpy (E13_p_40(D), &E14_p);
  strcpy (E13_c_42(D), &E14_c);
  _44 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  _45 = 0;

  <bb 21> :
  # _10 = PHI <_19(5), _20(6), _25(9), _26(10), _31(13), _32(14), _37(17), _38(18), _44(19), _45(20)>
  E14_tp ={v} {CLOBBER};
  E14_p ={v} {CLOBBER};
  E14_c ={v} {CLOBBER};
  E13Linha_tp ={v} {CLOBBER};
  E13Linha_h ={v} {CLOBBER};
  E13Linha_s ={v} {CLOBBER};

  <bb 22> :
<L19>:
  return _10;

}



;; Function E12Linha (E12Linha, funcdef_no=80, decl_uid=4955, cgraph_uid=80, symbol_order=97)

Released 0 names, 0.00%, removed 0 holes
E12Linha (char * E12Linha_h, char * E12Linha_s, char * E12Linha_hp, char * E12Linha_sp, char * E12Linha_hc, char * E12Linha_sc)
{
  char E12Linha2_sc[1000];
  char E12Linha2_hc[1000];
  char E12Linha2_sp[10];
  char E12Linha2_hp[10];
  char E12Linha2_s[10];
  char E12Linha2_h[10];
  char E13_c[1000];
  char E13_p[10];
  char E13_tp[10];
  int D.6517;
  int tk.317_1;
  int _2;
  int _3;
  int _4;
  int _5;
  int tk.318_6;
  int _7;
  int _8;
  int _9;
  int _10;
  int tk.319_11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _37;
  int _38;
  int _39;
  int _50;
  int _51;
  int _52;
  int _62;
  int _63;
  int _66;
  int _70;

  <bb 2> :
  tk.317_1 = tk;
  if (tk.317_1 == 46)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  getToken ();
  _2 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _3 = strcmp (E12Linha_h_23(D), "int");
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = strcmp (&E13_tp, "int");
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  __builtin_memcpy (&E12Linha2_h, "int", 4);
  goto <bb 8>; [INV]

  <bb 7> :
  __builtin_memcpy (&E12Linha2_h, "float", 6);

  <bb 8> :
  geratemp (&E12Linha2_hp);
  sprintf (&E12Linha2_hc, "%s%s\t%s = %s * %s\n", E12Linha_hc_27(D), &E13_c, &E12Linha2_hp, E12Linha_hp_28(D), &E13_p);
  _5 = E12Linha (&E12Linha2_h, &E12Linha2_s, &E12Linha2_hp, &E12Linha2_sp, &E12Linha2_hc, &E12Linha2_sc);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E12Linha_s_31(D), &E12Linha2_s);
  strcpy (E12Linha_sp_33(D), &E12Linha2_sp);
  strcpy (E12Linha_sc_35(D), &E12Linha2_sc);
  _37 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 10> :
  _38 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 11> :
  _39 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 12> :
  tk.318_6 = tk;
  if (tk.318_6 == 47)
    goto <bb 13>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 13> :
  getToken ();
  _7 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_7 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 14> :
  _8 = strcmp (E12Linha_h_23(D), "int");
  if (_8 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  _9 = strcmp (&E13_tp, "int");
  if (_9 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  __builtin_memcpy (&E12Linha2_h, "int", 4);
  goto <bb 18>; [INV]

  <bb 17> :
  __builtin_memcpy (&E12Linha2_h, "float", 6);

  <bb 18> :
  geratemp (&E12Linha2_hp);
  sprintf (&E12Linha2_hc, "%s%s\t%s = %s / %s\n", E12Linha_hc_27(D), &E13_c, &E12Linha2_hp, E12Linha_hp_28(D), &E13_p);
  _10 = E12Linha (&E12Linha2_h, &E12Linha2_s, &E12Linha2_hp, &E12Linha2_sp, &E12Linha2_hc, &E12Linha2_sc);
  if (_10 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  strcpy (E12Linha_s_31(D), &E12Linha2_s);
  strcpy (E12Linha_sp_33(D), &E12Linha2_sp);
  strcpy (E12Linha_sc_35(D), &E12Linha2_sc);
  _50 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 20> :
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 21> :
  _52 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 22> :
  tk.319_11 = tk;
  if (tk.319_11 == 48)
    goto <bb 23>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 23> :
  getToken ();
  _12 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_12 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 24> :
  _13 = strcmp (E12Linha_h_23(D), "int");
  if (_13 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 25> :
  _14 = strcmp (&E13_tp, "int");
  if (_14 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  __builtin_memcpy (&E12Linha2_h, "int", 4);
  geratemp (&E12Linha2_hp);
  sprintf (&E12Linha2_hc, "%s%s\t%s = %s %c %s\n", E12Linha_hc_27(D), &E13_c, &E12Linha2_hp, E12Linha_hp_28(D), 37, &E13_p);
  _15 = E12Linha (&E12Linha2_h, &E12Linha2_s, &E12Linha2_hp, &E12Linha2_sp, &E12Linha2_hc, &E12Linha2_sc);
  if (_15 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 27> :
  printf ("Erro: opera\xc3\xa7\xc3\xa3o de resto inv\xc3\xa1lida");
  exit (0);

  <bb 28> :
  strcpy (E12Linha_s_31(D), &E12Linha2_s);
  strcpy (E12Linha_sp_33(D), &E12Linha2_sp);
  strcpy (E12Linha_sc_35(D), &E12Linha2_sc);
  _62 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 29> :
  _63 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 30> :
  _66 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 32>; [INV]

  <bb 31> :
  strcpy (E12Linha_s_31(D), E12Linha_h_23(D));
  strcpy (E12Linha_sp_33(D), E12Linha_hp_28(D));
  strcpy (E12Linha_sc_35(D), E12Linha_hc_27(D));
  _70 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 32> :
  # _16 = PHI <_37(9), _38(10), _39(11), _50(19), _51(20), _52(21), _62(28), _63(29), _66(30), _70(31)>
  E13_tp ={v} {CLOBBER};
  E13_p ={v} {CLOBBER};
  E13_c ={v} {CLOBBER};
  E12Linha2_h ={v} {CLOBBER};
  E12Linha2_s ={v} {CLOBBER};
  E12Linha2_hp ={v} {CLOBBER};
  E12Linha2_sp ={v} {CLOBBER};
  E12Linha2_hc ={v} {CLOBBER};
  E12Linha2_sc ={v} {CLOBBER};

  <bb 33> :
<L31>:
  return _16;

}



;; Function E12 (E12, funcdef_no=79, decl_uid=4948, cgraph_uid=79, symbol_order=96)

Released 0 names, 0.00%, removed 0 holes
E12 (char * E12_tp, char * E12_p, char * E12_c)
{
  char E12Linha_sc[1000];
  char E12Linha_hc[1000];
  char E12Linha_sp[10];
  char E12Linha_hp[10];
  char E12Linha_s[10];
  char E12Linha_h[10];
  char E13_c[1000];
  char E13_p[10];
  char E13_tp[10];
  int D.6504;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E13 (&E13_tp, &E13_p, &E13_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E12Linha_h, &E13_tp);
  strcpy (&E12Linha_hp, &E13_p);
  strcpy (&E12Linha_hc, &E13_c);
  _2 = E12Linha (&E12Linha_h, &E12Linha_s, &E12Linha_hp, &E12Linha_sp, &E12Linha_hc, &E12Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E12_tp_11(D), &E12Linha_s);
  strcpy (E12_p_13(D), &E12Linha_sp);
  strcpy (E12_c_15(D), &E12Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E13_tp ={v} {CLOBBER};
  E13_p ={v} {CLOBBER};
  E13_c ={v} {CLOBBER};
  E12Linha_h ={v} {CLOBBER};
  E12Linha_s ={v} {CLOBBER};
  E12Linha_hp ={v} {CLOBBER};
  E12Linha_sp ={v} {CLOBBER};
  E12Linha_hc ={v} {CLOBBER};
  E12Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E11Linha (E11Linha, funcdef_no=78, decl_uid=4944, cgraph_uid=78, symbol_order=95)

Released 0 names, 0.00%, removed 0 holes
E11Linha (char * E11Linha_h, char * E11Linha_s, char * E11Linha_hp, char * E11Linha_sp, char * E11Linha_hc, char * E11Linha_sc)
{
  char E11Linha2_sc[1000];
  char E11Linha2_hc[1000];
  char E11Linha2_sp[10];
  char E11Linha2_hp[10];
  char E11Linha2_s[10];
  char E11Linha2_h[10];
  char E12_c[1000];
  char E12_p[10];
  char E12_tp[10];
  int D.6484;
  int tk.315_1;
  int _2;
  int _3;
  int _4;
  int _5;
  int tk.316_6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _33;
  int _34;
  int _45;
  int _46;
  int _50;

  <bb 2> :
  tk.315_1 = tk;
  if (tk.315_1 == 44)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  getToken ();
  _2 = E12 (&E12_tp, &E12_p, &E12_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 4> :
  _3 = strcmp (E11Linha_h_19(D), "int");
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = strcmp (&E12_tp, "int");
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  __builtin_memcpy (&E11Linha2_h, "int", 4);
  goto <bb 8>; [INV]

  <bb 7> :
  __builtin_memcpy (&E11Linha2_h, "float", 6);

  <bb 8> :
  geratemp (&E11Linha2_hp);
  sprintf (&E11Linha2_hc, "%s%s\t%s = %s + %s\n", E11Linha_hc_23(D), &E12_c, &E11Linha2_hp, E11Linha_hp_24(D), &E12_p);
  _5 = E11Linha (&E11Linha2_h, &E11Linha2_s, &E11Linha2_hp, &E11Linha2_sp, &E11Linha2_hc, &E11Linha2_sc);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E11Linha_s_27(D), &E11Linha2_s);
  strcpy (E11Linha_sp_29(D), &E11Linha2_sp);
  strcpy (E11Linha_sc_31(D), &E11Linha2_sc);
  _33 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 10> :
  _34 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 11> :
  tk.316_6 = tk;
  if (tk.316_6 == 45)
    goto <bb 12>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 12> :
  getToken ();
  _7 = E12 (&E12_tp, &E12_p, &E12_c);
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 13> :
  _8 = strcmp (E11Linha_h_19(D), "int");
  if (_8 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _9 = strcmp (&E12_tp, "int");
  if (_9 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  __builtin_memcpy (&E11Linha2_h, "int", 4);
  goto <bb 17>; [INV]

  <bb 16> :
  __builtin_memcpy (&E11Linha2_h, "float", 6);

  <bb 17> :
  geratemp (&E11Linha2_hp);
  sprintf (&E11Linha2_hc, "%s%s\t%s = %s - %s\n", E11Linha_hc_23(D), &E12_c, &E11Linha2_hp, E11Linha_hp_24(D), &E12_p);
  _10 = E11Linha (&E11Linha2_h, &E11Linha2_s, &E11Linha2_hp, &E11Linha2_sp, &E11Linha2_hc, &E11Linha2_sc);
  if (_10 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  strcpy (E11Linha_s_27(D), &E11Linha2_s);
  strcpy (E11Linha_sp_29(D), &E11Linha2_sp);
  strcpy (E11Linha_sc_31(D), &E11Linha2_sc);
  _45 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 19> :
  _46 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 20> :
  strcpy (E11Linha_s_27(D), E11Linha_h_19(D));
  strcpy (E11Linha_sp_29(D), E11Linha_hp_24(D));
  strcpy (E11Linha_sc_31(D), E11Linha_hc_23(D));
  _50 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 22>; [INV]

  <bb 21> :
  E12_tp ={v} {CLOBBER};
  E12_p ={v} {CLOBBER};
  E12_c ={v} {CLOBBER};
  E11Linha2_h ={v} {CLOBBER};
  E11Linha2_s ={v} {CLOBBER};
  E11Linha2_hp ={v} {CLOBBER};
  E11Linha2_sp ={v} {CLOBBER};
  E11Linha2_hc ={v} {CLOBBER};
  E11Linha2_sc ={v} {CLOBBER};
  return;

  <bb 22> :
  # _11 = PHI <_33(9), _34(10), _45(18), _46(19), _50(20)>
  E12_tp ={v} {CLOBBER};
  E12_p ={v} {CLOBBER};
  E12_c ={v} {CLOBBER};
  E11Linha2_h ={v} {CLOBBER};
  E11Linha2_s ={v} {CLOBBER};
  E11Linha2_hp ={v} {CLOBBER};
  E11Linha2_sp ={v} {CLOBBER};
  E11Linha2_hc ={v} {CLOBBER};
  E11Linha2_sc ={v} {CLOBBER};

  <bb 23> :
<L24>:
  return _11;

}



;; Function E11 (E11, funcdef_no=77, decl_uid=4937, cgraph_uid=77, symbol_order=94)

Released 0 names, 0.00%, removed 0 holes
E11 (char * E11_tp, char * E11_p, char * E11_c)
{
  char E11Linha_sc[1000];
  char E11Linha_hc[1000];
  char E11Linha_sp[10];
  char E11Linha_hp[10];
  char E11Linha_s[10];
  char E11Linha_h[10];
  char E12_c[1000];
  char E12_p[10];
  char E12_tp[10];
  int D.6471;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E12 (&E12_tp, &E12_p, &E12_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E11Linha_h, &E12_tp);
  strcpy (&E11Linha_hp, &E12_p);
  strcpy (&E11Linha_hc, &E12_c);
  _2 = E11Linha (&E11Linha_h, &E11Linha_s, &E11Linha_hp, &E11Linha_sp, &E11Linha_hc, &E11Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E11_tp_11(D), &E11Linha_s);
  strcpy (E11_p_13(D), &E11Linha_sp);
  strcpy (E11_c_15(D), &E11Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E12_tp ={v} {CLOBBER};
  E12_p ={v} {CLOBBER};
  E12_c ={v} {CLOBBER};
  E11Linha_h ={v} {CLOBBER};
  E11Linha_s ={v} {CLOBBER};
  E11Linha_hp ={v} {CLOBBER};
  E11Linha_sp ={v} {CLOBBER};
  E11Linha_hc ={v} {CLOBBER};
  E11Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E10Linha (E10Linha, funcdef_no=76, decl_uid=4933, cgraph_uid=76, symbol_order=93)

Released 0 names, 0.00%, removed 0 holes
E10Linha (char * E10Linha_h, char * E10Linha_s, char * E10Linha_hp, char * E10Linha_sp, char * E10Linha_hc, char * E10Linha_sc)
{
  char E10Linha2_sc[1000];
  char E10Linha2_hc[1000];
  char E10Linha2_sp[10];
  char E10Linha2_hp[10];
  char E10Linha2_s[10];
  char E10Linha2_h[10];
  char E11_c[1000];
  char E11_p[10];
  char E11_tp[10];
  int D.6458;
  int tk.313_1;
  int _2;
  int _3;
  int tk.314_4;
  int _5;
  int _6;
  int _7;
  int _24;
  int _25;
  int _26;
  int _36;
  int _37;
  int _38;
  int _43;

  <bb 2> :
  tk.313_1 = tk;
  if (tk.313_1 == 65)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E11 (&E11_tp, &E11_p, &E11_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E10Linha2_h, "int", 4);
  geratemp (&E10Linha2_hp);
  sprintf (&E10Linha2_hc, "%s%s\t%s = %s << %s\n", E10Linha_hc_14(D), &E11_c, &E10Linha2_hp, E10Linha_hp_15(D), &E11_p);
  _3 = E10Linha (&E10Linha2_h, &E10Linha2_s, &E10Linha2_hp, &E10Linha2_sp, &E10Linha2_hc, &E10Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E10Linha_s_18(D), &E10Linha2_s);
  strcpy (E10Linha_sp_20(D), &E10Linha2_sp);
  strcpy (E10Linha_sc_22(D), &E10Linha2_sc);
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 6> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 7> :
  _26 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  tk.314_4 = tk;
  if (tk.314_4 == 66)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  getToken ();
  _5 = E11 (&E11_tp, &E11_p, &E11_c);
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  __builtin_memcpy (&E10Linha2_h, "int", 4);
  geratemp (&E10Linha2_hp);
  sprintf (&E10Linha2_hc, "%s%s\t%s = %s >> %s\n", E10Linha_hc_14(D), &E11_c, &E10Linha2_hp, E10Linha_hp_15(D), &E11_p);
  _6 = E10Linha (&E10Linha2_h, &E10Linha2_s, &E10Linha2_hp, &E10Linha2_sp, &E10Linha2_hc, &E10Linha2_sc);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (E10Linha_s_18(D), &E10Linha2_s);
  strcpy (E10Linha_sp_20(D), &E10Linha2_sp);
  strcpy (E10Linha_sc_22(D), &E10Linha2_sc);
  _36 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  _37 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  _38 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  strcpy (E10Linha_s_18(D), E10Linha_h_39(D));
  strcpy (E10Linha_sp_20(D), E10Linha_hp_15(D));
  strcpy (E10Linha_sc_22(D), E10Linha_hc_14(D));
  _43 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 15> :
  # _7 = PHI <_24(5), _25(6), _26(7), _36(11), _37(12), _38(13), _43(14)>
  E11_tp ={v} {CLOBBER};
  E11_p ={v} {CLOBBER};
  E11_c ={v} {CLOBBER};
  E10Linha2_h ={v} {CLOBBER};
  E10Linha2_s ={v} {CLOBBER};
  E10Linha2_hp ={v} {CLOBBER};
  E10Linha2_sp ={v} {CLOBBER};
  E10Linha2_hc ={v} {CLOBBER};
  E10Linha2_sc ={v} {CLOBBER};

  <bb 16> :
<L13>:
  return _7;

}



;; Function E10 (E10, funcdef_no=75, decl_uid=4926, cgraph_uid=75, symbol_order=92)

Released 0 names, 0.00%, removed 0 holes
E10 (char * E10_tp, char * E10_p, char * E10_c)
{
  char E10Linha_sc[1000];
  char E10Linha_hc[1000];
  char E10Linha_sp[10];
  char E10Linha_hp[10];
  char E10Linha_s[10];
  char E10Linha_h[10];
  char E11_c[1000];
  char E11_p[10];
  char E11_tp[10];
  int D.6449;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E11 (&E11_tp, &E11_p, &E11_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E10Linha_h, &E11_tp);
  strcpy (&E10Linha_hp, &E11_p);
  strcpy (&E10Linha_hc, &E11_c);
  _2 = E10Linha (&E10Linha_h, &E10Linha_s, &E10Linha_hp, &E10Linha_sp, &E10Linha_hc, &E10Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E10_tp_11(D), &E10Linha_s);
  strcpy (E10_p_13(D), &E10Linha_sp);
  strcpy (E10_c_15(D), &E10Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E11_tp ={v} {CLOBBER};
  E11_p ={v} {CLOBBER};
  E11_c ={v} {CLOBBER};
  E10Linha_h ={v} {CLOBBER};
  E10Linha_s ={v} {CLOBBER};
  E10Linha_hp ={v} {CLOBBER};
  E10Linha_sp ={v} {CLOBBER};
  E10Linha_hc ={v} {CLOBBER};
  E10Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E9Linha (E9Linha, funcdef_no=74, decl_uid=4922, cgraph_uid=74, symbol_order=91)

Released 0 names, 0.00%, removed 0 holes
E9Linha (char * E9Linha_h, char * E9Linha_s, char * E9Linha_hp, char * E9Linha_sp, char * E9Linha_hc, char * E9Linha_sc)
{
  char E9Linha2_sc[1000];
  char E9Linha2_hc[1000];
  char E9Linha2_sp[10];
  char E9Linha2_hp[10];
  char E9Linha2_s[10];
  char E9Linha2_h[10];
  char E10_c[1000];
  char E10_p[10];
  char E10_tp[10];
  int D.6424;
  int tk.309_1;
  int _2;
  int _3;
  int tk.310_4;
  int _5;
  int _6;
  int tk.311_7;
  int _8;
  int _9;
  int tk.312_10;
  int _11;
  int _12;
  int _13;
  int _30;
  int _31;
  int _32;
  int _42;
  int _43;
  int _44;
  int _54;
  int _55;
  int _56;
  int _66;
  int _67;
  int _68;
  int _73;

  <bb 2> :
  tk.309_1 = tk;
  if (tk.309_1 == 50)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  geratemp (&E9Linha2_hp);
  sprintf (&E9Linha2_hc, "%s%s\t%s = %s < %s\n", E9Linha_hc_20(D), &E10_c, &E9Linha2_hp, E9Linha_hp_21(D), &E10_p);
  _3 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E9Linha_s_24(D), &E9Linha2_s);
  strcpy (E9Linha_sp_26(D), &E9Linha2_sp);
  strcpy (E9Linha_sc_28(D), &E9Linha2_sc);
  _30 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 6> :
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 7> :
  _32 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 8> :
  tk.310_4 = tk;
  if (tk.310_4 == 49)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  getToken ();
  _5 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  geratemp (&E9Linha2_hp);
  sprintf (&E9Linha2_hc, "%s%s\t%s = %s > %s\n", E9Linha_hc_20(D), &E10_c, &E9Linha2_hp, E9Linha_hp_21(D), &E10_p);
  _6 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (E9Linha_s_24(D), &E9Linha2_s);
  strcpy (E9Linha_sp_26(D), &E9Linha2_sp);
  strcpy (E9Linha_sc_28(D), &E9Linha2_sc);
  _42 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 12> :
  _43 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 13> :
  _44 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 14> :
  tk.311_7 = tk;
  if (tk.311_7 == 58)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  getToken ();
  _8 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_8 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  geratemp (&E9Linha2_hp);
  sprintf (&E9Linha2_hc, "%s%s\t%s = %s <= %s\n", E9Linha_hc_20(D), &E10_c, &E9Linha2_hp, E9Linha_hp_21(D), &E10_p);
  _9 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  strcpy (E9Linha_s_24(D), &E9Linha2_s);
  strcpy (E9Linha_sp_26(D), &E9Linha2_sp);
  strcpy (E9Linha_sc_28(D), &E9Linha2_sc);
  _54 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 18> :
  _55 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 19> :
  _56 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 20> :
  tk.312_10 = tk;
  if (tk.312_10 == 57)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 21> :
  getToken ();
  _11 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_11 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  __builtin_memcpy (&E9Linha2_h, "int", 4);
  geratemp (&E9Linha2_hp);
  sprintf (&E9Linha2_hc, "%s%s\t%s = %s >= %s\n", E9Linha_hc_20(D), &E10_c, &E9Linha2_hp, E9Linha_hp_21(D), &E10_p);
  _12 = E9Linha (&E9Linha2_h, &E9Linha2_s, &E9Linha2_hp, &E9Linha2_sp, &E9Linha2_hc, &E9Linha2_sc);
  if (_12 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  strcpy (E9Linha_s_24(D), &E9Linha2_s);
  strcpy (E9Linha_sp_26(D), &E9Linha2_sp);
  strcpy (E9Linha_sc_28(D), &E9Linha2_sc);
  _66 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 24> :
  _67 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 25> :
  _68 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 27>; [INV]

  <bb 26> :
  strcpy (E9Linha_s_24(D), E9Linha_h_69(D));
  strcpy (E9Linha_sp_26(D), E9Linha_hp_21(D));
  strcpy (E9Linha_sc_28(D), E9Linha_hc_20(D));
  _73 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 27> :
  # _13 = PHI <_30(5), _31(6), _32(7), _42(11), _43(12), _44(13), _54(17), _55(18), _56(19), _66(23), _67(24), _68(25), _73(26)>
  E10_tp ={v} {CLOBBER};
  E10_p ={v} {CLOBBER};
  E10_c ={v} {CLOBBER};
  E9Linha2_h ={v} {CLOBBER};
  E9Linha2_s ={v} {CLOBBER};
  E9Linha2_hp ={v} {CLOBBER};
  E9Linha2_sp ={v} {CLOBBER};
  E9Linha2_hc ={v} {CLOBBER};
  E9Linha2_sc ={v} {CLOBBER};

  <bb 28> :
<L25>:
  return _13;

}



;; Function E9 (E9, funcdef_no=73, decl_uid=4915, cgraph_uid=73, symbol_order=90)

Released 0 names, 0.00%, removed 0 holes
E9 (char * E9_tp, char * E9_p, char * E9_c)
{
  char E9Linha_sc[1000];
  char E9Linha_hc[1000];
  char E9Linha_sp[10];
  char E9Linha_hp[10];
  char E9Linha_s[10];
  char E9Linha_h[10];
  char E10_c[1000];
  char E10_p[10];
  char E10_tp[10];
  int D.6415;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E10 (&E10_tp, &E10_p, &E10_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E9Linha_h, &E10_tp);
  strcpy (&E9Linha_hp, &E10_p);
  strcpy (&E9Linha_hc, &E10_c);
  _2 = E9Linha (&E9Linha_h, &E9Linha_s, &E9Linha_hp, &E9Linha_sp, &E9Linha_hc, &E9Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E9_tp_11(D), &E9Linha_s);
  strcpy (E9_p_13(D), &E9Linha_sp);
  strcpy (E9_c_15(D), &E9Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E10_tp ={v} {CLOBBER};
  E10_p ={v} {CLOBBER};
  E10_c ={v} {CLOBBER};
  E9Linha_h ={v} {CLOBBER};
  E9Linha_s ={v} {CLOBBER};
  E9Linha_hp ={v} {CLOBBER};
  E9Linha_sp ={v} {CLOBBER};
  E9Linha_hc ={v} {CLOBBER};
  E9Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E8Linha (E8Linha, funcdef_no=72, decl_uid=4911, cgraph_uid=72, symbol_order=89)

Released 0 names, 0.00%, removed 0 holes
E8Linha (char * E8Linha_h, char * E8Linha_s, char * E8Linha_hp, char * E8Linha_sp, char * E8Linha_hc, char * E8Linha_sc)
{
  char E8Linha2_sc[1000];
  char E8Linha2_hc[1000];
  char E8Linha2_sp[10];
  char E8Linha2_hp[10];
  char E8Linha2_s[10];
  char E8Linha2_h[10];
  char E9_c[1000];
  char E9_p[10];
  char E9_tp[10];
  int D.6402;
  int tk.307_1;
  int _2;
  int _3;
  int tk.308_4;
  int _5;
  int _6;
  int _7;
  int _24;
  int _25;
  int _26;
  int _36;
  int _37;
  int _38;
  int _43;

  <bb 2> :
  tk.307_1 = tk;
  if (tk.307_1 == 61)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E9 (&E9_tp, &E9_p, &E9_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E8Linha2_h, "int", 4);
  geratemp (&E8Linha2_hp);
  sprintf (&E8Linha2_hc, "%s%s\t%s = %s == %s\n", E8Linha_hc_14(D), &E9_c, &E8Linha2_hp, E8Linha_hp_15(D), &E9_p);
  _3 = E8Linha (&E8Linha2_h, &E8Linha2_s, &E8Linha2_hp, &E8Linha2_sp, &E8Linha2_hc, &E8Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E8Linha_s_18(D), &E8Linha2_s);
  strcpy (E8Linha_sp_20(D), &E8Linha2_sp);
  strcpy (E8Linha_sc_22(D), &E8Linha2_sc);
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 6> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 7> :
  _26 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  tk.308_4 = tk;
  if (tk.308_4 == 62)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  getToken ();
  _5 = E9 (&E9_tp, &E9_p, &E9_c);
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 10> :
  __builtin_memcpy (&E8Linha2_h, "int", 4);
  geratemp (&E8Linha2_hp);
  sprintf (&E8Linha2_hc, "%s%s\t%s = %s != %s\n", E8Linha_hc_14(D), &E9_c, &E8Linha2_hp, E8Linha_hp_15(D), &E9_p);
  _6 = E8Linha (&E8Linha2_h, &E8Linha2_s, &E8Linha2_hp, &E8Linha2_sp, &E8Linha2_hc, &E8Linha2_sc);
  if (_6 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (E8Linha_s_18(D), &E8Linha2_s);
  strcpy (E8Linha_sp_20(D), &E8Linha2_sp);
  strcpy (E8Linha_sc_22(D), &E8Linha2_sc);
  _36 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  _37 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  _38 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  strcpy (E8Linha_s_18(D), E8Linha_h_39(D));
  strcpy (E8Linha_sp_20(D), E8Linha_hp_15(D));
  strcpy (E8Linha_sc_22(D), E8Linha_hc_14(D));
  _43 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 15> :
  # _7 = PHI <_24(5), _25(6), _26(7), _36(11), _37(12), _38(13), _43(14)>
  E9_tp ={v} {CLOBBER};
  E9_p ={v} {CLOBBER};
  E9_c ={v} {CLOBBER};
  E8Linha2_h ={v} {CLOBBER};
  E8Linha2_s ={v} {CLOBBER};
  E8Linha2_hp ={v} {CLOBBER};
  E8Linha2_sp ={v} {CLOBBER};
  E8Linha2_hc ={v} {CLOBBER};
  E8Linha2_sc ={v} {CLOBBER};

  <bb 16> :
<L13>:
  return _7;

}



;; Function E8 (E8, funcdef_no=71, decl_uid=4904, cgraph_uid=71, symbol_order=88)

Released 0 names, 0.00%, removed 0 holes
E8 (char * E8_tp, char * E8_p, char * E8_c)
{
  char E8Linha_sc[1000];
  char E8Linha_hc[1000];
  char E8Linha_sp[10];
  char E8Linha_hp[10];
  char E8Linha_s[10];
  char E8Linha_h[10];
  char E9_c[1000];
  char E9_p[10];
  char E9_tp[10];
  int D.6393;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E9 (&E9_tp, &E9_p, &E9_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E8Linha_h, &E9_tp);
  strcpy (&E8Linha_hp, &E9_p);
  strcpy (&E8Linha_hc, &E9_c);
  _2 = E8Linha (&E8Linha_h, &E8Linha_s, &E8Linha_hp, &E8Linha_sp, &E8Linha_hc, &E8Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E8_tp_11(D), &E8Linha_s);
  strcpy (E8_p_13(D), &E8Linha_sp);
  strcpy (E8_c_15(D), &E8Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E9_tp ={v} {CLOBBER};
  E9_p ={v} {CLOBBER};
  E9_c ={v} {CLOBBER};
  E8Linha_h ={v} {CLOBBER};
  E8Linha_s ={v} {CLOBBER};
  E8Linha_hp ={v} {CLOBBER};
  E8Linha_sp ={v} {CLOBBER};
  E8Linha_hc ={v} {CLOBBER};
  E8Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E7Linha (E7Linha, funcdef_no=70, decl_uid=4900, cgraph_uid=70, symbol_order=87)

Released 0 names, 0.00%, removed 0 holes
E7Linha (char * E7Linha_h, char * E7Linha_s, char * E7Linha_hp, char * E7Linha_sp, char * E7Linha_hc, char * E7Linha_sc)
{
  char E7Linha2_sc[1000];
  char E7Linha2_hc[1000];
  char E7Linha2_sp[10];
  char E7Linha2_hp[10];
  char E7Linha2_s[10];
  char E7Linha2_h[10];
  char E8_c[1000];
  char E8_p[10];
  char E8_tp[10];
  int D.6386;
  int tk.306_1;
  int _2;
  int _3;
  int _4;
  int _21;
  int _22;
  int _23;
  int _28;

  <bb 2> :
  tk.306_1 = tk;
  if (tk.306_1 == 70)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E8 (&E8_tp, &E8_p, &E8_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E7Linha2_h, "int", 4);
  geratemp (&E7Linha2_hp);
  sprintf (&E7Linha2_hc, "%s%s\t%s = %s & %s\n", E7Linha_hc_11(D), &E8_c, &E7Linha2_hp, E7Linha_hp_12(D), &E8_p);
  _3 = E7Linha (&E7Linha2_h, &E7Linha2_s, &E7Linha2_hp, &E7Linha2_sp, &E7Linha2_hc, &E7Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E7Linha_s_15(D), &E7Linha2_s);
  strcpy (E7Linha_sp_17(D), &E7Linha2_sp);
  strcpy (E7Linha_sc_19(D), &E7Linha2_sc);
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E7Linha_s_15(D), E7Linha_h_24(D));
  strcpy (E7Linha_sp_17(D), E7Linha_hp_12(D));
  strcpy (E7Linha_sc_19(D), E7Linha_hc_11(D));
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _4 = PHI <_21(5), _22(6), _23(7), _28(8)>
  E8_tp ={v} {CLOBBER};
  E8_p ={v} {CLOBBER};
  E8_c ={v} {CLOBBER};
  E7Linha2_h ={v} {CLOBBER};
  E7Linha2_s ={v} {CLOBBER};
  E7Linha2_hp ={v} {CLOBBER};
  E7Linha2_sp ={v} {CLOBBER};
  E7Linha2_hc ={v} {CLOBBER};
  E7Linha2_sc ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _4;

}



;; Function E7 (E7, funcdef_no=69, decl_uid=4893, cgraph_uid=69, symbol_order=86)

Released 0 names, 0.00%, removed 0 holes
E7 (char * E7_tp, char * E7_p, char * E7_c)
{
  char E7Linha_sc[1000];
  char E7Linha_hc[1000];
  char E7Linha_sp[10];
  char E7Linha_hp[10];
  char E7Linha_s[10];
  char E7Linha_h[10];
  char E8_c[1000];
  char E8_p[10];
  char E8_tp[10];
  int D.6377;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E8 (&E8_tp, &E8_p, &E8_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E7Linha_h, &E8_tp);
  strcpy (&E7Linha_hp, &E8_p);
  strcpy (&E7Linha_hc, &E8_c);
  _2 = E7Linha (&E7Linha_h, &E7Linha_s, &E7Linha_hp, &E7Linha_sp, &E7Linha_hc, &E7Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E7_tp_11(D), &E7Linha_s);
  strcpy (E7_p_13(D), &E7Linha_sp);
  strcpy (E7_c_15(D), &E7Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E8_tp ={v} {CLOBBER};
  E8_p ={v} {CLOBBER};
  E8_c ={v} {CLOBBER};
  E7Linha_h ={v} {CLOBBER};
  E7Linha_s ={v} {CLOBBER};
  E7Linha_hp ={v} {CLOBBER};
  E7Linha_sp ={v} {CLOBBER};
  E7Linha_hc ={v} {CLOBBER};
  E7Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E6Linha (E6Linha, funcdef_no=68, decl_uid=4889, cgraph_uid=68, symbol_order=85)

Released 0 names, 0.00%, removed 0 holes
E6Linha (char * E6Linha_h, char * E6Linha_s, char * E6Linha_hp, char * E6Linha_sp, char * E6Linha_hc, char * E6Linha_sc)
{
  char E6Linha2_sc[1000];
  char E6Linha2_hc[1000];
  char E6Linha2_sp[10];
  char E6Linha2_hp[10];
  char E6Linha2_s[10];
  char E6Linha2_h[10];
  char E7_c[1000];
  char E7_p[10];
  char E7_tp[10];
  int D.6370;
  int tk.305_1;
  int _2;
  int _3;
  int _4;
  int _21;
  int _22;
  int _23;
  int _28;

  <bb 2> :
  tk.305_1 = tk;
  if (tk.305_1 == 72)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E7 (&E7_tp, &E7_p, &E7_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E6Linha2_h, "int", 4);
  geratemp (&E6Linha2_hp);
  sprintf (&E6Linha2_hc, "%s%s\t%s = %s ^ %s\n", E6Linha_hc_11(D), &E7_c, &E6Linha2_hp, E6Linha_hp_12(D), &E7_p);
  _3 = E6Linha (&E6Linha2_h, &E6Linha2_s, &E6Linha2_hp, &E6Linha2_sp, &E6Linha2_hc, &E6Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E6Linha_s_15(D), &E6Linha2_s);
  strcpy (E6Linha_sp_17(D), &E6Linha2_sp);
  strcpy (E6Linha_sc_19(D), &E6Linha2_sc);
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E6Linha_s_15(D), E6Linha_h_24(D));
  strcpy (E6Linha_sp_17(D), E6Linha_hp_12(D));
  strcpy (E6Linha_sc_19(D), E6Linha_hc_11(D));
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _4 = PHI <_21(5), _22(6), _23(7), _28(8)>
  E7_tp ={v} {CLOBBER};
  E7_p ={v} {CLOBBER};
  E7_c ={v} {CLOBBER};
  E6Linha2_h ={v} {CLOBBER};
  E6Linha2_s ={v} {CLOBBER};
  E6Linha2_hp ={v} {CLOBBER};
  E6Linha2_sp ={v} {CLOBBER};
  E6Linha2_hc ={v} {CLOBBER};
  E6Linha2_sc ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _4;

}



;; Function E6 (E6, funcdef_no=67, decl_uid=4882, cgraph_uid=67, symbol_order=84)

Released 0 names, 0.00%, removed 0 holes
E6 (char * E6_tp, char * E6_p, char * E6_c)
{
  char E6Linha_sc[1000];
  char E6Linha_hc[1000];
  char E6Linha_sp[10];
  char E6Linha_hp[10];
  char E6Linha_s[10];
  char E6Linha_h[10];
  char E7_c[1000];
  char E7_p[10];
  char E7_tp[10];
  int D.6361;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E7 (&E7_tp, &E7_p, &E7_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E6Linha_h, &E7_tp);
  strcpy (&E6Linha_hp, &E7_p);
  strcpy (&E6Linha_hc, &E7_c);
  _2 = E6Linha (&E6Linha_h, &E6Linha_s, &E6Linha_hp, &E6Linha_sp, &E6Linha_hc, &E6Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E6_tp_11(D), &E6Linha_s);
  strcpy (E6_p_13(D), &E6Linha_sp);
  strcpy (E6_c_15(D), &E6Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E7_tp ={v} {CLOBBER};
  E7_p ={v} {CLOBBER};
  E7_c ={v} {CLOBBER};
  E6Linha_h ={v} {CLOBBER};
  E6Linha_s ={v} {CLOBBER};
  E6Linha_hp ={v} {CLOBBER};
  E6Linha_sp ={v} {CLOBBER};
  E6Linha_hc ={v} {CLOBBER};
  E6Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E5Linha (E5Linha, funcdef_no=66, decl_uid=4878, cgraph_uid=66, symbol_order=83)

Released 0 names, 0.00%, removed 0 holes
E5Linha (char * E5Linha_h, char * E5Linha_s, char * E5Linha_hp, char * E5Linha_sp, char * E5Linha_hc, char * E5Linha_sc)
{
  char E5Linha2_sc[1000];
  char E5Linha2_hc[1000];
  char E5Linha2_sp[10];
  char E5Linha2_hp[10];
  char E5Linha2_s[10];
  char E5Linha2_h[10];
  char E6_c[1000];
  char E6_p[10];
  char E6_tp[10];
  int D.6354;
  int tk.304_1;
  int _2;
  int _3;
  int _4;
  int _21;
  int _22;
  int _23;
  int _28;

  <bb 2> :
  tk.304_1 = tk;
  if (tk.304_1 == 71)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E6 (&E6_tp, &E6_p, &E6_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E5Linha2_h, "int", 4);
  geratemp (&E5Linha2_hp);
  sprintf (&E5Linha2_hc, "%s%s\t%s = %s | %s\n", E5Linha_hc_11(D), &E6_c, &E5Linha2_hp, E5Linha_hp_12(D), &E6_p);
  _3 = E5Linha (&E5Linha2_h, &E5Linha2_s, &E5Linha2_hp, &E5Linha2_sp, &E5Linha2_hc, &E5Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E5Linha_s_15(D), &E5Linha2_s);
  strcpy (E5Linha_sp_17(D), &E5Linha2_sp);
  strcpy (E5Linha_sc_19(D), &E5Linha2_sc);
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E5Linha_s_15(D), E5Linha_h_24(D));
  strcpy (E5Linha_sp_17(D), E5Linha_hp_12(D));
  strcpy (E5Linha_sc_19(D), E5Linha_hc_11(D));
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _4 = PHI <_21(5), _22(6), _23(7), _28(8)>
  E6_tp ={v} {CLOBBER};
  E6_p ={v} {CLOBBER};
  E6_c ={v} {CLOBBER};
  E5Linha2_h ={v} {CLOBBER};
  E5Linha2_s ={v} {CLOBBER};
  E5Linha2_hp ={v} {CLOBBER};
  E5Linha2_sp ={v} {CLOBBER};
  E5Linha2_hc ={v} {CLOBBER};
  E5Linha2_sc ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _4;

}



;; Function E5 (E5, funcdef_no=65, decl_uid=4871, cgraph_uid=65, symbol_order=82)

Released 0 names, 0.00%, removed 0 holes
E5 (char * E5_tp, char * E5_p, char * E5_c)
{
  char E5Linha_sc[1000];
  char E5Linha_hc[1000];
  char E5Linha_sp[10];
  char E5Linha_hp[10];
  char E5Linha_s[10];
  char E5Linha_h[10];
  char E6_c[1000];
  char E6_p[10];
  char E6_tp[10];
  int D.6345;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E6 (&E6_tp, &E6_p, &E6_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E5Linha_h, &E6_tp);
  strcpy (&E5Linha_hp, &E6_p);
  strcpy (&E5Linha_hc, &E6_c);
  _2 = E5Linha (&E5Linha_h, &E5Linha_s, &E5Linha_hp, &E5Linha_sp, &E5Linha_hc, &E5Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E5_tp_11(D), &E5Linha_s);
  strcpy (E5_p_13(D), &E5Linha_sp);
  strcpy (E5_c_15(D), &E5Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E6_tp ={v} {CLOBBER};
  E6_p ={v} {CLOBBER};
  E6_c ={v} {CLOBBER};
  E5Linha_h ={v} {CLOBBER};
  E5Linha_s ={v} {CLOBBER};
  E5Linha_hp ={v} {CLOBBER};
  E5Linha_sp ={v} {CLOBBER};
  E5Linha_hc ={v} {CLOBBER};
  E5Linha_sc ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E4Linha (E4Linha, funcdef_no=64, decl_uid=4867, cgraph_uid=64, symbol_order=81)

Released 0 names, 0.00%, removed 0 holes
E4Linha (char * E4Linha_h, char * E4Linha_s, char * E4Linha_hp, char * E4Linha_sp, char * E4Linha_hc, char * E4Linha_sc)
{
  char E5_c[1000];
  char E5_p[10];
  char E5_tp[10];
  char E4Linha2_sc[1000];
  char E4Linha2_hc[1000];
  char E4Linha2_sp[10];
  char E4Linha2_hp[10];
  char E4Linha2_s[10];
  char E4Linha2_h[10];
  int D.6338;
  int tk.303_1;
  int _2;
  int _3;
  int _4;
  int _21;
  int _22;
  int _23;
  int _28;

  <bb 2> :
  tk.303_1 = tk;
  if (tk.303_1 == 68)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E5 (&E5_tp, &E5_p, &E5_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  __builtin_memcpy (&E4Linha2_h, "int", 4);
  geratemp (&E4Linha2_hp);
  sprintf (&E4Linha2_hc, "%s%s\t%s = %s && %s\n", E4Linha_hc_11(D), &E5_c, &E4Linha2_hp, E4Linha_hp_12(D), &E5_p);
  _3 = E4Linha (&E4Linha2_h, &E4Linha2_s, &E4Linha2_hp, &E4Linha2_sp, &E4Linha2_hc, &E4Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E4Linha_s_15(D), &E4Linha2_s);
  strcpy (E4Linha_sp_17(D), &E4Linha2_sp);
  strcpy (E4Linha_sc_19(D), &E4Linha2_sc);
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (E4Linha_s_15(D), E4Linha_h_24(D));
  strcpy (E4Linha_sp_17(D), E4Linha_hp_12(D));
  strcpy (E4Linha_sc_19(D), E4Linha_hc_11(D));
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _4 = PHI <_21(5), _22(6), _23(7), _28(8)>
  E4Linha2_h ={v} {CLOBBER};
  E4Linha2_s ={v} {CLOBBER};
  E4Linha2_hp ={v} {CLOBBER};
  E4Linha2_sp ={v} {CLOBBER};
  E4Linha2_hc ={v} {CLOBBER};
  E4Linha2_sc ={v} {CLOBBER};
  E5_tp ={v} {CLOBBER};
  E5_p ={v} {CLOBBER};
  E5_c ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _4;

}



;; Function E4 (E4, funcdef_no=63, decl_uid=4860, cgraph_uid=63, symbol_order=80)

Released 0 names, 0.00%, removed 0 holes
E4 (char * E4_tp, char * E4_p, char * E4_c)
{
  char E5_c[1000];
  char E5_p[10];
  char E5_tp[10];
  char E4Linha_sc[1000];
  char E4Linha_hc[1000];
  char E4Linha_sp[10];
  char E4Linha_hp[10];
  char E4Linha_s[10];
  char E4Linha_h[10];
  int D.6329;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E5 (&E5_tp, &E5_p, &E5_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E4Linha_h, &E5_tp);
  strcpy (&E4Linha_hp, &E5_p);
  strcpy (&E4Linha_hc, &E5_c);
  _2 = E4Linha (&E4Linha_h, &E4Linha_s, &E4Linha_hp, &E4Linha_sp, &E4Linha_hc, &E4Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E4_tp_11(D), &E4Linha_s);
  strcpy (E4_p_13(D), &E4Linha_sp);
  strcpy (E4_c_15(D), &E4Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E4Linha_h ={v} {CLOBBER};
  E4Linha_s ={v} {CLOBBER};
  E4Linha_hp ={v} {CLOBBER};
  E4Linha_sp ={v} {CLOBBER};
  E4Linha_hc ={v} {CLOBBER};
  E4Linha_sc ={v} {CLOBBER};
  E5_tp ={v} {CLOBBER};
  E5_p ={v} {CLOBBER};
  E5_c ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E3Linha (E3Linha, funcdef_no=62, decl_uid=4856, cgraph_uid=62, symbol_order=79)

Released 0 names, 0.00%, removed 0 holes
E3Linha (char * E3Linha_h, char * E3Linha_s, char * E3Linha_hp, char * E3Linha_sp, char * E3Linha_hc, char * E3Linha_sc)
{
  char E4_c[1000];
  char E4_p[10];
  char E4_tp[10];
  char E3Linha2_sc[1000];
  char E3Linha2_hc[1000];
  char E3Linha2_sp[10];
  char E3Linha2_hp[10];
  char E3Linha2_s[10];
  char E3Linha2_h[10];
  int D.6319;
  int tk.302_1;
  int _2;
  int _3;
  int _4;
  int _21;
  int _31;
  int _36;

  <bb 2> :
  tk.302_1 = tk;
  if (tk.302_1 == 67)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  getToken ();
  _2 = E4 (&E4_tp, &E4_p, &E4_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  __builtin_memcpy (&E3Linha2_h, "int", 4);
  geratemp (&E3Linha2_hp);
  sprintf (&E3Linha2_hc, "%s%s\t%s = %s || %s\n", E3Linha_hc_11(D), &E4_c, &E3Linha2_hp, E3Linha_hp_12(D), &E4_p);
  _3 = E3Linha (&E3Linha2_h, &E3Linha2_s, &E3Linha2_hp, &E3Linha2_sp, &E3Linha2_hc, &E3Linha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  strcpy (E3Linha_s_15(D), &E3Linha2_s);
  strcpy (E3Linha_sp_17(D), &E3Linha2_sp);
  strcpy (E3Linha_sc_19(D), &E3Linha2_sc);
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  strcpy (E3Linha_s_15(D), E3Linha_h_32(D));
  strcpy (E3Linha_sp_17(D), E3Linha_hp_12(D));
  strcpy (E3Linha_sc_19(D), E3Linha_hc_11(D));
  _36 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  E3Linha2_h ={v} {CLOBBER};
  E3Linha2_s ={v} {CLOBBER};
  E3Linha2_hp ={v} {CLOBBER};
  E3Linha2_sp ={v} {CLOBBER};
  E3Linha2_hc ={v} {CLOBBER};
  E3Linha2_sc ={v} {CLOBBER};
  E4_tp ={v} {CLOBBER};
  E4_p ={v} {CLOBBER};
  E4_c ={v} {CLOBBER};
  return;

  <bb 9> :
  # _4 = PHI <_21(5), _31(6), _36(7)>
  E3Linha2_h ={v} {CLOBBER};
  E3Linha2_s ={v} {CLOBBER};
  E3Linha2_hp ={v} {CLOBBER};
  E3Linha2_sp ={v} {CLOBBER};
  E3Linha2_hc ={v} {CLOBBER};
  E3Linha2_sc ={v} {CLOBBER};
  E4_tp ={v} {CLOBBER};
  E4_p ={v} {CLOBBER};
  E4_c ={v} {CLOBBER};

  <bb 10> :
<L10>:
  return _4;

}



;; Function E3 (E3, funcdef_no=61, decl_uid=4849, cgraph_uid=61, symbol_order=78)

Released 0 names, 0.00%, removed 0 holes
E3 (char * E3_tp, char * E3_p, char * E3_c)
{
  char E4_c[1000];
  char E4_p[10];
  char E4_tp[10];
  char E3Linha_sc[1000];
  char E3Linha_hc[1000];
  char E3Linha_sp[10];
  char E3Linha_hp[10];
  char E3Linha_s[10];
  char E3Linha_h[10];
  int D.6310;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E4 (&E4_tp, &E4_p, &E4_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E3Linha_h, &E4_tp);
  strcpy (&E3Linha_hp, &E4_p);
  strcpy (&E3Linha_hc, &E4_c);
  _2 = E3Linha (&E3Linha_h, &E3Linha_s, &E3Linha_hp, &E3Linha_sp, &E3Linha_hc, &E3Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E3_tp_11(D), &E3Linha_s);
  strcpy (E3_p_13(D), &E3Linha_sp);
  strcpy (E3_c_15(D), &E3Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E3Linha_h ={v} {CLOBBER};
  E3Linha_s ={v} {CLOBBER};
  E3Linha_hp ={v} {CLOBBER};
  E3Linha_sp ={v} {CLOBBER};
  E3Linha_hc ={v} {CLOBBER};
  E3Linha_sc ={v} {CLOBBER};
  E4_tp ={v} {CLOBBER};
  E4_p ={v} {CLOBBER};
  E4_c ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E2 (E2, funcdef_no=59, decl_uid=4838, cgraph_uid=59, symbol_order=76)

Released 0 names, 0.00%, removed 0 holes
E2 (char * E2_tp, char * E2_h, char * E2_s, char * E2_p, char * E2_c)
{
  char E3_c[1000];
  char E3_p[10];
  char E3_tp[10];
  char E2Linha_sc[1000];
  char E2Linha_hc[1000];
  char E2Linha_sp[10];
  char E2Linha_hp[10];
  char E2Linha_s[10];
  char E2Linha_h[10];
  int D.6290;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E3 (&E3_tp, &E3_p, &E3_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&E2Linha_h, &E3_tp);
  strcpy (&E2Linha_hp, &E3_p);
  strcpy (&E2Linha_hc, &E3_c);
  _2 = E2Linha (&E2Linha_h, &E2Linha_s, &E2Linha_hp, &E2Linha_sp, &E2Linha_hc, &E2Linha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E2_tp_11(D), &E2Linha_s);
  strcpy (E2_p_13(D), &E2Linha_sp);
  strcpy (E2_c_15(D), &E2Linha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  E2Linha_h ={v} {CLOBBER};
  E2Linha_s ={v} {CLOBBER};
  E2Linha_hp ={v} {CLOBBER};
  E2Linha_sp ={v} {CLOBBER};
  E2Linha_hc ={v} {CLOBBER};
  E2Linha_sc ={v} {CLOBBER};
  E3_tp ={v} {CLOBBER};
  E3_p ={v} {CLOBBER};
  E3_c ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function E1 (E1, funcdef_no=58, decl_uid=4832, cgraph_uid=58, symbol_order=75)

Released 0 names, 0.00%, removed 0 holes
E1 (char * E1_tp, char * E1_h, char * E1_s, char * E1_p, char * E1_c)
{
  char E2_c[1000];
  char E2_p[10];
  char E2_s[10];
  char E2_h[10];
  char E2_tp[10];
  char E1Linha_c[1000];
  char E1Linha_p[10];
  char E1Linha_tp[10];
  char E1Linha_s[10];
  char E1Linha_h[10];
  int D.6262;
  int _1;
  int tk.292_2;
  int _3;
  int tk.293_4;
  int _5;
  int tk.294_6;
  int _7;
  int tk.295_8;
  int _9;
  int tk.296_10;
  int _11;
  int tk.297_12;
  int _13;
  int _14;
  int _27;
  int _28;
  int _35;
  int _36;
  int _43;
  int _44;
  int _51;
  int _52;
  int _59;
  int _60;
  int _67;
  int _68;
  int _72;

  <bb 2> :
  _1 = E2 (&E2_tp, &E2_h, &E2_s, &E2_p, &E2_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 3> :
  tk.292_2 = tk;
  if (tk.292_2 == 43)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  strcpy (&E1Linha_h, &E2_tp);
  getToken ();
  _3 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (E1_tp_21(D), &E1Linha_s);
  strcpy (E1_p_23(D), &E2_p);
  sprintf (E1_c_25(D), "%s\t%s = %s\n", &E1Linha_c, &E2_p, &E1Linha_p);
  _27 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 6> :
  _28 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 7> :
  tk.293_4 = tk;
  if (tk.293_4 == 54)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  strcpy (&E1Linha_h, &E2_tp);
  getToken ();
  _5 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (E1_tp_21(D), &E1Linha_s);
  strcpy (E1_p_23(D), &E2_p);
  sprintf (E1_c_25(D), "%s\t%s = %s * %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  _35 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 10> :
  _36 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 11> :
  tk.294_6 = tk;
  if (tk.294_6 == 55)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  strcpy (&E1Linha_h, &E2_tp);
  getToken ();
  _7 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_7 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  strcpy (E1_tp_21(D), &E1Linha_s);
  strcpy (E1_p_23(D), &E2_p);
  sprintf (E1_c_25(D), "%s\t%s = %s / %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  _43 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 14> :
  _44 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 15> :
  tk.295_8 = tk;
  if (tk.295_8 == 56)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  strcpy (&E1Linha_h, &E2_tp);
  getToken ();
  _9 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_9 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  strcpy (E1_tp_21(D), &E1Linha_s);
  strcpy (E1_p_23(D), &E2_p);
  sprintf (E1_c_25(D), "%s\t%s = %s %c %s\n", &E1Linha_c, &E2_p, &E2_p, 37, &E1Linha_p);
  _51 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 18> :
  _52 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 19> :
  tk.296_10 = tk;
  if (tk.296_10 == 53)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  strcpy (&E1Linha_h, &E2_tp);
  getToken ();
  _11 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_11 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  strcpy (E1_tp_21(D), &E1Linha_s);
  strcpy (E1_p_23(D), &E2_p);
  sprintf (E1_c_25(D), "%s\t%s = %s + %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  _59 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 22> :
  _60 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 23> :
  tk.297_12 = tk;
  if (tk.297_12 == 52)
    goto <bb 24>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 24> :
  strcpy (&E1Linha_h, &E2_tp);
  getToken ();
  _13 = E1 (&E1Linha_tp, &E1Linha_h, &E1Linha_s, &E1Linha_p, &E1Linha_c);
  if (_13 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  strcpy (E1_tp_21(D), &E1Linha_s);
  strcpy (E1_p_23(D), &E2_p);
  sprintf (E1_c_25(D), "%s\t%s = %s - %s\n", &E1Linha_c, &E2_p, &E2_p, &E1Linha_p);
  _67 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 26> :
  _68 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 27> :
  strcpy (E1_tp_21(D), &E2_tp);
  strcpy (E1_p_23(D), &E2_p);
  strcpy (E1_c_25(D), &E2_c);
  _72 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 28> :
  E1Linha_h ={v} {CLOBBER};
  E1Linha_s ={v} {CLOBBER};
  E1Linha_tp ={v} {CLOBBER};
  E1Linha_p ={v} {CLOBBER};
  E1Linha_c ={v} {CLOBBER};
  E2_tp ={v} {CLOBBER};
  E2_h ={v} {CLOBBER};
  E2_s ={v} {CLOBBER};
  E2_p ={v} {CLOBBER};
  E2_c ={v} {CLOBBER};
  return;

  <bb 29> :
  # _14 = PHI <_27(5), _28(6), _35(9), _36(10), _43(13), _44(14), _51(17), _52(18), _59(21), _60(22), _67(25), _68(26), _72(27)>
  E1Linha_h ={v} {CLOBBER};
  E1Linha_s ={v} {CLOBBER};
  E1Linha_tp ={v} {CLOBBER};
  E1Linha_p ={v} {CLOBBER};
  E1Linha_c ={v} {CLOBBER};
  E2_tp ={v} {CLOBBER};
  E2_h ={v} {CLOBBER};
  E2_s ={v} {CLOBBER};
  E2_p ={v} {CLOBBER};
  E2_c ={v} {CLOBBER};

  <bb 30> :
<L28>:
  return _14;

}



;; Function ELinha (ELinha, funcdef_no=57, decl_uid=4826, cgraph_uid=57, symbol_order=74)

Released 0 names, 0.00%, removed 0 holes
ELinha (char * ELinha_h, char * ELinha_s, char * ELinha_p, char * ELinha_hp, char * ELinha_sp, char * ELinha_c, char * ELinha_hc, char * ELinha_sc)
{
  char E1_c[1000];
  char E1_p[10];
  char E1_s[10];
  char E1_h[10];
  char E1_tp[10];
  char ELinha2_c[1000];
  char ELinha2_p[10];
  char ELinha2_s[10];
  char ELinha2_h[10];
  char ELinha2_hc[1000];
  char ELinha2_hp[10];
  char ELinha2_sc[1000];
  char ELinha2_sp[10];
  int D.6253;
  int tk.291_1;
  int _2;
  int _3;
  int _4;
  int _17;
  int _18;
  int _19;
  int _28;

  <bb 2> :
  tk.291_1 = tk;
  if (tk.291_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  getToken ();
  _2 = E1 (&E1_tp, &E1_h, &E1_s, &E1_p, &E1_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  strcpy (&ELinha2_h, &E1_tp);
  _3 = ELinha (&ELinha2_h, &ELinha2_s, &ELinha2_p, &ELinha2_hp, &ELinha2_sp, &ELinha2_c, &ELinha2_hc, &ELinha2_sc);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  strcpy (ELinha_s_11(D), &ELinha2_s);
  strcpy (ELinha_p_13(D), &ELinha2_p);
  sprintf (ELinha_c_15(D), "%s %s", &E1_c, &ELinha2_c);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  strcpy (ELinha_s_11(D), ELinha_h_20(D));
  strcpy (ELinha_sp_22(D), ELinha_hp_23(D));
  strcpy (ELinha_sc_25(D), ELinha_hc_26(D));
  _28 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 9> :
  # _4 = PHI <_17(5), _18(6), _19(7), _28(8)>
  ELinha2_sp ={v} {CLOBBER};
  ELinha2_sc ={v} {CLOBBER};
  ELinha2_hp ={v} {CLOBBER};
  ELinha2_hc ={v} {CLOBBER};
  ELinha2_h ={v} {CLOBBER};
  ELinha2_s ={v} {CLOBBER};
  ELinha2_p ={v} {CLOBBER};
  ELinha2_c ={v} {CLOBBER};
  E1_tp ={v} {CLOBBER};
  E1_h ={v} {CLOBBER};
  E1_s ={v} {CLOBBER};
  E1_p ={v} {CLOBBER};
  E1_c ={v} {CLOBBER};

  <bb 10> :
<L7>:
  return _4;

}



;; Function E (E, funcdef_no=56, decl_uid=4817, cgraph_uid=56, symbol_order=73)

Released 0 names, 0.00%, removed 0 holes
E (char * E_tp, char * E_p, char * E_c)
{
  char E1_c[1000];
  char E1_p[10];
  char E1_s[10];
  char E1_h[10];
  char E1_tp[10];
  char ELinha_sc[1000];
  char ELinha_sp[10];
  char ELinha_hc[1000];
  char ELinha_hp[10];
  char ELinha_p[10];
  char ELinha_c[1000];
  char ELinha_s[10];
  char ELinha_h[10];
  int D.6244;
  int _1;
  int _2;
  int _3;
  int _17;
  int _18;
  int _19;

  <bb 2> :
  _1 = E1 (&E1_tp, &E1_h, &E1_s, &E1_p, &E1_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  strcpy (&ELinha_h, &E1_tp);
  strcpy (&ELinha_hp, &E1_p);
  strcpy (&ELinha_hc, &E1_c);
  _2 = ELinha (&ELinha_h, &ELinha_s, &ELinha_p, &ELinha_hp, &ELinha_sp, &ELinha_c, &ELinha_hc, &ELinha_sc);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (E_tp_11(D), &ELinha_s);
  strcpy (E_p_13(D), &ELinha_sp);
  strcpy (E_c_15(D), &ELinha_sc);
  _17 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_17(4), _18(5), _19(6)>
  ELinha_h ={v} {CLOBBER};
  ELinha_s ={v} {CLOBBER};
  ELinha_c ={v} {CLOBBER};
  ELinha_p ={v} {CLOBBER};
  ELinha_hp ={v} {CLOBBER};
  ELinha_hc ={v} {CLOBBER};
  ELinha_sp ={v} {CLOBBER};
  ELinha_sc ={v} {CLOBBER};
  E1_tp ={v} {CLOBBER};
  E1_h ={v} {CLOBBER};
  E1_s ={v} {CLOBBER};
  E1_p ={v} {CLOBBER};
  E1_c ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function EIF (EIF, funcdef_no=48, decl_uid=4802, cgraph_uid=48, symbol_order=65)

Released 0 names, 0.00%, removed 0 holes
EIF (char * EIF_c, char * EIF_p)
{
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6122;
  int _1;
  int _2;
  int _10;
  int _11;

  <bb 2> :
  _1 = E (&E_tp, &E_p, &E_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (EIF_c_6(D), &E_c);
  strcpy (EIF_p_8(D), &E_p);
  _10 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _11 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_10(3), _11(4)>
  E_tp ={v} {CLOBBER};
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function COMDOWHILE (COMDOWHILE, funcdef_no=51, decl_uid=4808, cgraph_uid=51, symbol_order=68)

Released 0 names, 0.00%, removed 0 holes
COMDOWHILE (char * COMDOWHILE_c)
{
  char label[10];
  char RDOWHILE_c[1000];
  char COM_c[1000];
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6162;
  int tk.234_1;
  int _2;
  int _3;
  int tk.235_4;
  int tk.236_5;
  int _6;
  int tk.237_7;
  int tk.238_8;
  int coluna.239_9;
  int linha.240_10;
  int coluna.241_11;
  int linha.242_12;
  int coluna.243_13;
  int linha.244_14;
  int coluna.245_15;
  int linha.246_16;
  int _17;
  int _35;
  int _37;
  int _39;
  int _40;
  int _42;
  int _44;
  int _45;
  int _46;
  int _47;

  <bb 2> :
  tk.234_1 = tk;
  if (tk.234_1 == 14)
    goto <bb 3>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 3> :
  laco = 1;
  doWhile = 1;
  getToken ();
  _2 = COM (&COM_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 4> :
  _3 = RDOWHILE (&RDOWHILE_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 5> :
  tk.235_4 = tk;
  if (tk.235_4 == 13)
    goto <bb 6>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 6> :
  getToken ();
  tk.236_5 = tk;
  if (tk.236_5 == 34)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 7> :
  getToken ();
  _6 = E (&E_tp, &E_p, &E_c);
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  tk.237_7 = tk;
  if (tk.237_7 == 35)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  getToken ();
  tk.238_8 = tk;
  if (tk.238_8 == 40)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  getToken ();
  doWhile = 0;
  geralabel (&label);
  sprintf (COMDOWHILE_c_32(D), "%s:\n%s%s\tif %s==1 goto %s\n%s", &label, &COM_c, &E_c, &E_p, &label, &RDOWHILE_c);
  laco = 0;
  _35 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 11> :
  coluna.239_9 = coluna;
  linha.240_10 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.240_10, coluna.239_9);
  goto <bb 19>; [INV]

  <bb 12> :
  coluna.241_11 = coluna;
  linha.242_12 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.242_12, coluna.241_11);
  _39 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 13> :
  _40 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 14> :
  coluna.243_13 = coluna;
  linha.244_14 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.244_14, coluna.243_13);
  _42 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 15> :
  coluna.245_15 = coluna;
  linha.246_16 = linha;
  printf ("Erro: esperava token \'while\' na linha %d coluna %d\n", linha.246_16, coluna.245_15);
  _44 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 16> :
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 17> :
  _46 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 18> :
  _47 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 19> :
  _37 = -1;

  <bb 20> :
  # _17 = PHI <_35(10), _39(12), _40(13), _42(14), _44(15), _45(16), _46(17), _47(18), _37(19)>
  E_tp ={v} {CLOBBER};
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};
  COM_c ={v} {CLOBBER};
  RDOWHILE_c ={v} {CLOBBER};
  label ={v} {CLOBBER};

  <bb 21> :
<L24>:
  return _17;

}



;; Function COM (COM, funcdef_no=43, decl_uid=4791, cgraph_uid=43, symbol_order=60)

Released 0 names, 0.00%, removed 0 holes
COM (char * COM_c)
{
  char COMIF_c[1000];
  char COMDOWHILE_c[1000];
  char COMFOR_c[1000];
  char COMWHILE_c[1000];
  char RDEC_c[1000];
  char LCD_c[1000];
  char E_c[1000];
  char E_p[10];
  char E_tp[10];
  char TIPO_t[10];
  int D.6023;
  int _1;
  int tk.180_2;
  int coluna.181_3;
  int linha.182_4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int tk.183_10;
  int tk.184_11;
  int coluna.185_12;
  int linha.186_13;
  int tk.187_14;
  int laco.188_15;
  int tk.189_16;
  int coluna.190_17;
  int linha.191_18;
  int tk.192_19;
  int laco.193_20;
  int tk.194_21;
  int coluna.195_22;
  int linha.196_23;
  int tk.197_24;
  int _25;
  int tk.198_26;
  int coluna.199_27;
  int linha.200_28;
  int _29;
  int tk.201_30;
  struct tabela * ts.202_31;
  int _32;
  int _33;
  int coluna.203_34;
  int linha.204_35;
  int _36;
  int _44;
  int _46;
  int _49;
  int _52;
  int _55;
  int _58;
  int _60;
  int _63;
  int _65;
  int _70;
  int _72;
  int _77;
  int _79;
  int _84;
  int _86;
  int _87;
  int _94;
  int _95;
  int _97;
  int _98;

  <bb 2> :
  _1 = E (&E_tp, &E_p, &E_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  tk.180_2 = tk;
  if (tk.180_2 == 40)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (COM_c_41(D), &E_c);
  getToken ();
  _44 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 5> :
  coluna.181_3 = coluna;
  linha.182_4 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.182_4, coluna.181_3);
  _46 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 6> :
  _5 = COMWHILE (&COMWHILE_c);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  strcpy (COM_c_41(D), &COMWHILE_c);
  _49 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 8> :
  _6 = COMDOWHILE (&COMDOWHILE_c);
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (COM_c_41(D), &COMDOWHILE_c);
  _52 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 10> :
  _7 = COMIF (&COMIF_c);
  if (_7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  strcpy (COM_c_41(D), &COMIF_c);
  _55 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 12> :
  _8 = COMFOR (&COMFOR_c);
  if (_8 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  strcpy (COM_c_41(D), &COMFOR_c);
  _58 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 14> :
  _9 = COMSWITCH ();
  if (_9 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _60 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 16> :
  tk.183_10 = tk;
  if (tk.183_10 == 25)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  getToken ();
  tk.184_11 = tk;
  if (tk.184_11 == 40)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  getToken ();
  _63 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 19> :
  coluna.185_12 = coluna;
  linha.186_13 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.186_13, coluna.185_12);
  _65 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 20> :
  tk.187_14 = tk;
  if (tk.187_14 == 10)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 21> :
  laco.188_15 = laco;
  if (laco.188_15 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  printf ("Erro: comando break fora de laco de repeticao");
  exit (0);

  <bb 23> :
  getToken ();
  tk.189_16 = tk;
  if (tk.189_16 == 40)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  getToken ();
  _70 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 25> :
  coluna.190_17 = coluna;
  linha.191_18 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.191_18, coluna.190_17);
  _72 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 26> :
  tk.192_19 = tk;
  if (tk.192_19 == 18)
    goto <bb 27>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 27> :
  laco.193_20 = laco;
  if (laco.193_20 == 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  printf ("Erro: comando continue fora de laco de repeticao");
  exit (0);

  <bb 29> :
  getToken ();
  tk.194_21 = tk;
  if (tk.194_21 == 40)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  getToken ();
  _77 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 31> :
  coluna.195_22 = coluna;
  linha.196_23 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.196_23, coluna.195_22);
  _79 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 32> :
  tk.197_24 = tk;
  if (tk.197_24 == 36)
    goto <bb 33>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 33> :
  getToken ();
  _25 = LCD (&LCD_c);
  if (_25 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 34> :
  tk.198_26 = tk;
  if (tk.198_26 == 37)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  strcpy (COM_c_41(D), &LCD_c);
  getToken ();
  _84 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 36> :
  coluna.199_27 = coluna;
  linha.200_28 = linha;
  printf ("Erro: esperava token \'}\' na linha %d coluna %d\n", linha.200_28, coluna.199_27);
  _86 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 37> :
  _87 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 38> :
  _29 = TIPO (&TIPO_t);
  if (_29 != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 39> :
  tk.201_30 = tk;
  if (tk.201_30 == 1)
    goto <bb 40>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 40> :
  ts.202_31 = ts;
  _32 = verificaDuplicacao (&lex, ts.202_31);
  if (_32 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  addTabelaSimbolos (&lex, &TIPO_t);

  <bb 42> :
  getToken ();
  _33 = RDEC ();
  if (_33 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  strcpy (COM_c_41(D), &RDEC_c);
  _94 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 44> :
  _95 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 45> :
  coluna.203_34 = coluna;
  linha.204_35 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.204_35, coluna.203_34);
  _97 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 47>; [INV]

  <bb 46> :
  _98 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 47> :
  # _36 = PHI <_44(4), _46(5), _49(7), _52(9), _55(11), _58(13), _60(15), _63(18), _65(19), _70(24), _72(25), _77(30), _79(31), _84(35), _86(36), _87(37), _94(43), _95(44), _97(45), _98(46)>
  TIPO_t ={v} {CLOBBER};
  E_tp ={v} {CLOBBER};
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};
  LCD_c ={v} {CLOBBER};
  RDEC_c ={v} {CLOBBER};
  COMWHILE_c ={v} {CLOBBER};
  COMFOR_c ={v} {CLOBBER};
  COMDOWHILE_c ={v} {CLOBBER};
  COMIF_c ={v} {CLOBBER};

  <bb 48> :
<L45>:
  return _36;

}



;; Function LCD (LCD, funcdef_no=42, decl_uid=4789, cgraph_uid=42, symbol_order=59)

Released 0 names, 0.00%, removed 0 holes
LCD (char * LCD_c)
{
  char LCDLinha_c[1000];
  char COM_c[1000];
  char TIPO_t[10];
  char DV_t[10];
  int D.6010;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _14;
  int _15;
  int _21;
  int _22;
  int _23;
  int _24;

  <bb 2> :
  MEM[(char * {ref-all})&LCDLinha_c] = 0;
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = LCD (&LCDLinha_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  sprintf (LCD_c_12(D), "%s%s", &COM_c, &LCDLinha_c);
  _14 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 5> :
  _15 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 6> :
  _3 = TIPO (&TIPO_t);
  if (_3 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  strcpy (&DV_t, &TIPO_t);
  _4 = DV (&DV_t);
  if (_4 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _5 = LCD (&LCDLinha_c);
  if (_5 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  strcpy (LCD_c_12(D), &LCDLinha_c);
  _21 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  # _6 = PHI <_14(4), _15(5), _21(9), _22(10), _23(11), _24(12)>
  DV_t ={v} {CLOBBER};
  TIPO_t ={v} {CLOBBER};
  COM_c ={v} {CLOBBER};
  LCDLinha_c ={v} {CLOBBER};

  <bb 14> :
<L11>:
  return _6;

}



;; Function CORPO (CORPO, funcdef_no=41, decl_uid=4787, cgraph_uid=41, symbol_order=58)

Released 0 names, 0.00%, removed 0 holes
CORPO (char * CORPO_c)
{
  char LCD_c[1000];
  int D.6003;
  int _1;
  int _2;
  int _8;
  int _9;

  <bb 2> :
  _1 = LCD (&LCD_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (CORPO_c_6(D), &LCD_c);
  _8 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_8(3), _9(4)>
  LCD_c ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function DF (DF, funcdef_no=38, decl_uid=4783, cgraph_uid=38, symbol_order=55)

Released 0 names, 0.00%, removed 0 holes
DF ()
{
  char CORPO_c[1000];
  int D.5974;
  int _1;
  int tk.162_2;
  int tk.163_3;
  int _4;
  int tk.164_5;
  int coluna.165_6;
  int linha.166_7;
  int coluna.167_8;
  int linha.168_9;
  int coluna.169_10;
  int linha.170_11;
  int _12;
  int _20;
  int _22;
  int _23;
  int _25;
  int _27;
  int _28;

  <bb 2> :
  _1 = LP ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  tk.162_2 = tk;
  if (tk.162_2 == 35)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  getToken ();
  tk.163_3 = tk;
  if (tk.163_3 == 36)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  getToken ();
  _4 = CORPO (&CORPO_c);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  tk.164_5 = tk;
  if (tk.164_5 == 37)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  getToken ();
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  coluna.165_6 = coluna;
  linha.166_7 = linha;
  printf ("Erro: esperava token \'}\' na linha %d coluna %d\n", linha.166_7, coluna.165_6);
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  coluna.167_8 = coluna;
  linha.168_9 = linha;
  printf ("Erro: esperava token \'{\' na linha %d coluna %d\n", linha.168_9, coluna.167_8);
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  coluna.169_10 = coluna;
  linha.170_11 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.170_11, coluna.169_10);
  _27 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  _28 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  # _12 = PHI <_20(7), _22(8), _23(9), _25(10), _27(11), _28(12)>
  CORPO_c ={v} {CLOBBER};

  <bb 14> :
<L11>:
  return _12;

}



;; Function RDEC (RDEC, funcdef_no=29, decl_uid=4761, cgraph_uid=29, symbol_order=46)

Released 0 names, 0.00%, removed 0 holes
RDEC ()
{
  char DV_t[10];
  char DF_c[1000];
  int D.5840;
  int tk.114_1;
  int _2;
  int tk.115_3;
  int _4;
  int tk.116_5;
  int tk.117_6;
  int tk.118_7;
  int tk.119_8;
  int coluna.120_9;
  int linha.121_10;
  int coluna.122_11;
  int linha.123_12;
  int coluna.124_13;
  int linha.125_14;
  int _15;
  int _20;
  int _21;
  int _24;
  int _25;
  int _27;
  int _31;
  int _33;
  int _35;
  int _37;

  <bb 2> :
  tk.114_1 = tk;
  if (tk.114_1 == 42)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  getToken ();
  _2 = DV (&DV_t);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 5> :
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 6> :
  tk.115_3 = tk;
  if (tk.115_3 == 34)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  getToken ();
  _4 = DF (&DF_c);
  if (_4 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 9> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 10> :
  tk.116_5 = tk;
  if (tk.116_5 == 40)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  getToken ();
  _27 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 12> :
  tk.117_6 = tk;
  if (tk.117_6 == 43)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  getToken ();
  tk.118_7 = tk;
  if (tk.118_7 == 80)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  getToken ();
  tk.119_8 = tk;
  if (tk.119_8 == 40)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  getToken ();
  _31 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  coluna.120_9 = coluna;
  linha.121_10 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.121_10, coluna.120_9);
  _33 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  coluna.122_11 = coluna;
  linha.123_12 = linha;
  printf ("Erro: esperava token constante inteira na linha %d coluna %d\n", linha.123_12, coluna.122_11);
  _35 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  coluna.124_13 = coluna;
  linha.125_14 = linha;
  printf ("Erro: esperava token \';\', \')\' ou \',\' na linha %d coluna %d\n", linha.125_14, coluna.124_13);
  _37 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  # _15 = PHI <_20(4), _21(5), _24(8), _25(9), _27(11), _31(15), _33(16), _35(17), _37(18)>
  DF_c ={v} {CLOBBER};
  DV_t ={v} {CLOBBER};

  <bb 20> :
<L17>:
  return _15;

}



;; Function DEC (DEC, funcdef_no=28, decl_uid=4760, cgraph_uid=28, symbol_order=45)

Released 0 names, 0.00%, removed 0 holes
DEC ()
{
  char Tipo_t[10];
  char RDEC_t[10];
  int D.5833;
  int _1;
  int tk.110_2;
  struct tabela * ts.111_3;
  int _4;
  int _5;
  int coluna.112_6;
  int linha.113_7;
  int _8;
  int _18;
  int _19;
  int _21;
  int _22;

  <bb 2> :
  _1 = TIPO (&Tipo_t);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  strcpy (&RDEC_t, &Tipo_t);
  tk.110_2 = tk;
  if (tk.110_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  ts.111_3 = ts;
  _4 = verificaDuplicacao (&lex, ts.111_3);
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  addTabelaSimbolos (&lex, &Tipo_t);

  <bb 6> :
  getToken ();
  _5 = RDEC (&RDEC_t);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _18 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 9> :
  coluna.112_6 = coluna;
  linha.113_7 = linha;
  printf ("Erro: esperava token \'id\' na linha %d coluna %d\n", linha.113_7, coluna.112_6);
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 11> :
  # _8 = PHI <_18(7), _19(8), _21(9), _22(10)>
  RDEC_t ={v} {CLOBBER};
  Tipo_t ={v} {CLOBBER};

  <bb 12> :
<L9>:
  return _8;

}



;; Function LD (LD, funcdef_no=26, decl_uid=4758, cgraph_uid=26, symbol_order=43)

Released 0 names, 0.00%, removed 0 holes
LD ()
{
  int D.5818;
  int _1;
  int _2;
  int _3;
  int _8;
  int _9;
  int _10;

  <bb 2> :
  _1 = DEC ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = RLD ();
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _8 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _9 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _10 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_8(4), _9(5), _10(6)>
<L4>:
  return _3;

}



;; Function PROGC (PROGC, funcdef_no=25, decl_uid=4757, cgraph_uid=25, symbol_order=42)

Released 0 names, 0.00%, removed 0 holes
PROGC ()
{
  int D.5812;
  int _1;
  int _2;
  int _5;
  int _6;

  <bb 2> :
  _1 = LD ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_5(3), _6(4)>
<L2>:
  return _2;

}



;; Function RLD (RLD, funcdef_no=27, decl_uid=4759, cgraph_uid=27, symbol_order=44)

Released 0 names, 0.00%, removed 0 holes
RLD (char * RLD_c)
{
  char LD_c[1000];
  int D.5822;
  int _1;
  int _2;
  int _8;
  int _9;

  <bb 2> :
  _1 = LD (&LD_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RLD_c_6(D), &LD_c);
  _8 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_8(3), _9(4)>
  LD_c ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function RIF (RIF, funcdef_no=45, decl_uid=4795, cgraph_uid=45, symbol_order=62)

Released 0 names, 0.00%, removed 0 holes
RIF (char * RIF_c)
{
  char COM_c[1000];
  int D.6089;
  int tk.212_1;
  int _2;
  int _3;
  int _10;
  int _11;
  int _12;

  <bb 2> :
  tk.212_1 = tk;
  if (tk.212_1 == 12)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  getToken ();
  _2 = COM (&COM_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  strcpy (RIF_c_8(D), &COM_c);
  _10 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 5> :
  _11 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  _12 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> :
  # _3 = PHI <_10(4), _11(5), _12(6)>
  COM_c ={v} {CLOBBER};

  <bb 8> :
<L5>:
  return _3;

}



;; Function COMIF (COMIF, funcdef_no=44, decl_uid=4793, cgraph_uid=44, symbol_order=61)

Released 0 names, 0.00%, removed 0 holes
COMIF (char * COMIF_c)
{
  char labelfim[10];
  char labelelse[10];
  char RIF_c[1000];
  char COM_c[1000];
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6082;
  const unsigned char D.6078;
  int tk.205_1;
  int tk.206_2;
  int _3;
  int tk.207_4;
  int _5;
  int _6;
  int _7;
  int coluna.208_8;
  int linha.209_9;
  int coluna.210_10;
  int linha.211_11;
  int _12;
  const unsigned char _25;
  int _29;
  int _30;
  int _31;
  int _33;
  int _34;
  int _36;
  int _37;

  <bb 2> :
  MEM[(char * {ref-all})&RIF_c] = 0;
  tk.205_1 = tk;
  if (tk.205_1 == 11)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  getToken ();
  tk.206_2 = tk;
  if (tk.206_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 4> :
  getToken ();
  _3 = E (&E_tp, &E_p, &E_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 5> :
  tk.207_4 = tk;
  if (tk.207_4 == 35)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  getToken ();
  _5 = COM (&COM_c);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  _6 = RIF (&RIF_c);
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  geralabel (&labelelse);
  geralabel (&labelfim);
  _25 = MEM[(const unsigned char * {ref-all})&RIF_c];
  _7 = (int) _25;
  if (_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  sprintf (COMIF_c_26(D), "%s\tif %s==0 goto %s\n%s\tgoto %s\n%s:\n%s%s:\n", &E_c, &E_p, &labelelse, &COM_c, &labelfim, &labelelse, &RIF_c, &labelfim);
  goto <bb 11>; [INV]

  <bb 10> :
  sprintf (COMIF_c_26(D), "%s\tif %s==0 goto %s\n%s%s:\n", &E_c, &E_p, &labelfim, &COM_c, &labelfim);

  <bb 11> :
  _29 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 12> :
  _30 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 13> :
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 14> :
  coluna.208_8 = coluna;
  linha.209_9 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.209_9, coluna.208_8);
  _33 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 15> :
  _34 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 16> :
  coluna.210_10 = coluna;
  linha.211_11 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.211_11, coluna.210_10);
  _36 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 17> :
  _37 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 18> :
  # _12 = PHI <_29(11), _30(12), _31(13), _33(14), _34(15), _36(16), _37(17)>
  E_tp ={v} {CLOBBER};
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};
  COM_c ={v} {CLOBBER};
  RIF_c ={v} {CLOBBER};
  labelelse ={v} {CLOBBER};
  labelfim ={v} {CLOBBER};

  <bb 19> :
<L16>:
  return _12;

}



;; Function RFOR (RFOR, funcdef_no=47, decl_uid=4799, cgraph_uid=47, symbol_order=64)

Released 0 names, 0.00%, removed 0 holes
RFOR (char * RFOR_c)
{
  char COM_c[1000];
  int D.6117;
  int _1;
  int _2;
  int _8;
  int _9;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RFOR_c_6(D), &COM_c);
  _8 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_8(3), _9(4)>
  COM_c ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function COMFOR (COMFOR, funcdef_no=46, decl_uid=4797, cgraph_uid=46, symbol_order=63)

Released 0 names, 0.00%, removed 0 holes
COMFOR (char * COMFOR_c)
{
  char labelfim[1000];
  char labellaco[1000];
  char EIF3_p[1000];
  char EIF2_p[1000];
  char EIF1_p[1000];
  char EIF3_c[1000];
  char EIF2_c[1000];
  char EIF1_c[1000];
  char RFOR_c[1000];
  char COM_c[1000];
  int D.6112;
  int tk.213_1;
  int tk.214_2;
  int _3;
  int tk.215_4;
  int _5;
  int tk.216_6;
  int _7;
  int tk.217_8;
  int _9;
  int _10;
  int coluna.218_11;
  int linha.219_12;
  int coluna.220_13;
  int linha.221_14;
  int coluna.222_15;
  int linha.223_16;
  int coluna.224_17;
  int linha.225_18;
  int _19;
  int _38;
  int _39;
  int _40;
  int _42;
  int _43;
  int _45;
  int _46;
  int _48;
  int _49;
  int _51;
  int _52;

  <bb 2> :
  tk.213_1 = tk;
  if (tk.213_1 == 15)
    goto <bb 3>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 3> :
  laco = 1;
  getToken ();
  tk.214_2 = tk;
  if (tk.214_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 4> :
  getToken ();
  _3 = EIF (&EIF1_c, &EIF1_p);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 5> :
  tk.215_4 = tk;
  if (tk.215_4 == 40)
    goto <bb 6>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 6> :
  getToken ();
  _5 = EIF (&EIF2_c, &EIF2_p);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 7> :
  tk.216_6 = tk;
  if (tk.216_6 == 40)
    goto <bb 8>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  getToken ();
  _7 = EIF (&EIF3_c, &EIF3_p);
  if (_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  tk.217_8 = tk;
  if (tk.217_8 == 35)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 10> :
  getToken ();
  _9 = COM (&COM_c);
  if (_9 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  laco = 0;
  _10 = RFOR (&RFOR_c);
  if (_10 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  geralabel (&labellaco);
  geralabel (&labelfim);
  sprintf (COMFOR_c_36(D), "%s%s:\n%s\tif %s == 0 goto %s\n%s%s\tgoto %s\n%s:\n%s", &EIF1_c, &labellaco, &EIF2_c, &EIF2_p, &labelfim, &COM_c, &EIF3_c, &labellaco, &labelfim, &RFOR_c);
  _38 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 13> :
  _39 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 14> :
  _40 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 15> :
  coluna.218_11 = coluna;
  linha.219_12 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.219_12, coluna.218_11);
  _42 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 16> :
  _43 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 17> :
  coluna.220_13 = coluna;
  linha.221_14 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.221_14, coluna.220_13);
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 18> :
  _46 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 19> :
  coluna.222_15 = coluna;
  linha.223_16 = linha;
  printf ("Erro: esperava token \';\' na linha %d coluna %d\n", linha.223_16, coluna.222_15);
  _48 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 20> :
  _49 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 21> :
  coluna.224_17 = coluna;
  linha.225_18 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.225_18, coluna.224_17);
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 22> :
  _52 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 23> :
  # _19 = PHI <_38(12), _39(13), _40(14), _42(15), _43(16), _45(17), _46(18), _48(19), _49(20), _51(21), _52(22)>
  COM_c ={v} {CLOBBER};
  RFOR_c ={v} {CLOBBER};
  EIF1_c ={v} {CLOBBER};
  EIF2_c ={v} {CLOBBER};
  EIF3_c ={v} {CLOBBER};
  EIF1_p ={v} {CLOBBER};
  EIF2_p ={v} {CLOBBER};
  EIF3_p ={v} {CLOBBER};
  labellaco ={v} {CLOBBER};
  labelfim ={v} {CLOBBER};

  <bb 24> :
<L21>:
  return _19;

}



;; Function RWHILE (RWHILE, funcdef_no=50, decl_uid=4806, cgraph_uid=50, symbol_order=67)

Released 0 names, 0.00%, removed 0 holes
RWHILE (char * RWHILE_c)
{
  char COM_c[1000];
  int D.6143;
  int _1;
  int _2;
  int _8;
  int _9;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RWHILE_c_6(D), &COM_c);
  _8 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_8(3), _9(4)>
  COM_c ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function COMWHILE (COMWHILE, funcdef_no=49, decl_uid=4804, cgraph_uid=49, symbol_order=66)

Released 0 names, 0.00%, removed 0 holes
COMWHILE (char * COMWHILE_c)
{
  char labelfim[10];
  char labelinicio[10];
  char RWHILE_c[1000];
  char COM_c[1000];
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6138;
  int tk.226_1;
  int doWhile.227_2;
  int tk.228_3;
  int _4;
  int tk.229_5;
  int _6;
  int _7;
  int coluna.230_8;
  int linha.231_9;
  int coluna.232_10;
  int linha.233_11;
  int _12;
  int _27;
  int _28;
  int _29;
  int _31;
  int _32;
  int _34;
  int _35;

  <bb 2> :
  tk.226_1 = tk;
  if (tk.226_1 == 13)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 3> :
  doWhile.227_2 = doWhile;
  if (doWhile.227_2 != 1)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  laco = 1;
  getToken ();
  tk.228_3 = tk;
  if (tk.228_3 == 34)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  getToken ();
  _4 = E (&E_tp, &E_p, &E_c);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 6> :
  tk.229_5 = tk;
  if (tk.229_5 == 35)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  getToken ();
  _6 = COM (&COM_c);
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _7 = RWHILE (&RWHILE_c);
  if (_7 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  geralabel (&labelinicio);
  geralabel (&labelfim);
  sprintf (COMWHILE_c_24(D), "%s:\n%s\tif %s==0 goto %s\n%s\tgoto %s\n%s:\n%s", &labelinicio, &E_c, &E_p, &labelfim, &COM_c, &labelinicio, &labelfim, &RWHILE_c);
  laco = 0;
  _27 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 10> :
  _28 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 11> :
  _29 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 12> :
  coluna.230_8 = coluna;
  linha.231_9 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.231_9, coluna.230_8);
  _31 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 13> :
  _32 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 14> :
  coluna.232_10 = coluna;
  linha.233_11 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.233_11, coluna.232_10);
  _34 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 15> :
  _35 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 16> :
  # _12 = PHI <_27(9), _28(10), _29(11), _31(12), _32(13), _34(14), _35(15)>
  E_tp ={v} {CLOBBER};
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};
  COM_c ={v} {CLOBBER};
  RWHILE_c ={v} {CLOBBER};
  labelinicio ={v} {CLOBBER};
  labelfim ={v} {CLOBBER};

  <bb 17> :
<L14>:
  return _12;

}



;; Function RDOWHILE (RDOWHILE, funcdef_no=52, decl_uid=4810, cgraph_uid=52, symbol_order=69)

Released 0 names, 0.00%, removed 0 holes
RDOWHILE (char * RDOWHILE_c)
{
  char COM_c[1000];
  int D.6174;
  int _1;
  int _2;
  int _8;
  int _9;

  <bb 2> :
  _1 = COM (&COM_c);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  strcpy (RDOWHILE_c_6(D), &COM_c);
  _8 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
  # _2 = PHI <_8(3), _9(4)>
  COM_c ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function NEXTCASE (NEXTCASE, funcdef_no=55, decl_uid=4813, cgraph_uid=55, symbol_order=72)

Released 0 names, 0.00%, removed 0 holes
NEXTCASE ()
{
  char COM_c[1000];
  int D.6231;
  int tk.280_1;
  int tk.281_2;
  int tk.282_3;
  int _4;
  int _5;
  int coluna.283_6;
  int linha.284_7;
  int coluna.285_8;
  int linha.286_9;
  int tk.287_10;
  int tk.288_11;
  int _12;
  int coluna.289_13;
  int linha.290_14;
  int _15;
  int _23;
  int _24;
  int _25;
  int _27;
  int _29;
  int _33;
  int _34;
  int _36;
  int _37;

  <bb 2> :
  tk.280_1 = tk;
  if (tk.280_1 == 17)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  getToken ();
  tk.281_2 = tk;
  if (tk.281_2 == 80)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  getToken ();
  tk.282_3 = tk;
  if (tk.282_3 == 41)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  getToken ();
  _4 = COM (&COM_c);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _5 = NEXTCASE ();
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _23 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 8> :
  _24 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 9> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 10> :
  coluna.283_6 = coluna;
  linha.284_7 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.284_7, coluna.283_6);
  _27 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 11> :
  coluna.285_8 = coluna;
  linha.286_9 = linha;
  printf ("Erro: esperava constante inteira na linha %d coluna %d\n", linha.286_9, coluna.285_8);
  _29 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 12> :
  tk.287_10 = tk;
  if (tk.287_10 == 19)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  getToken ();
  tk.288_11 = tk;
  if (tk.288_11 == 41)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  getToken ();
  _12 = COM (&COM_c);
  if (_12 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _33 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  _34 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 17> :
  coluna.289_13 = coluna;
  linha.290_14 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.290_14, coluna.289_13);
  _36 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 18> :
  _37 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 19> :
  # _15 = PHI <_23(7), _24(8), _25(9), _27(10), _29(11), _33(15), _34(16), _36(17), _37(18)>
  COM_c ={v} {CLOBBER};

  <bb 20> :
<L17>:
  return _15;

}



;; Function RSWITCH (RSWITCH, funcdef_no=54, decl_uid=4812, cgraph_uid=54, symbol_order=71)

Released 0 names, 0.00%, removed 0 holes
RSWITCH ()
{
  char COM_c[1000];
  int D.6204;
  int tk.254_1;
  int tk.255_2;
  int tk.256_3;
  int tk.257_4;
  int _5;
  int _6;
  int tk.258_7;
  int coluna.259_8;
  int linha.260_9;
  int coluna.261_10;
  int linha.262_11;
  int coluna.263_12;
  int linha.264_13;
  int coluna.265_14;
  int linha.266_15;
  int tk.267_16;
  int tk.268_17;
  int tk.269_18;
  int _19;
  int coluna.270_20;
  int linha.271_21;
  int coluna.272_22;
  int linha.273_23;
  int tk.274_24;
  int tk.275_25;
  int _26;
  int coluna.276_27;
  int linha.277_28;
  int coluna.278_29;
  int linha.279_30;
  int _31;
  int _41;
  int _43;
  int _44;
  int _45;
  int _47;
  int _49;
  int _51;
  int _56;
  int _57;
  int _59;
  int _61;
  int _65;
  int _66;
  int _68;
  int _70;

  <bb 2> :
  tk.254_1 = tk;
  if (tk.254_1 == 36)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 3> :
  getToken ();
  tk.255_2 = tk;
  if (tk.255_2 == 17)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  getToken ();
  tk.256_3 = tk;
  if (tk.256_3 == 80)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  getToken ();
  tk.257_4 = tk;
  if (tk.257_4 == 41)
    goto <bb 6>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 6> :
  getToken ();
  _5 = COM (&COM_c);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  _6 = NEXTCASE ();
  if (_6 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  tk.258_7 = tk;
  if (tk.258_7 == 37)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  getToken ();
  _41 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 10> :
  coluna.259_8 = coluna;
  linha.260_9 = linha;
  printf ("Erro: esperava token \'}\' na linha %d coluna %d\n", linha.260_9, coluna.259_8);
  _43 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 11> :
  _44 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 12> :
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 13> :
  coluna.261_10 = coluna;
  linha.262_11 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.262_11, coluna.261_10);
  _47 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 14> :
  coluna.263_12 = coluna;
  linha.264_13 = linha;
  printf ("Erro: esperava constante inteira na linha %d coluna %d\n", linha.264_13, coluna.263_12);
  _49 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 15> :
  coluna.265_14 = coluna;
  linha.266_15 = linha;
  printf ("Erro: esperava token \'case\' na linha %d coluna %d\n", linha.266_15, coluna.265_14);
  _51 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 16> :
  tk.267_16 = tk;
  if (tk.267_16 == 17)
    goto <bb 17>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 17> :
  getToken ();
  tk.268_17 = tk;
  if (tk.268_17 == 80)
    goto <bb 18>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 18> :
  getToken ();
  tk.269_18 = tk;
  if (tk.269_18 == 41)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  getToken ();
  _19 = COM (&COM_c);
  if (_19 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _56 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 21> :
  _57 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 22> :
  coluna.270_20 = coluna;
  linha.271_21 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.271_21, coluna.270_20);
  _59 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 23> :
  coluna.272_22 = coluna;
  linha.273_23 = linha;
  printf ("Erro: esperava constante inteira na linha %d coluna %d\n", linha.273_23, coluna.272_22);
  _61 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 24> :
  tk.274_24 = tk;
  if (tk.274_24 == 19)
    goto <bb 25>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 25> :
  getToken ();
  tk.275_25 = tk;
  if (tk.275_25 == 41)
    goto <bb 26>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 26> :
  getToken ();
  _26 = COM (&COM_c);
  if (_26 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  _65 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 28> :
  _66 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 29> :
  coluna.276_27 = coluna;
  linha.277_28 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.277_28, coluna.276_27);
  _68 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 30> :
  coluna.278_29 = coluna;
  linha.279_30 = linha;
  printf ("Erro: esperava token \'{\', \'case\' ou \'default\' na linha %d coluna %d\n", linha.279_30, coluna.278_29);
  _70 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 31> :
  # _31 = PHI <_41(9), _43(10), _44(11), _45(12), _47(13), _49(14), _51(15), _56(20), _57(21), _59(22), _61(23), _65(27), _66(28), _68(29), _70(30)>
  COM_c ={v} {CLOBBER};

  <bb 32> :
<L29>:
  return _31;

}



;; Function COMSWITCH (COMSWITCH, funcdef_no=53, decl_uid=4811, cgraph_uid=53, symbol_order=70)

Released 0 names, 0.00%, removed 0 holes
COMSWITCH ()
{
  char E_c[1000];
  char E_p[1000];
  char E_tp[10];
  int D.6187;
  int tk.247_1;
  int tk.248_2;
  int _3;
  int tk.249_4;
  int _5;
  int coluna.250_6;
  int linha.251_7;
  int coluna.252_8;
  int linha.253_9;
  int _10;
  int _18;
  int _19;
  int _21;
  int _22;
  int _24;
  int _25;

  <bb 2> :
  tk.247_1 = tk;
  if (tk.247_1 == 16)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  getToken ();
  tk.248_2 = tk;
  if (tk.248_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  getToken ();
  _3 = E (&E_tp, &E_p, &E_c);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  tk.249_4 = tk;
  if (tk.249_4 == 35)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  getToken ();
  _5 = RSWITCH ();
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _18 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  _19 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  coluna.250_6 = coluna;
  linha.251_7 = linha;
  printf ("Erro: esperava token \')\' na linha %d coluna %d\n", linha.251_7, coluna.250_6);
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  coluna.252_8 = coluna;
  linha.253_9 = linha;
  printf ("Erro: esperava token \'(\' na linha %d coluna %d\n", linha.253_9, coluna.252_8);
  _24 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  _25 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  # _10 = PHI <_18(7), _19(8), _21(9), _22(10), _24(11), _25(12)>
  E_tp ={v} {CLOBBER};
  E_p ={v} {CLOBBER};
  E_c ={v} {CLOBBER};

  <bb 14> :
<L11>:
  return _10;

}



;; Function E2Linha (E2Linha, funcdef_no=60, decl_uid=4845, cgraph_uid=60, symbol_order=77)

Released 0 names, 0.00%, removed 0 holes
E2Linha (char * E2Linha_h, char * E2Linha_s, char * E2Linha_hp, char * E2Linha_sp, char * E2Linha_hc, char * E2Linha_sc)
{
  char E2Linha2_sc[1000];
  char E2Linha2_hc[1000];
  char E2Linha2_sp[10];
  char E2Linha2_hp[10];
  char E2Linha2_s[10];
  char E2Linha2_h[10];
  char E2_c[1000];
  char E2_p[10];
  char E2_s[10];
  char E2_h[10];
  char E2_tp[10];
  int D.6303;
  int tk.298_1;
  int _2;
  int tk.299_3;
  int _4;
  int _5;
  int coluna.300_6;
  int linha.301_7;
  int _8;
  int _16;
  int _17;
  int _18;
  int _20;
  int _21;
  int _31;

  <bb 2> :
  tk.298_1 = tk;
  if (tk.298_1 == 64)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  getToken ();
  _2 = E2 (&E2_tp, &E2_h, &E2_s, &E2_p, &E2_c);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  tk.299_3 = tk;
  if (tk.299_3 == 41)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  getToken ();
  _4 = E2 (&E2_tp, &E2_h, &E2_s, &E2_p, &E2_c);
  if (_4 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _5 = E2Linha (&E2Linha2_h, &E2Linha2_s, &E2Linha2_hp, &E2Linha2_sp, &E2Linha2_hc, &E2Linha2_sc);
  if (_5 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _16 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  _17 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  _18 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  coluna.300_6 = coluna;
  linha.301_7 = linha;
  printf ("Erro: esperava token \':\' na linha %d coluna %d\n", linha.301_7, coluna.300_6);
  _20 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  strcpy (E2Linha_s_22(D), E2Linha_h_23(D));
  strcpy (E2Linha_sp_25(D), E2Linha_hp_26(D));
  strcpy (E2Linha_sc_28(D), E2Linha_hc_29(D));
  _31 = 1;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  # _8 = PHI <_16(7), _17(8), _18(9), _20(10), _21(11), _31(12)>
  E2_tp ={v} {CLOBBER};
  E2_h ={v} {CLOBBER};
  E2_s ={v} {CLOBBER};
  E2_p ={v} {CLOBBER};
  E2_c ={v} {CLOBBER};
  E2Linha2_h ={v} {CLOBBER};
  E2Linha2_s ={v} {CLOBBER};
  E2Linha2_hp ={v} {CLOBBER};
  E2Linha2_sp ={v} {CLOBBER};
  E2Linha2_hc ={v} {CLOBBER};
  E2Linha2_sc ={v} {CLOBBER};

  <bb 14> :
<L11>:
  return _8;

}



;; Function main (main, funcdef_no=84, decl_uid=5626, cgraph_uid=84, symbol_order=101)

Released 0 names, 0.00%, removed 0 holes
main ()
{
  char colunaSt[3];
  char linhaSt[3];
  int i;
  struct FILE * entrada;
  char c;
  char lex[20];
  char conteudo[20000];
  int D.6608;
  struct FILE * _1;
  int _2;
  int _3;
  int i.334_4;
  int i.335_5;
  int i.336_6;
  int posColuna.337_7;
  int subColuna.338_8;
  int _9;
  int linha.339_10;
  int coluna.340_11;
  int posParser.341_12;
  int posParser.342_13;
  int _14;
  int tk.343_15;
  int posParser.344_16;
  int posParser.345_17;
  int _18;
  int linha.346_19;
  int posParser.347_20;
  int posParser.348_21;
  int _22;
  int coluna.349_23;
  int posParserLex.350_24;
  int posParserLex.351_25;
  int _26;
  char[20] * _27;
  int _28;
  int tk.352_29;
  int _30;
  int _79;

  <bb 2> :
  _1 = __acrt_iob_func (1);
  setbuf (_1, 0B);
  ts = 0B;
  i_43 = 0;
  entrada_45 = fopen ("erroIncompTipo.txt", "r");
  if (entrada_45 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"Arquivo n\xc3\xa3o pode ser aberto"[0]);
  exit (1);

  <bb 4> :
  # i_31 = PHI <i_43(2), i_32(14)>
  _2 = fgetc (entrada_45);
  c_49 = (char) _2;
  _3 = feof (entrada_45);
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  goto <bb 15>; [INV]

  <bb 6> :
  if (c_49 != 9)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  if (c_49 != 10)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (c_49 != 13)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  i.334_4 = i_31;
  i_82 = i.334_4 + 1;
  conteudo[i.334_4] = c_49;
  goto <bb 14>; [INV]

  <bb 10> :
  if (c_49 == 10)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  i.335_5 = i_31;
  i_84 = i.335_5 + 1;
  conteudo[i.335_5] = 127;
  goto <bb 14>; [INV]

  <bb 12> :
  if (c_49 == 9)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  i.336_6 = i_31;
  i_86 = i.336_6 + 1;
  conteudo[i.336_6] = 9;

  <bb 14> :
  # i_32 = PHI <i_82(9), i_84(11), i_31(12), i_86(13)>
  goto <bb 4>; [INV]

  <bb 15> :
  conteudo[i_31] = 0;
  i_52 = 0;
  goto <bb 17>; [INV]

  <bb 16> :
  tksParser[i_33] = -1;
  i_54 = i_33 + 1;

  <bb 17> :
  # i_33 = PHI <i_52(15), i_54(16)>
  if (i_33 <= 999)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  goto <bb 20>; [INV]

  <bb 19> :
  posColuna.337_7 = posColuna;
  subColuna.338_8 = subColuna;
  _9 = posColuna.337_7 - subColuna.338_8;
  coluna = _9;
  linha.339_10 = linha;
  snprintf (&linhaSt, 3, "%d", linha.339_10);
  coluna.340_11 = coluna;
  snprintf (&colunaSt, 3, "%d", coluna.340_11);
  posParser.341_12 = posParser;
  posParser.342_13 = posParser.341_12;
  _14 = posParser.342_13 + 1;
  posParser = _14;
  tk.343_15 = tk;
  tksParser[posParser.342_13] = tk.343_15;
  posParser.344_16 = posParser;
  posParser.345_17 = posParser.344_16;
  _18 = posParser.345_17 + 1;
  posParser = _18;
  linha.346_19 = linha;
  tksParser[posParser.345_17] = linha.346_19;
  posParser.347_20 = posParser;
  posParser.348_21 = posParser.347_20;
  _22 = posParser.348_21 + 1;
  posParser = _22;
  coluna.349_23 = coluna;
  tksParser[posParser.348_21] = coluna.349_23;
  posParserLex.350_24 = posParserLex;
  posParserLex.351_25 = posParserLex.350_24;
  _26 = posParserLex.351_25 + 1;
  posParserLex = _26;
  _27 = &tksParserLex[posParserLex.351_25];
  strcpy (_27, &lex);
  linhaSt ={v} {CLOBBER};
  colunaSt ={v} {CLOBBER};

  <bb 20> :
  _28 = le_token (&conteudo, &lex);
  tk = _28;
  tk.352_29 = tk;
  if (tk.352_29 != -1)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  fclose (entrada_45);
  posParser = 0;
  posParserLex = 0;
  getToken ();
  _30 = PROGC ();
  if (_30 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  __builtin_puts (&"Reconhecimento sint\xc3\xa1tico conclu\xc3\xaddo!"[0]);
  getchar ();
  goto <bb 24>; [INV]

  <bb 23> :
  __builtin_puts (&"Reconhecimento sint\xc3\xa1tico com erros!"[0]);
  getchar ();

  <bb 24> :
  _79 = 0;
  conteudo ={v} {CLOBBER};
  lex ={v} {CLOBBER};

  <bb 25> :
<L26>:
  return _79;

}


